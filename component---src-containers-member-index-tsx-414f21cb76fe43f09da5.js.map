{"version":3,"sources":["webpack:///./src/components/atoms/PositionBadge/index.tsx","webpack:///./src/components/atoms/PositionCounter/index.tsx","webpack:///./src/components/templates/Member/index.tsx","webpack:///./src/containers/Member/index.tsx","webpack:///./src/components/atoms/icons/ArrowBackIcon.tsx","webpack:///./src/components/atoms/locales/LocalizedList/index.tsx"],"names":["PositionBadge","props","history","position","PositionType","Center","Fukujin","Selected","Under","className","styles","container","none","PositionCounter","selected","selectedContainer","style","width","under","center","fukujin","containerVariants","visible","opacity","x","transition","when","hidden","headingVariants","contentContainerVariants","y","staggerChildren","contentVariants","Member","name","names","profileImage","glowStickColor","sites","join","graduation","birthday","height","bloodType","origin","units","corps","photoAlbums","shouldShowPositionCounter","positionsHistory","positionsCounter","gallery","useScrollRestoration","background","Layout","page","div","whileHover","scale","link","onClick","window","back","aria-label","ArrowBackIcon","variants","heading","title","ja","tags","en","furigana","flexBox","profileImageContainer","profileImageWrapper","src","small","srcSet","large","alt","stickColors","backgroundColor","left","GlowStickColorType","None","GLOW_STICK_COLORS","stick","right","content","length","section","subheading","Message","text","websites","map","site","a","key","href","url","target","rel","profile","infoContainer","info","infoItem","infoTitle","infoContent","isGraduated","value","year","month","day","LocalizedList","list","photoAlbum","singleNumber","positionRecord","positionNumber","counter","indicators","indicator","indicatorCaption","index","galleryImageContainer","wrapper","LazyImage","galleryImage","query","MemberContainer","membersJson","data","React","nameNotations","lastName","firstName","lastNameEn","firstNameEn","lastNameFurigana","firstNameFurigana","unit","type","push","filter","uniqueList","singleImages","reverse","image","item","isSeen","viewBox","fill","d","injectIntl","comma","intl","locale","Language","Zh","Ja"],"mappings":"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","file":"component---src-containers-member-index-tsx-414f21cb76fe43f09da5.js","sourcesContent":["import * as React from \"react\";\nimport styles from \"./positionbadge.module.scss\";\nimport { PositionType } from \"utils/constants\";\n\ninterface PositionBadgeProps {\n  position: PositionType;\n}\n\nexport const PositionBadge = (props: PositionBadgeProps) => {\n  let history = \"\";\n  switch (props.position) {\n    case PositionType.Center:\n      history = \"C\";\n      break;\n    case PositionType.Fukujin:\n      history = \"F\";\n      break;\n    case PositionType.Selected:\n      history = \"S\";\n      break;\n    case PositionType.Under:\n      history = \"U\";\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className={styles.container}>\n      {history !== \"\" ? (\n        <span className={`${styles.position} ${styles[`${props.position}`]}`}>\n          {history}\n        </span>\n      ) : (\n        <span className={styles.none} />\n      )}\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport styles from \"./positioncounter.module.scss\";\n\ninterface PositionCounterProps {\n  center: number;\n  fukujin: number;\n  selected: number;\n  under: number;\n}\n\nexport const PositionCounter = (props: PositionCounterProps) => (\n  <div className={styles.container}>\n    {props.selected !== 0 ? (\n      <div\n        className={styles.selectedContainer}\n        style={{\n          width: `${(props.selected / (props.under + props.selected)) * 100}%`,\n        }}\n      >\n        {props.center !== 0 ? (\n          <div\n            className={styles.center}\n            style={{ width: `${(props.center / props.selected) * 100}%` }}\n          >\n            {props.center}\n          </div>\n        ) : null}\n        {props.fukujin - props.center !== 0 ? (\n          <div\n            className={styles.fukujin}\n            style={{\n              width: `${((props.fukujin - props.center) / props.selected) *\n                100}%`,\n            }}\n          >\n            {props.fukujin - props.center}\n          </div>\n        ) : null}\n        {props.selected - props.fukujin !== 0 ? (\n          <div\n            className={styles.selected}\n            style={{\n              width: `${((props.selected - props.fukujin) / props.selected) *\n                100}%`,\n            }}\n          >\n            {props.selected - props.fukujin}\n          </div>\n        ) : null}\n      </div>\n    ) : null}\n    {props.under !== 0 ? (\n      <div\n        className={styles.under}\n        style={{\n          width: `${(props.under / (props.under + props.selected)) * 100}%`,\n        }}\n      >\n        {props.under}\n      </div>\n    ) : null}\n  </div>\n);\n","import * as React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { FormattedDate } from \"react-intl\";\nimport styles from \"./member.module.scss\";\nimport { Layout } from \"components/atoms/Layout\";\nimport { ArrowBackIcon } from \"components/atoms/icons/ArrowBackIcon\";\nimport { useScrollRestoration } from \"utils/hooks\";\nimport { LocalizedList } from \"components/atoms/locales/LocalizedList\";\nimport { PositionBadge } from \"components/atoms/PositionBadge\";\nimport {\n  GLOW_STICK_COLORS,\n  GlowStickColorType,\n  PositionType,\n} from \"utils/constants\";\nimport { PositionCounter } from \"components/atoms/PositionCounter\";\nimport { LazyImage } from \"components/atoms/LazyImage\";\nimport { Message } from \"components/atoms/Message\";\n\nconst containerVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      when: \"beforeChildren\",\n    },\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst headingVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst contentContainerVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      when: \"beforeChildren\",\n      staggerChildren: 0.2,\n    },\n  },\n  hidden: {\n    opacity: 0,\n    y: 20,\n  },\n};\n\nconst contentVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n  },\n  hidden: {\n    opacity: 0,\n    y: -20,\n  },\n};\n\ninterface MemberProps {\n  name: string;\n  names: {\n    ja: string;\n    en: string;\n    furigana: string;\n  };\n  profileImage: {\n    large: string;\n    small: string;\n  };\n  sites: {\n    title: string;\n    url: string;\n  }[];\n  join: string;\n  graduation: {\n    isGraduated: boolean;\n  };\n  birthday: string;\n  height: number;\n  bloodType: string;\n  origin: string;\n  units: string[];\n  corps: string[];\n  glowStickColor: {\n    left: GlowStickColorType;\n    right: GlowStickColorType;\n  };\n  photoAlbums: {\n    title: string;\n  }[];\n  positionsHistory: {\n    position: PositionType;\n    singleNumber: string;\n  }[];\n  shouldShowPositionCounter: boolean;\n  positionsCounter: {\n    center: number;\n    fukujin: number;\n    selected: number;\n    under: number;\n  };\n  gallery: {\n    large: string;\n    small: string;\n  }[];\n}\n\nexport const Member = ({\n  name,\n  names,\n  profileImage,\n  glowStickColor,\n  sites,\n  join,\n  graduation,\n  birthday,\n  height,\n  bloodType,\n  origin,\n  units,\n  corps,\n  photoAlbums,\n  shouldShowPositionCounter,\n  positionsHistory,\n  positionsCounter,\n  gallery,\n}: MemberProps) => {\n  useScrollRestoration();\n\n  return (\n    <div className={styles.background}>\n      <Layout className={styles.page}>\n        <motion.div whileHover={{ x: -7, scale: 1.5 }} className={styles.link}>\n          <button\n            onClick={() => {\n              window.history.back();\n            }}\n            aria-label=\"Go Back\"\n          >\n            <ArrowBackIcon className={styles.back} />\n          </button>\n        </motion.div>\n        <div>\n          <motion.div variants={containerVariants} className={styles.container}>\n            <motion.div variants={headingVariants} className={styles.heading}>\n              <h1 className={styles.title}>{names.ja}</h1>\n              <h4 className={styles.tags}>\n                <span>{names.en}</span>\n                <span>|</span>\n                <span>{names.furigana}</span>\n              </h4>\n            </motion.div>\n            <motion.div\n              variants={contentContainerVariants}\n              className={styles.flexBox}\n            >\n              <motion.div\n                variants={contentVariants}\n                className={styles.profileImageContainer}\n              >\n                <div className={styles.profileImageWrapper}>\n                  <img\n                    src={profileImage.small}\n                    srcSet={`${profileImage.large} 2x`}\n                    alt={name}\n                  />\n                </div>\n                <div className={styles.stickColors}>\n                  <span\n                    style={{\n                      backgroundColor:\n                        glowStickColor.left !== GlowStickColorType.None\n                          ? GLOW_STICK_COLORS[glowStickColor.left]\n                          : \"#ffffff\",\n                    }}\n                    className={styles.stick}\n                  />\n                  <span\n                    style={{\n                      backgroundColor:\n                        glowStickColor.right !== GlowStickColorType.None\n                          ? GLOW_STICK_COLORS[glowStickColor.right]\n                          : \"#ffffff\",\n                    }}\n                    className={styles.stick}\n                  />\n                </div>\n              </motion.div>\n              <motion.div variants={contentVariants} className={styles.content}>\n                {sites.length > 0 ? (\n                  <section className={styles.section}>\n                    <h2 className={styles.subheading}>\n                      <Message text=\"websites\" />\n                    </h2>\n                    <div className={styles.websites}>\n                      {sites.map(site => (\n                        <motion.a\n                          key={site.title}\n                          href={site.url}\n                          target=\"_blank\"\n                          rel=\"noopener\"\n                        >\n                          <Message text={site.title} />\n                        </motion.a>\n                      ))}\n                    </div>\n                  </section>\n                ) : null}\n                <section className={styles.section + \" \" + styles.profile}>\n                  <h2\n                    className={styles.subheading + \" \" + styles.infoContainer}\n                  >\n                    <Message text=\"profile\" />\n                  </h2>\n                  <div className={styles.info}>\n                    <div className={styles.infoItem}>\n                      <span className={styles.infoTitle}>\n                        <Message text=\"join\" />\n                      </span>\n                      <span className={styles.infoContent}>\n                        <Message text={\"join: \" + join} />{\" \"}\n                        {graduation.isGraduated ? (\n                          <span>\n                            (\n                            <Message text=\"graduate\" />)\n                          </span>\n                        ) : null}\n                      </span>\n                    </div>\n                    <div className={styles.infoItem}>\n                      <span className={styles.infoTitle}>\n                        <Message text=\"birthday\" />\n                      </span>\n                      <span className={styles.infoContent}>\n                        <FormattedDate\n                          value={birthday}\n                          year=\"numeric\"\n                          month=\"short\"\n                          day=\"numeric\"\n                        />\n                      </span>\n                    </div>\n                    <div className={styles.infoItem}>\n                      <span className={styles.infoTitle}>\n                        <Message text=\"height\" />\n                      </span>\n                      <span\n                        className={styles.infoContent + \" \" + styles.height}\n                      >\n                        {height} cm\n                      </span>\n                    </div>\n                    <div className={styles.infoItem}>\n                      <span className={styles.infoTitle}>\n                        <Message text=\"blood type\" />\n                      </span>\n                      <span className={styles.infoContent}>\n                        <Message text={bloodType} />\n                      </span>\n                    </div>\n                    <div className={styles.infoItem}>\n                      <span className={styles.infoTitle}>\n                        <Message text=\"birthplace\" />\n                      </span>\n                      <span className={styles.infoContent}>\n                        <Message text={origin} />\n                      </span>\n                    </div>\n                    {units.length > 0 ? (\n                      <div className={styles.infoItem}>\n                        <span className={styles.infoTitle}>\n                          <Message text=\"units\" />\n                        </span>\n                        <span className={styles.infoContent}>\n                          <LocalizedList list={units} />\n                        </span>\n                      </div>\n                    ) : null}\n                    {corps.length > 0 ? (\n                      <div className={styles.infoItem}>\n                        <span className={styles.infoTitle}>\n                          <Message text=\"corps\" />\n                        </span>\n                        <span className={styles.infoContent}>\n                          <LocalizedList list={corps} />\n                        </span>\n                      </div>\n                    ) : null}\n                  </div>\n                </section>\n                {photoAlbums.length > 0 ? (\n                  <section className={styles.section}>\n                    <h2\n                      className={styles.subheading + \" \" + styles.infoContainer}\n                    >\n                      <Message text=\"photo albums\" />\n                    </h2>\n                    <ol className={styles.photoAlbums}>\n                      {photoAlbums.map(photoAlbum => (\n                        <li key={photoAlbum.title}>{photoAlbum.title}</li>\n                      ))}\n                    </ol>\n                  </section>\n                ) : null}\n                {positionsHistory.length > 0 ? (\n                  <section className={styles.section}>\n                    <h2 className={styles.subheading}>\n                      <Message text=\"position history\" />\n                    </h2>\n                    <div className={styles.history}>\n                      {positionsHistory.map(position => (\n                        <div\n                          key={position.singleNumber}\n                          className={styles.positionRecord}\n                        >\n                          <span className={styles.positionNumber}>\n                            {position.singleNumber}\n                          </span>\n                          <PositionBadge position={position.position} />\n                        </div>\n                      ))}\n                    </div>\n                  </section>\n                ) : null}\n                {shouldShowPositionCounter ? (\n                  <section className={styles.section}>\n                    <h2 className={styles.subheading}>\n                      <Message text=\"position counter\" />\n                    </h2>\n                    <div className={styles.counter}>\n                      <div className={styles.indicators}>\n                        <div className={styles.indicator}>\n                          <PositionBadge position={PositionType.Center} />\n                          <span className={styles.indicatorCaption}>\n                            <Message text=\"center\" />\n                          </span>\n                        </div>\n                        <div className={styles.indicator}>\n                          <PositionBadge position={PositionType.Fukujin} />\n                          <span className={styles.indicatorCaption}>\n                            <Message text=\"fukujin\" />\n                          </span>\n                        </div>\n                        <div className={styles.indicator}>\n                          <PositionBadge position={PositionType.Selected} />\n                          <span className={styles.indicatorCaption}>\n                            <Message text=\"selected\" />\n                          </span>\n                        </div>\n                        <div className={styles.indicator}>\n                          <PositionBadge position={PositionType.Under} />\n                          <span className={styles.indicatorCaption}>\n                            <Message text=\"under\" />\n                          </span>\n                        </div>\n                      </div>\n                      <PositionCounter {...positionsCounter} />\n                    </div>\n                  </section>\n                ) : null}\n                {gallery.length > 0 ? (\n                  <section className={styles.section}>\n                    <h2 className={styles.subheading}>\n                      <Message text=\"gallery\" />\n                    </h2>\n                    <div className={styles.gallery}>\n                      {gallery.map((profileImage, index) => (\n                        <div\n                          className={styles.galleryImageContainer}\n                          key={index}\n                        >\n                          <div className={styles.wrapper}>\n                            <LazyImage\n                              src={profileImage.small}\n                              srcSet={profileImage.large + \" 2x\"}\n                              alt={name}\n                              className={styles.galleryImage}\n                            />\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </section>\n                ) : null}\n              </motion.div>\n            </motion.div>\n          </motion.div>\n        </div>\n      </Layout>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { GlowStickColorType, PositionType } from \"utils/constants\";\nimport { Member } from \"components/templates/Member\";\n\nexport const query = graphql`\n  query($name: String!) {\n    membersJson(name: { eq: $name }) {\n      name\n      nameNotations {\n        firstName\n        firstNameEn\n        firstNameFurigana\n        lastName\n        lastNameEn\n        lastNameFurigana\n      }\n      sites {\n        title\n        url\n      }\n      join\n      graduation {\n        isGraduated\n      }\n      birthday\n      height\n      bloodType\n      origin\n      units {\n        name\n        type\n      }\n      glowStickColor {\n        left\n        right\n      }\n      profileImage {\n        large\n        small\n      }\n      photoAlbums {\n        title\n      }\n      positionsHistory {\n        position\n        singleNumber\n      }\n      positionsCounter {\n        center\n        fukujin\n        selected\n        under\n      }\n      singleImages {\n        large\n        small\n      }\n    }\n  }\n`;\n\ninterface MemberData {\n  data: {\n    membersJson: {\n      name: string;\n      nameNotations: {\n        firstName: string;\n        firstNameEn: string;\n        firstNameFurigana: string;\n        lastName: string;\n        lastNameEn: string;\n        lastNameFurigana: string;\n      };\n      sites: {\n        title: string;\n        url: string;\n      }[];\n      join: string;\n      graduation: {\n        isGraduated: boolean;\n      };\n      birthday: string;\n      height: number;\n      bloodType: string;\n      origin: string;\n      units: {\n        name: string;\n        type: string;\n      }[];\n      glowStickColor: {\n        left: GlowStickColorType;\n        right: GlowStickColorType;\n      };\n      profileImage: {\n        large: string;\n        small: string;\n      };\n      photoAlbums: {\n        title: string;\n      }[];\n      positionsHistory: {\n        position: PositionType;\n        singleNumber: string;\n      }[];\n      positionsCounter: {\n        center: number;\n        fukujin: number;\n        selected: number;\n        under: number;\n      };\n      singleImages: {\n        large: string;\n        small: string;\n      }[];\n    };\n  };\n}\n\nconst MemberContainer = ({ data: { membersJson } }: MemberData) => {\n  const names = React.useMemo(\n    () => ({\n      ja:\n        membersJson.nameNotations.lastName +\n        \" \" +\n        membersJson.nameNotations.firstName,\n      en:\n        membersJson.nameNotations.lastNameEn +\n        \" \" +\n        membersJson.nameNotations.firstNameEn,\n      furigana:\n        membersJson.nameNotations.lastNameFurigana +\n        \" \" +\n        membersJson.nameNotations.firstNameFurigana,\n    }),\n    [membersJson.nameNotations]\n  );\n\n  const { units, corps } = React.useMemo(() => {\n    let units = [];\n    let corps = [];\n\n    for (const unit of membersJson.units) {\n      if (unit.type === \"unit\") {\n        units.push(unit.name);\n      } else {\n        corps.push(unit.name);\n      }\n    }\n\n    return {\n      units,\n      corps,\n    };\n  }, [membersJson.units]);\n\n  const positionsHistory = React.useMemo(\n    () =>\n      membersJson.positionsHistory.filter(\n        history => history.position !== \"none\"\n      ),\n    [membersJson.positionsHistory]\n  );\n\n  const shouldShowPositionCounter = React.useMemo(\n    () =>\n      membersJson.positionsCounter.center +\n        membersJson.positionsCounter.fukujin +\n        membersJson.positionsCounter.selected +\n        membersJson.positionsCounter.under >\n      0,\n    [membersJson.positionsCounter]\n  );\n\n  const gallery = React.useMemo(() => {\n    const list = membersJson.singleImages\n      .reverse()\n      .filter(image => image.large !== \"\");\n\n    let uniqueList = [];\n\n    for (const item of list) {\n      let isSeen = false;\n\n      for (const seenItem of uniqueList) {\n        if (seenItem.large === item.large) {\n          isSeen = true;\n          break;\n        }\n      }\n\n      if (!isSeen) {\n        uniqueList.push(item);\n      }\n    }\n\n    return uniqueList;\n  }, [membersJson.singleImages]);\n\n  return membersJson ? (\n    <Member\n      name={membersJson.name}\n      names={names}\n      profileImage={membersJson.profileImage}\n      glowStickColor={membersJson.glowStickColor}\n      sites={membersJson.sites}\n      join={membersJson.join}\n      graduation={membersJson.graduation}\n      birthday={membersJson.birthday}\n      height={membersJson.height}\n      bloodType={membersJson.bloodType}\n      origin={membersJson.origin}\n      units={units}\n      corps={corps}\n      photoAlbums={membersJson.photoAlbums}\n      shouldShowPositionCounter={shouldShowPositionCounter}\n      positionsHistory={positionsHistory}\n      positionsCounter={membersJson.positionsCounter}\n      gallery={gallery}\n    />\n  ) : null;\n};\n\nexport default MemberContainer;\n","import * as React from \"react\";\n\ninterface ArrowBackIconProps {\n  className?: string;\n}\n\nexport const ArrowBackIcon = ({ className }: ArrowBackIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Language } from \"utils/constants\";\n\ninterface LocalizedListProps {\n  list: string[];\n  intl: any;\n}\n\nexport const LocalizedList = injectIntl(\n  ({ list, intl: { locale } }: LocalizedListProps) => {\n    let comma: string;\n    switch (locale) {\n      case Language.Zh:\n        comma = \"、\";\n        break;\n      case Language.Ja:\n        comma = \"、\";\n        break;\n      default:\n        comma = \", \";\n        break;\n    }\n\n    return <>{list.join(comma)}</>;\n  }\n);\n"],"sourceRoot":""}