{"version":3,"sources":["webpack:///./src/pages/search.tsx","webpack:///./src/components/atoms/SearchResultCard/index.tsx","webpack:///./src/components/templates/Search/index.tsx"],"names":["timeout","SearchResultCard","imgSrc","imgSrcSet","title","caption","secondCaption","className","classNames","styles","container","imagePlaceholder","LazyImage","notLazy","src","srcSet","alt","image","text","Search","injectIntl","query","search","results","isSearching","intl","hasNoResult","React","members","length","singles","albums","songs","Layout","SearchIcon","searchIcon","type","value","onChange","placeholder","formatMessage","id","input","noResult","Message","category","categoryTitle","resultCardList","map","result","key","name","resultCard","profileImage","small","large","nameNotations","lastName","firstName","lastNameEn","firstNameEn","artwork","medium","toCdNumber","number","songType","single","album","SearchContainer","setQuery","setResults","setIsSearching","lunr","window","__LUNR__","ja","event","inputQuery","currentTarget","clearTimeout","setTimeout","searchResult","index","extend","ref","store","convertedResults","SearchResultType","Members","push","Singles","Albums","Songs","console","log","forceCheck"],"mappings":"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","file":"component---src-pages-search-tsx-ae405e095aad2dbb577e.js","sourcesContent":["import * as React from \"react\";\nimport { forceCheck } from \"react-lazyload\";\nimport {\n  Search,\n  MemberResult,\n  SingleResult,\n  AlbumResult,\n  SongResult,\n} from \"components/templates/Search\";\nimport { SearchResultType } from \"utils/constants\";\nimport { SongType } from \"types/responseTypes\";\n\nexport type MemberDoc = {\n  id: string;\n  name: string;\n  nameNotations: {\n    lastName: string;\n    firstName: string;\n    lastNameEn: string;\n    firstNameEn: string;\n    lastNameFurigana: string;\n    firstNameFurigana: string;\n  };\n  profileImage: {\n    large: string;\n    small: string;\n  };\n  type: SearchResultType.Members;\n};\n\nexport type SingleDoc = {\n  id: string;\n  name: string;\n  title: string;\n  number: string;\n  artwork: {\n    large: string;\n    medium: string;\n    small: string;\n  };\n  type: SearchResultType.Singles;\n};\n\nexport type AlbumDoc = {\n  id: string;\n  name: string;\n  title: string;\n  number: string;\n  artwork: {\n    large: string;\n    medium: string;\n    small: string;\n  };\n  type: SearchResultType.Albums;\n};\n\nexport type SongDoc = {\n  id: string;\n  name: string;\n  title: string;\n  key: string;\n  artwork: {\n    large: string;\n    medium: string;\n    small: string;\n  };\n  songType: SongType;\n  single: {\n    number: string;\n    title: string;\n  };\n  album: {\n    number: string;\n    title: string;\n  };\n  type: SearchResultType.Songs;\n};\n\nexport type SearchDoc = AlbumDoc | SingleDoc | SongDoc | MemberDoc;\n\nlet timeout: NodeJS.Timeout;\n\nexport const SearchContainer = () => {\n  const [query, setQuery] = React.useState(\"\");\n  const [results, setResults] = React.useState<SearchDoc[]>([]);\n  const [isSearching, setIsSearching] = React.useState(false);\n\n  const lunr = React.useMemo(\n    () => (window as typeof window & { __LUNR__: any }).__LUNR__.ja,\n    []\n  );\n\n  const search = React.useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      const inputQuery = event.currentTarget.value;\n      setQuery(inputQuery);\n\n      setIsSearching(true);\n\n      clearTimeout(timeout);\n\n      timeout = setTimeout(() => {\n        const searchResult =\n          inputQuery !== \"\"\n            ? lunr.index\n                .search(`name:*${inputQuery}*`, { extend: true })\n                .map(({ ref }: any) => lunr.store[ref])\n            : [];\n\n        setResults(searchResult);\n\n        setIsSearching(false);\n      }, 1000);\n    },\n    [lunr]\n  );\n\n  const convertedResults = React.useMemo(() => {\n    let members: MemberResult[] = [];\n    let singles: SingleResult[] = [];\n    let albums: AlbumResult[] = [];\n    let songs: SongResult[] = [];\n\n    for (const result of results) {\n      switch (result.type) {\n        case SearchResultType.Members:\n          members.push({\n            name: result.name,\n            nameNotations: result.nameNotations,\n            profileImage: result.profileImage,\n          });\n          break;\n        case SearchResultType.Singles:\n          singles.push({\n            title: result.title,\n            number: result.number,\n            artwork: result.artwork,\n          });\n          break;\n        case SearchResultType.Albums:\n          albums.push({\n            title: result.title,\n            number: result.number,\n            artwork: result.artwork,\n          });\n          break;\n        case SearchResultType.Songs:\n          songs.push({\n            title: result.title,\n            key: result.key,\n            artwork: result.artwork,\n            songType: result.songType,\n            single: result.single,\n            album: result.album,\n          });\n          break;\n        default:\n          break;\n      }\n    }\n\n    return { members, singles, albums, songs };\n  }, [results]);\n\n  console.log({ query, results });\n\n  React.useEffect(() => {\n    forceCheck();\n  }, [results]);\n\n  return (\n    <Search\n      query={query}\n      search={search}\n      results={convertedResults}\n      isSearching={isSearching}\n    />\n  );\n};\n\nexport default () => <SearchContainer />;\n","import * as React from \"react\";\nimport styles from \"./searchresultcard.module.scss\";\nimport { LazyImage } from \"components/atoms/LazyImage\";\nimport { classNames } from \"utils/strings\";\n\ninterface SearchResultCardProps {\n  imgSrc: string;\n  imgSrcSet: string;\n  title: string;\n  caption: string;\n  secondCaption?: string;\n  className?: string;\n}\n\nexport const SearchResultCard = ({\n  imgSrc,\n  imgSrcSet,\n  title,\n  caption,\n  secondCaption,\n  className,\n}: SearchResultCardProps) => {\n  return (\n    <div className={classNames(styles.container, className)}>\n      <div className={styles.imagePlaceholder}>\n        <LazyImage\n          notLazy\n          src={imgSrc}\n          srcSet={imgSrcSet}\n          alt={title}\n          className={styles.image}\n        />\n      </div>\n      <div className={styles.text}>\n        <h3 className={styles.title}>{title}</h3>\n        <p className={styles.caption}>\n          <span>{caption}</span>\n          {secondCaption ? <span>{secondCaption}</span> : null}\n        </p>\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport styles from \"./search.module.scss\";\nimport { Layout } from \"components/atoms/Layout\";\nimport { SearchResultCard } from \"components/atoms/SearchResultCard\";\nimport { toCdNumber } from \"utils/strings\";\nimport { SearchIcon } from \"components/atoms/icons/SearchIcon\";\nimport { SongType } from \"types/responseTypes\";\nimport { Message } from \"components/atoms/Message\";\n\nexport type MemberResult = {\n  name: string;\n  nameNotations: {\n    lastName: string;\n    firstName: string;\n    lastNameEn: string;\n    firstNameEn: string;\n    lastNameFurigana: string;\n    firstNameFurigana: string;\n  };\n  profileImage: {\n    large: string;\n    small: string;\n  };\n};\n\nexport type SingleResult = {\n  title: string;\n  number: string;\n  artwork: {\n    large: string;\n    medium: string;\n    small: string;\n  };\n};\n\nexport type AlbumResult = {\n  title: string;\n  number: string;\n  artwork: {\n    large: string;\n    medium: string;\n    small: string;\n  };\n};\n\nexport type SongResult = {\n  title: string;\n  key: string;\n  artwork: {\n    large: string;\n    medium: string;\n    small: string;\n  };\n  songType: SongType;\n  single: {\n    number: string;\n    title: string;\n  };\n  album: {\n    number: string;\n    title: string;\n  };\n};\n\ninterface SearchProps {\n  query: string;\n  search(event: React.FormEvent<HTMLInputElement>): void;\n  results: {\n    members: MemberResult[];\n    singles: SingleResult[];\n    albums: AlbumResult[];\n    songs: SongResult[];\n  };\n  isSearching: boolean;\n  intl: any;\n}\n\nexport const Search = injectIntl(\n  ({ query, search, results, isSearching, intl }: SearchProps) => {\n    const hasNoResult = React.useMemo(\n      () =>\n        results.members.length +\n          results.singles.length +\n          results.albums.length +\n          results.songs.length ===\n          0 &&\n        query !== \"\" &&\n        !isSearching,\n      [results, query, isSearching]\n    );\n\n    return (\n      <Layout>\n        <div className={styles.search}>\n          <SearchIcon className={styles.searchIcon} />\n          <input\n            type=\"text\"\n            value={query}\n            onChange={search}\n            placeholder={intl.formatMessage({\n              id: \"Song title, member name, etc.\",\n            })}\n            className={styles.input}\n          />\n        </div>\n        {hasNoResult ? (\n          <p className={styles.noResult}>\n            <Message text=\"no result\" />\n          </p>\n        ) : null}\n        {results.members.length > 0 ? (\n          <div className={styles.category}>\n            <h2 className={styles.categoryTitle}>members</h2>\n            <ul className={styles.resultCardList}>\n              {results.members.map(result => (\n                <li key={result.name} className={styles.resultCard}>\n                  <SearchResultCard\n                    imgSrc={result.profileImage.small}\n                    imgSrcSet={`${result.profileImage.large} 2x`}\n                    title={\n                      result.nameNotations.lastName +\n                      \" \" +\n                      result.nameNotations.firstName\n                    }\n                    caption={\n                      result.nameNotations.lastNameEn +\n                      \" \" +\n                      result.nameNotations.firstNameEn\n                    }\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n        {results.singles.length > 0 ? (\n          <div className={styles.category}>\n            <h2 className={styles.categoryTitle}>Singles</h2>\n            <ul className={styles.resultCardList}>\n              {results.singles.map(result => (\n                <li key={result.title} className={styles.resultCard}>\n                  <SearchResultCard\n                    imgSrc={result.artwork.small}\n                    imgSrcSet={`${result.artwork.medium} 2x, ${result.artwork.large} 3x`}\n                    title={result.title}\n                    caption={toCdNumber(result.number) + \" single\"}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n        {results.albums.length > 0 ? (\n          <div className={styles.category}>\n            <h2 className={styles.categoryTitle}>Albums</h2>\n            <ul className={styles.resultCardList}>\n              {results.albums.map(result => (\n                <li key={result.title} className={styles.resultCard}>\n                  <SearchResultCard\n                    imgSrc={result.artwork.small}\n                    imgSrcSet={`${result.artwork.medium} 2x, ${result.artwork.large} 3x`}\n                    title={result.title}\n                    caption={toCdNumber(result.number) + \" album\"}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n        {results.songs.length > 0 ? (\n          <div className={styles.category}>\n            <h2 className={styles.categoryTitle}>Songs</h2>\n            <ul className={styles.resultCardList}>\n              {results.songs.map(result => (\n                <li key={result.title} className={styles.resultCard}>\n                  <SearchResultCard\n                    imgSrc={result.artwork.small}\n                    imgSrcSet={`${result.artwork.medium} 2x, ${result.artwork.large} 3x`}\n                    title={result.title}\n                    caption={`#${intl.formatMessage({\n                      id: result.songType,\n                    })}`}\n                    secondCaption={\n                      result.single.number !== \"\"\n                        ? `#${toCdNumber(result.single.number)} single`\n                        : `#${toCdNumber(result.album.number)} album`\n                    }\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n      </Layout>\n    );\n  }\n);\n"],"sourceRoot":""}