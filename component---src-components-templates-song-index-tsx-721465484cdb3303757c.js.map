{"version":3,"sources":["webpack:///./src/components/atoms/locales/LocalizedList/index.tsx","webpack:///./src/components/atoms/locales/LocaleNumber/index.tsx","webpack:///./src/components/templates/Song/index.tsx","webpack:///./src/utils/arrays.ts","webpack:///./src/components/atoms/Layout/index.tsx","webpack:///./src/utils/strings.ts","webpack:///./src/components/atoms/icons/ArrowBackIcon.tsx","webpack:///./src/components/atoms/MemberCard/index.tsx"],"names":["LocalizedList","injectIntl","_ref","comma","list","intl","locale","Language","Zh","Ja","react","join","LocalizedNumber","num","type","counter","React","En","toCdNumber","Number","containerVariants","visible","opacity","x","transition","when","hidden","headingVariants","contentContainerVariants","y","staggerChildren","contentVariants","PerformersTag","singleNumber","tagName","includes","className","styles","caption","lib","id","query","Song","_ref2","data","location","backTo","search","_parse","parse","inType","inNumber","console","log","song","songsJson","songTags","concat","single","filter","_ref3","number","map","_ref4","albums","_ref5","membersObj","array","keyField","members","allMembersJson","nodes","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref6","length","next","done","value","member","profileImage","singleImages","Object","assign","apply","item","String","formation","formations","firstRow","secondRow","thirdRow","fourthRow","Layout","framer_motion_es","div","whileHover","scale","link","LocalizedLink","to","ArrowBackIcon","back","onClick","window","history","variants","container","heading","title","tags","tag","index","key","flexbox","artwork","src","medium","srcSet","large","alt","content","section","subheading","performersTag","name","row","rowindex","grid","memberName","MemberCard","nameNotations","image","isCenter","performers","center","creatorscontainer","creators","lyrics","creatorsitem","creatorwork","creatornames","compose","arrange","direct","__webpack_require__","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_layout_module_scss__WEBPACK_IMPORTED_MODULE_1__","_layout_module_scss__WEBPACK_IMPORTED_MODULE_1___default","n","children","remainderByTen","remainderByHundred","width","height","viewBox","fill","highlightBgColor","highlightTextColor","nameText","lastNameEn","firstNameEn","lastName","firstName","hover","backgroundColor","textVariants","color","undefined","react__WEBPACK_IMPORTED_MODULE_2__","framer_motion__WEBPACK_IMPORTED_MODULE_5__","duration","style","react_lazyload__WEBPACK_IMPORTED_MODULE_3___default","a","offset","small"],"mappings":"oPASaA,EAAgBC,YAC3B,SAAAC,GAAoD,IAC9CC,EADHC,EAAiDF,EAAjDE,KAED,OAFkDF,EAA3CG,KAAQC,QAGb,KAAKC,IAASC,GACZL,EAAQ,IACR,MACF,KAAKI,IAASE,GACZN,EAAQ,IACR,MACF,QACEA,EAAQ,KAIZ,OAAOO,EAAA,cAAAA,EAAA,cAAGN,EAAKO,KAAKR,4BCbXS,EAAkBX,YAC7B,SAAAC,GAA2D,IAAxDW,EAAwDX,EAAxDW,IAAKC,EAAmDZ,EAAnDY,KAAcR,EAAqCJ,EAA7CG,KAAQC,OACdS,EAAUC,UAAc,WAC5B,OAAQF,GACN,IAAK,KACH,OAAOR,IAAWC,IAASE,GAAK,IAAM,IACxC,IAAK,MACH,OAAOH,IAAWC,IAASE,GAAK,IAAM,IACxC,QACE,OAAOH,IAAWC,IAASE,GAAK,IAAM,MAEzC,CAACK,IAEJ,OAAIR,IAAWC,IAASU,GACN,OAATH,EACLJ,EAAA,cAAAA,EAAA,cACGQ,YAAWL,GADd,IACqBC,GAGrBJ,EAAA,cAAAA,EAAA,cAAGQ,YAAWL,IAIdM,OAAON,GACLP,IAAWC,IAASE,GACfC,EAAA,cAAAA,EAAA,cAAGG,EAAME,EAAT,KAEFL,EAAA,cAAAA,EAAA,kBAAIG,EAAME,GAGZL,EAAA,cAAAA,EAAA,sECvBX,IAAMU,EAAoB,CACxBC,QAAS,CACPC,QAAS,EACTC,EAAG,EACHC,WAAY,CACVC,KAAM,mBAGVC,OAAQ,CACNJ,QAAS,EACTC,GAAI,KAIFI,EAAkB,CACtBN,QAAS,CACPC,QAAS,EACTC,EAAG,GAELG,OAAQ,CACNJ,QAAS,EACTC,GAAI,KAIFK,EAA2B,CAC/BP,QAAS,CACPC,QAAS,EACTO,EAAG,EACHL,WAAY,CACVC,KAAM,iBACNK,gBAAiB,KAGrBJ,OAAQ,CACNJ,QAAS,EACTO,EAAG,KAIDE,EAAkB,CACtBV,QAAS,CACPC,QAAS,EACTO,EAAG,GAELH,OAAQ,CACNJ,QAAS,EACTO,GAAI,KAIFG,EAAgB/B,YACpB,SAAAC,GAQM,IAPJ+B,EAOI/B,EAPJ+B,aACAC,EAMIhC,EANJgC,QACQ5B,EAKJJ,EALJG,KAAQC,OAMR,MAAgB,KAAZ4B,EACK,KAGLA,EAAQC,SAAS,cAEjBzB,EAAA,mBAAG0B,UAAWC,IAAOC,SAArB,IACG5B,EAAA,cAAC6B,EAAA,EAAsB,CAAEC,GAAIN,KAKpB,aAAZA,GAAsC,UAAZA,EACrB5B,IAAWC,IAASU,GACzBP,EAAA,mBAAG0B,UAAWC,IAAOC,SAArB,IACG5B,EAAA,cAACE,EAAD,CAAiBC,IAAKoB,EAAcnB,KAAK,OAAQ,IAClDJ,EAAA,cAAC6B,EAAA,EAAsB,CAAEC,GAAI,WAAuB,IACpD9B,EAAA,cAAC6B,EAAA,EAAsB,CAAEC,GAAIN,IAAsB,IACnDxB,EAAA,cAAC6B,EAAA,EAAsB,CAAEC,GAAI,aAG/B9B,EAAA,mBAAG0B,UAAWC,IAAOC,SAArB,IACG5B,EAAA,cAACE,EAAD,CAAiBC,IAAKoB,EAAcnB,KAAK,OAC1CJ,EAAA,cAAC6B,EAAA,EAAsB,CAAEC,GAAI,WAC7B9B,EAAA,cAAC6B,EAAA,EAAsB,CAAEC,GAAIN,IAC7BxB,EAAA,cAAC6B,EAAA,EAAsB,CAAEC,GAAI,aAK5B9B,EAAA,mBAAG0B,UAAWC,IAAOC,SAArB,IAAgCJ,KA2R9BO,GAFEC,UA5NF,SAAAC,GAAuD,IAApDC,EAAoDD,EAApDC,KAAMC,EAA8CF,EAA9CE,SACdC,EAAS9B,UAAc,WAC3B,GAAI6B,EAAU,CACZ,IAAMJ,EAAQI,EAASE,OADXC,EAEiBC,gBAAMR,GAA3BS,EAFIF,EAEJE,OAAQC,EAFJH,EAEIG,SAEhB,OAAID,GAAUC,EACZ,IAAWD,EAAX,IAAqBC,EAGhB,GAET,MAAO,IACN,IAIH,GAFAC,QAAQC,IAAI,CAAEP,WAEVF,EAAM,CACR,IAAMU,EAAOV,EAAKW,UAEZC,EAAWxC,UACf,oBAAAyC,OACK,CAACH,EAAKI,QACNC,OAAO,SAAAC,GAAA,MAA2B,KAA3BA,EAAGC,SACVC,IAAI,SAAAC,GAAA,IAAGF,EAAHE,EAAGF,OAAH,UAAoB3C,YAAW2C,GAA/B,YACJP,EAAKU,OAAOF,IAAI,SAAAG,GAAA,IAAGJ,EAAHI,EAAGJ,OAAH,UAAoB3C,YAAW2C,GAA/B,aAErB,CAACP,EAAKI,OAAQJ,EAAKU,SAGfE,EAAalD,UAAc,WAC/B,ICxMJmD,EACAC,EDuMUnC,EAAed,OAAOmC,EAAKI,OAAOG,QAEpCQ,EAAUzB,EAAK0B,eAAeC,MAElCC,EAAqBH,EAArBI,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA8B,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAQ,OAAA,MAAAD,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAS,QAAAC,KAAA,MAAAH,EAAAH,EAAAO,MAAA,IAAnBC,EAAmBL,EACD,KAAvBzB,EAAKI,OAAOG,SACduB,EAAOC,aAAeD,EAAOE,aAAarD,EAAe,IAI7D,OClNJkC,EDkNyBE,ECjNzBD,EDiNkC,OC/MlCmB,OAAOC,OAAPC,MAAAF,OAAM,CAAQ,IAAR9B,OAAeU,EAAML,IAAI,SAAA4B,GAAI,IAAAxF,EAAA,OAAAA,EAAA,IAAQyF,OAAOD,EAAKtB,KAAasB,EAAjCxF,ODgN9B,CAAC0C,EAAK0B,eAAeC,MAAOjB,EAAKI,OAAOG,SAErC+B,EAAY5E,UAChB,iBACE,CACEsC,EAAKuC,WAAWC,SAChBxC,EAAKuC,WAAWE,UAChBzC,EAAKuC,WAAWG,SAChB1C,EAAKuC,WAAWI,WAChBtC,OAAO,SAAAiC,GAAS,OAAIA,EAAUZ,OAAS,KAC3C,CAAC1B,EAAKuC,aAGR,OACEnF,EAAA,cAACwF,EAAA,EAAD,KACExF,EAAA,cAACyF,EAAA,EAAOC,IAAR,CAAYC,WAAY,CAAE9E,GAAI,EAAG+E,MAAO,KAAOlE,UAAWC,IAAOkE,MACnD,KAAXzD,EACCpC,EAAA,cAAC8F,EAAA,EAAD,CAAeC,GAAI3D,GACjBpC,EAAA,cAACgG,EAAA,EAAD,CAAetE,UAAWC,IAAOsE,QAGnCjG,EAAA,wBACEkG,QAAS,WACPC,OAAOC,QAAQH,SAGjBjG,EAAA,cAACgG,EAAA,EAAD,CAAetE,UAAWC,IAAOsE,SAIvCjG,EAAA,yBACGkC,EACClC,EAAA,cAACyF,EAAA,EAAOC,IAAR,CACEW,SAAU3F,EACVgB,UAAWC,IAAO2E,WAElBtG,EAAA,cAACyF,EAAA,EAAOC,IAAR,CAAYW,SAAUpF,EAAiBS,UAAWC,IAAO4E,SACvDvG,EAAA,oBAAI0B,UAAWC,IAAO6E,OAAQ5D,EAAK4D,OACnCxG,EAAA,oBAAI0B,UAAWC,IAAO8E,MACnB3D,EAASM,IAAI,SAACsD,EAAKC,GAAN,OACZ3G,EAAA,sBAAM4G,IAAKD,GAAQD,OAIzB1G,EAAA,cAACyF,EAAA,EAAOC,IAAR,CACEW,SAAUnF,EACVQ,UAAWC,IAAOkF,SAElB7G,EAAA,cAACyF,EAAA,EAAOC,IAAR,CACEW,SAAUhF,EACVK,UAAWC,IAAOmF,SAElB9G,EAAA,qBACE+G,IAAKnE,EAAKkE,QAAQE,OAClBC,OAAWrE,EAAKkE,QAAQI,MAAlB,QACNC,IAAKvE,EAAK4D,SAGdxG,EAAA,cAACyF,EAAA,EAAOC,IAAR,CACEW,SAAUhF,EACVK,UAAWC,IAAOyF,SAElBpH,EAAA,yBAAS0B,UAAWC,IAAO0F,SACzBrH,EAAA,oBAAI0B,UAAWC,IAAO2F,YACpBtH,EAAA,cAAC6B,EAAA,EAAsB,CAAEC,GAAI,gBAE/B9B,EAAA,cAACsB,EAAD,CACEC,aAAcqB,EAAK2E,cAAchG,aACjCC,QAASoB,EAAK2E,cAAcC,OAE9BxH,EAAA,qBAAK0B,UAAWC,IAAOuD,WACpBA,EAAUZ,OAAS,EAClBY,EAAU9B,IAAI,SAACqE,EAAKd,GAAN,OACZ3G,EAAA,qBAAK4G,IAAKD,EAAOjF,UAAWC,IAAO8F,KACjCzH,EAAA,oBAAI0B,UAAWC,IAAO+F,UACpB1H,EAAA,cAACE,EAAD,CAAiBC,IAAKwG,EAAQ,EAAGvG,KAAK,SAExCJ,EAAA,qBAAK0B,UAAWC,IAAOgG,MACpBF,EAAIrE,IAAI,SAAAwE,GACP,IAAMlD,EAASlB,EAAWoE,GAC1B,OACE5H,EAAA,cAAC6H,EAAA,EAAD,CACEjB,IAAKlC,EAAO8C,KACZA,KAAM9C,EAAOoD,cACbC,MAAOrD,EAAOC,aACdqD,SAAUpF,EAAKqF,WAAWC,OAAOzG,SAC/BiD,EAAO8C,cASrBxH,EAAA,qBAAK0B,UAAWC,IAAOgG,MACpBzC,EAAU,GAAG9B,IAAI,SAAAwE,GAChB,IAAMlD,EAASlB,EAAWoE,GAC1B,OACE5H,EAAA,cAAC6H,EAAA,EAAD,CACEjB,IAAKlC,EAAO8C,KACZA,KAAM9C,EAAOoD,cACbC,MAAOrD,EAAOC,aACdqD,SAAUpF,EAAKqF,WAAWC,OAAOzG,SAC/BiD,EAAO8C,aASvBxH,EAAA,yBAAS0B,UAAWC,IAAO0F,SACzBrH,EAAA,oBACE0B,UACEC,IAAO2F,WAAa,IAAM3F,IAAOwG,mBAGnCnI,EAAA,cAAC6B,EAAA,EAAsB,CAAEC,GAAI,cAE/B9B,EAAA,qBAAK0B,UAAWC,IAAOyG,UACpBxF,EAAKwF,SAASC,OAAO/D,OAAS,EAC7BtE,EAAA,qBAAK0B,UAAWC,IAAO2G,cACrBtI,EAAA,sBAAM0B,UAAWC,IAAO4G,aACtBvI,EAAA,cAAC6B,EAAA,EAAsB,CAAEC,GAAI,YAE/B9B,EAAA,sBAAM0B,UAAWC,IAAO6G,cACtBxI,EAAA,cAACV,EAAD,CAAeI,KAAMkD,EAAKwF,SAASC,WAGrC,KACHzF,EAAKwF,SAASK,QAAQnE,OAAS,EAC9BtE,EAAA,qBAAK0B,UAAWC,IAAO2G,cACrBtI,EAAA,sBAAM0B,UAAWC,IAAO4G,aACtBvI,EAAA,cAAC6B,EAAA,EAAsB,CAAEC,GAAI,aAE/B9B,EAAA,sBAAM0B,UAAWC,IAAO6G,cACtBxI,EAAA,cAACV,EAAD,CAAeI,KAAMkD,EAAKwF,SAASK,YAGrC,KACH7F,EAAKwF,SAASM,QAAQpE,OAAS,EAC9BtE,EAAA,qBAAK0B,UAAWC,IAAO2G,cACrBtI,EAAA,sBAAM0B,UAAWC,IAAO4G,aACtBvI,EAAA,cAAC6B,EAAA,EAAsB,CAAEC,GAAI,aAE/B9B,EAAA,sBAAM0B,UAAWC,IAAO6G,cACtBxI,EAAA,cAACV,EAAD,CAAeI,KAAMkD,EAAKwF,SAASM,YAGrC,KACH9F,EAAKwF,SAASO,OAAOrE,OAAS,EAC7BtE,EAAA,qBAAK0B,UAAWC,IAAO2G,cACrBtI,EAAA,sBAAM0B,UAAWC,IAAO4G,aACtBvI,EAAA,cAAC6B,EAAA,EAAsB,CAAEC,GAAI,YAE/B9B,EAAA,sBAAM0B,UAAWC,IAAO6G,cACtBxI,EAAA,cAACV,EAAD,CAAeI,KAAMkD,EAAKwF,SAASO,WAGrC,UAOd3I,EAAA,uCAOV,OAAO,MAKS,gDExYlB4I,EAAAC,EAAAC,EAAA,sBAAAtD,IAAA,IAAAuD,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAAM,EAAAF,GAQaxD,EAAS,SAAAhG,GAAA,IAAG2J,EAAH3J,EAAG2J,SAAUzH,EAAblC,EAAakC,UAAb,OACpBqH,EAAA,qBAAKrH,WAAcA,EAAYA,EAAY,IAAM,IAAKC,IAAO2E,WAC1D6C,wFCRQ3I,EAAa,SAACL,GACzB,IAAMgD,EAAS1C,OAAON,GAEtB,GAAIgD,EAAQ,CACV,IAAMiG,EAAiBjG,EAAS,GAC1BkG,EAAqBlG,EAAS,IACpC,OAAuB,IAAnBiG,GAA+C,KAAvBC,EACnBlJ,EAAM,MAEQ,IAAnBiJ,GAA+C,KAAvBC,EACnBlJ,EAAM,MAEQ,IAAnBiJ,GAA+C,KAAvBC,EACnBlJ,EAAM,MAENA,EAAM,MAIjB,MAAO,2CCrBTyI,EAAAC,EAAAC,EAAA,sBAAA9C,IAAA,IAAA+C,EAAAH,EAAA,GAMa5C,EAAgB,SAAAxG,GAAA,IAAGkC,EAAHlC,EAAGkC,UAAH,OAC3BqH,EAAA,qBAAKO,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAY9H,UAAWA,GACzDqH,EAAA,sBAAMU,KAAK,OAAOZ,EAAE,oBACpBE,EAAA,sBAAMF,EAAE,0NCeChB,EAAatI,YACxB,SAAAC,GAOuB,IANrBuI,EAMqBvI,EANrBuI,MACAP,EAKqBhI,EALrBgI,KACQ5H,EAIaJ,EAJrBG,KAAQC,OACR8J,EAGqBlK,EAHrBkK,iBACAC,EAEqBnK,EAFrBmK,mBACA3B,EACqBxI,EADrBwI,SAEM4B,EAAWtJ,UACf,kBACEV,IAAWC,IAASU,GAChBiH,EAAKqC,WAAa,IAAMrC,EAAKsC,YAC7BtC,EAAKuC,SAAW,IAAMvC,EAAKwC,WACjC,IAGItJ,EAAoBJ,UACxB,kBACEoJ,EACI,CACEO,MAAO,CACLrE,MAAO,KACPsE,gBAAiBR,IAGrB,CACEO,MAAO,CACLrE,MAAO,QAGjB,CAAC8D,IAGGS,EAAe7J,UACnB,kBACEqJ,EACI,CACEM,MAAO,CACLG,MAAOT,SAGXU,GACN,CAACV,IAGH,OACEW,EAAA,cAACC,EAAA,EAAO7E,IAAR,CACEC,WAAW,QACXU,SAAU3F,EACVI,WAAY,CAAE0J,SAAU,IACxBC,MAAOzC,EAAW,CAAEkC,gBAAiB,gBAAcG,EACnD3I,UAAWC,IAAO2E,WAElBgE,EAAA,cAACI,EAAAC,EAAD,CAAUC,OAAQ,KAChBN,EAAA,qBACEvD,IAAKgB,EAAM8C,MACX5D,OAAQc,EAAMb,MAAQ,MACtBC,IAAKyC,EACLlI,UAAWC,IAAOoG,SAGtBuC,EAAA,cAACC,EAAA,EAAO7E,IAAR,CACEW,SAAU8D,EACVrJ,WAAY,CAAE0J,SAAU,IACxBC,MAAOzC,EAAW,CAAEoC,MAAO,gBAAcC,EACzC3I,UAAWC,IAAO6F,MAElB8C,EAAA,0BAAOV","file":"component---src-components-templates-song-index-tsx-721465484cdb3303757c.js","sourcesContent":["import * as React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Language } from \"utils/constants\";\n\ninterface LocalizedListProps {\n  list: string[];\n  intl: any;\n}\n\nexport const LocalizedList = injectIntl(\n  ({ list, intl: { locale } }: LocalizedListProps) => {\n    let comma: string;\n    switch (locale) {\n      case Language.Zh:\n        comma = \"、\";\n        break;\n      case Language.Ja:\n        comma = \"・\";\n        break;\n      default:\n        comma = \", \";\n        break;\n    }\n\n    return <>{list.join(comma)}</>;\n  }\n);\n","import * as React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Language } from \"utils/constants\";\nimport { toCdNumber } from \"utils/strings\";\n\ninterface LocalizedNumberProps {\n  num: string | number;\n  type?: \"cd\" | \"row\";\n  intl: any;\n}\n\nexport const LocalizedNumber = injectIntl(\n  ({ num, type, intl: { locale } }: LocalizedNumberProps) => {\n    const counter = React.useMemo(() => {\n      switch (type) {\n        case \"cd\":\n          return locale === Language.Ja ? \"枚\" : \"张\";\n        case \"row\":\n          return locale === Language.Ja ? \"列\" : \"排\";\n        default:\n          return locale === Language.Ja ? \"枚\" : \"张\";\n      }\n    }, [type]);\n\n    if (locale === Language.En) {\n      return type !== \"cd\" ? (\n        <>\n          {toCdNumber(num)} {type}\n        </>\n      ) : (\n        <>{toCdNumber(num)}</>\n      );\n    }\n\n    if (Number(num)) {\n      if (locale === Language.Ja) {\n        return <>{num + counter}目</>;\n      }\n      return <>第{num + counter}</>;\n    }\n\n    return <>under</>;\n  }\n);\n","import * as React from \"react\";\nimport styles from \"./song.module.scss\";\nimport { Layout } from \"components/atoms/Layout\";\nimport { ArrowBackIcon } from \"components/atoms/icons/ArrowBackIcon\";\nimport { motion } from \"framer-motion\";\nimport { graphql } from \"gatsby\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport { SongType } from \"types/responseTypes\";\nimport { toCdNumber } from \"utils/strings\";\nimport { parse } from \"query-string\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { Language } from \"utils/constants\";\nimport { LocalizedList } from \"components/atoms/locales/LocalizedList\";\nimport { arrayToObject } from \"utils/arrays\";\nimport { MemberCard } from \"components/atoms/MemberCard\";\nimport { LocalizedNumber } from \"components/atoms/locales/LocaleNumber\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\n\nconst containerVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      when: \"beforeChildren\",\n    },\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst headingVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst contentContainerVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      when: \"beforeChildren\",\n      staggerChildren: 0.2,\n    },\n  },\n  hidden: {\n    opacity: 0,\n    y: 20,\n  },\n};\n\nconst contentVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n  },\n  hidden: {\n    opacity: 0,\n    y: -20,\n  },\n};\n\nconst PerformersTag = injectIntl(\n  ({\n    singleNumber,\n    tagName,\n    intl: { locale },\n  }: {\n    singleNumber: string;\n    tagName: string;\n    intl: any;\n  }) => {\n    if (tagName === \"\") {\n      return null;\n    }\n\n    if (tagName.includes(\"generation\")) {\n      return (\n        <p className={styles.caption}>\n          #<FormattedMessage {...({ id: tagName } as any)} />\n        </p>\n      );\n    }\n\n    if (tagName === \"selected\" || tagName === \"under\") {\n      return locale === Language.En ? (\n        <p className={styles.caption}>\n          #<LocalizedNumber num={singleNumber} type=\"cd\" />{\" \"}\n          <FormattedMessage {...({ id: \"single\" } as any)} />{\" \"}\n          <FormattedMessage {...({ id: tagName } as any)} />{\" \"}\n          <FormattedMessage {...({ id: \"members\" } as any)} />\n        </p>\n      ) : (\n        <p className={styles.caption}>\n          #<LocalizedNumber num={singleNumber} type=\"cd\" />\n          <FormattedMessage {...({ id: \"single\" } as any)} />\n          <FormattedMessage {...({ id: tagName } as any)} />\n          <FormattedMessage {...({ id: \"members\" } as any)} />\n        </p>\n      );\n    }\n\n    return <p className={styles.caption}>#{tagName}</p>;\n  }\n);\n\ninterface SongData {\n  data: {\n    songsJson: {\n      title: string;\n      type: SongType;\n      artwork: {\n        large: string;\n        medium: string;\n      };\n      single: {\n        number: string;\n      };\n      albums: {\n        number: string;\n      }[];\n      performersTag: {\n        singleNumber: string;\n        name: string;\n      };\n      performers: {\n        center: string[];\n      };\n      formations: {\n        firstRow: string[];\n        fourthRow: string[];\n        secondRow: string[];\n        thirdRow: string[];\n      };\n      creators: {\n        arrange: string[];\n        compose: string[];\n        direct: string[];\n        lyrics: string[];\n      };\n    };\n    allMembersJson: {\n      nodes: {\n        name: string;\n        nameNotations: {\n          lastName: string;\n          firstName: string;\n          lastNameEn: string;\n          firstNameEn: string;\n        };\n        profileImage: {\n          large: string;\n          small: string;\n        };\n        singleImages: {\n          large: string;\n          small: string;\n        }[];\n      }[];\n    };\n  };\n}\n\nconst Song = ({ data, location }: RouteComponentProps<SongData>) => {\n  const backTo = React.useMemo(() => {\n    if (location) {\n      const query = location.search;\n      const { inType, inNumber } = parse(query);\n\n      if (inType && inNumber) {\n        return `/${inType}/${inNumber}`;\n      }\n\n      return \"\";\n    }\n    return \"\";\n  }, []);\n\n  console.log({ backTo });\n\n  if (data) {\n    const song = data.songsJson;\n\n    const songTags = React.useMemo(\n      () => [\n        ...[song.single]\n          .filter(({ number }) => number !== \"\")\n          .map(({ number }) => `#${toCdNumber(number)} single`),\n        ...song.albums.map(({ number }) => `#${toCdNumber(number)} album`),\n      ],\n      [song.single, song.albums]\n    );\n\n    const membersObj = React.useMemo(() => {\n      const singleNumber = Number(song.single.number);\n\n      let members = data.allMembersJson.nodes;\n\n      for (const member of members) {\n        if (song.single.number !== \"\") {\n          member.profileImage = member.singleImages[singleNumber - 1];\n        }\n      }\n\n      return arrayToObject(members, \"name\");\n    }, [data.allMembersJson.nodes, song.single.number]);\n\n    const formation = React.useMemo(\n      () =>\n        [\n          song.formations.firstRow,\n          song.formations.secondRow,\n          song.formations.thirdRow,\n          song.formations.fourthRow,\n        ].filter(formation => formation.length > 0),\n      [song.formations]\n    );\n\n    return (\n      <Layout>\n        <motion.div whileHover={{ x: -7, scale: 1.5 }} className={styles.link}>\n          {backTo !== \"\" ? (\n            <LocalizedLink to={backTo}>\n              <ArrowBackIcon className={styles.back} />\n            </LocalizedLink>\n          ) : (\n            <button\n              onClick={() => {\n                window.history.back();\n              }}\n            >\n              <ArrowBackIcon className={styles.back} />\n            </button>\n          )}\n        </motion.div>\n        <div>\n          {data ? (\n            <motion.div\n              variants={containerVariants}\n              className={styles.container}\n            >\n              <motion.div variants={headingVariants} className={styles.heading}>\n                <h1 className={styles.title}>{song.title}</h1>\n                <h4 className={styles.tags}>\n                  {songTags.map((tag, index) => (\n                    <span key={index}>{tag}</span>\n                  ))}\n                </h4>\n              </motion.div>\n              <motion.div\n                variants={contentContainerVariants}\n                className={styles.flexbox}\n              >\n                <motion.div\n                  variants={contentVariants}\n                  className={styles.artwork}\n                >\n                  <img\n                    src={song.artwork.medium}\n                    srcSet={`${song.artwork.large} 1.5x`}\n                    alt={song.title}\n                  />\n                </motion.div>\n                <motion.div\n                  variants={contentVariants}\n                  className={styles.content}\n                >\n                  <section className={styles.section}>\n                    <h2 className={styles.subheading}>\n                      <FormattedMessage {...({ id: \"performers\" } as any)} />\n                    </h2>\n                    <PerformersTag\n                      singleNumber={song.performersTag.singleNumber}\n                      tagName={song.performersTag.name}\n                    />\n                    <div className={styles.formation}>\n                      {formation.length > 1 ? (\n                        formation.map((row, index) => (\n                          <div key={index} className={styles.row}>\n                            <h4 className={styles.rowindex}>\n                              <LocalizedNumber num={index + 1} type=\"row\" />\n                            </h4>\n                            <div className={styles.grid}>\n                              {row.map(memberName => {\n                                const member = membersObj[memberName];\n                                return (\n                                  <MemberCard\n                                    key={member.name}\n                                    name={member.nameNotations}\n                                    image={member.profileImage}\n                                    isCenter={song.performers.center.includes(\n                                      member.name\n                                    )}\n                                  />\n                                );\n                              })}\n                            </div>\n                          </div>\n                        ))\n                      ) : (\n                        <div className={styles.grid}>\n                          {formation[0].map(memberName => {\n                            const member = membersObj[memberName];\n                            return (\n                              <MemberCard\n                                key={member.name}\n                                name={member.nameNotations}\n                                image={member.profileImage}\n                                isCenter={song.performers.center.includes(\n                                  member.name\n                                )}\n                              />\n                            );\n                          })}\n                        </div>\n                      )}\n                    </div>\n                  </section>\n                  <section className={styles.section}>\n                    <h2\n                      className={\n                        styles.subheading + \" \" + styles.creatorscontainer\n                      }\n                    >\n                      <FormattedMessage {...({ id: \"creators\" } as any)} />\n                    </h2>\n                    <div className={styles.creators}>\n                      {song.creators.lyrics.length > 0 ? (\n                        <div className={styles.creatorsitem}>\n                          <span className={styles.creatorwork}>\n                            <FormattedMessage {...({ id: \"lyrics\" } as any)} />\n                          </span>\n                          <span className={styles.creatornames}>\n                            <LocalizedList list={song.creators.lyrics} />\n                          </span>\n                        </div>\n                      ) : null}\n                      {song.creators.compose.length > 0 ? (\n                        <div className={styles.creatorsitem}>\n                          <span className={styles.creatorwork}>\n                            <FormattedMessage {...({ id: \"compose\" } as any)} />\n                          </span>\n                          <span className={styles.creatornames}>\n                            <LocalizedList list={song.creators.compose} />\n                          </span>\n                        </div>\n                      ) : null}\n                      {song.creators.arrange.length > 0 ? (\n                        <div className={styles.creatorsitem}>\n                          <span className={styles.creatorwork}>\n                            <FormattedMessage {...({ id: \"arrange\" } as any)} />\n                          </span>\n                          <span className={styles.creatornames}>\n                            <LocalizedList list={song.creators.arrange} />\n                          </span>\n                        </div>\n                      ) : null}\n                      {song.creators.direct.length > 0 ? (\n                        <div className={styles.creatorsitem}>\n                          <span className={styles.creatorwork}>\n                            <FormattedMessage {...({ id: \"direct\" } as any)} />\n                          </span>\n                          <span className={styles.creatornames}>\n                            <LocalizedList list={song.creators.direct} />\n                          </span>\n                        </div>\n                      ) : null}\n                    </div>\n                  </section>\n                </motion.div>\n              </motion.div>\n            </motion.div>\n          ) : (\n            <h1>Song Page</h1>\n          )}\n        </div>\n      </Layout>\n    );\n  }\n\n  return null;\n};\n\nexport default Song;\n\nexport const query = graphql`\n  query($key: String!) {\n    songsJson(key: { eq: $key }) {\n      title\n      type\n      artwork {\n        large\n        medium\n      }\n      single {\n        number\n      }\n      albums {\n        number\n      }\n      performersTag {\n        singleNumber\n        name\n      }\n      performers {\n        center\n      }\n      formations {\n        firstRow\n        fourthRow\n        secondRow\n        thirdRow\n      }\n      creators {\n        arrange\n        compose\n        direct\n        lyrics\n      }\n    }\n    allMembersJson {\n      nodes {\n        name\n        nameNotations {\n          firstName\n          firstNameEn\n          lastName\n          lastNameEn\n        }\n        profileImage {\n          large\n          small\n        }\n        singleImages {\n          large\n          small\n        }\n      }\n    }\n  }\n`;\n","export const arrayToObject = <T>(\n  array: T[],\n  keyField: keyof T\n): { [key: string]: T } =>\n  Object.assign({}, ...array.map(item => ({ [String(item[keyField])]: item })));\n\nexport const sortByDate = <T>(\n  array: T[],\n  keyField: keyof T,\n  order: \"asc\" | \"desc\"\n): T[] =>\n  array\n    .slice()\n    .sort((itemA, itemB) =>\n      order === \"asc\"\n        ? new Date(itemA[keyField] as any).getTime() -\n          new Date(itemB[keyField] as any).getTime()\n        : new Date(itemB[keyField] as any).getTime() -\n          new Date(itemA[keyField] as any).getTime()\n    );\n","import * as React from \"react\";\nimport styles from \"./layout.module.scss\";\n\ninterface LayoutProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Layout = ({ children, className }: LayoutProps) => (\n  <div className={`${className ? className + \" \" : \"\"}${styles.container}`}>\n    {children}\n  </div>\n);\n","import { Language } from \"utils/constants\";\n\nexport const toCdNumber = (num: string | number) => {\n  const number = Number(num);\n\n  if (number) {\n    const remainderByTen = number % 10;\n    const remainderByHundred = number % 100;\n    if (remainderByTen === 1 && remainderByHundred !== 11) {\n      return num + \"st.\";\n    }\n    if (remainderByTen === 2 && remainderByHundred !== 12) {\n      return num + \"nd.\";\n    }\n    if (remainderByTen === 3 && remainderByHundred !== 13) {\n      return num + \"rd.\";\n    } else {\n      return num + \"th.\";\n    }\n  }\n\n  return \"Under\";\n};\n\nexport const toNumberWithLocale = (\n  num: string,\n  language: string,\n  type?: \"cd\" | \"row\"\n) => {\n  let counter = {\n    ja: \"\",\n    zh: \"\",\n  };\n\n  switch (type) {\n    case \"cd\":\n      counter = {\n        ja: \"枚\",\n        zh: \"张\",\n      };\n      break;\n    case \"row\":\n      counter = {\n        ja: \"列\",\n        zh: \"排\",\n      };\n      break;\n    default:\n      counter = {\n        ja: \"枚\",\n        zh: \"张\",\n      };\n      break;\n  }\n\n  if (language === Language.En) {\n    return toCdNumber(num);\n  }\n\n  const number = Number(num);\n\n  if (number) {\n    if (language === Language.Ja) {\n      return num + counter + \"目\";\n    }\n    return \"第\" + num + counter;\n  }\n\n  return \"under\";\n};\n","import * as React from \"react\";\n\ninterface ArrowBackIconProps {\n  className?: string;\n}\n\nexport const ArrowBackIcon = ({ className }: ArrowBackIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport LazyLoad from \"react-lazyload\";\nimport styles from \"./membercard.module.scss\";\nimport { motion } from \"framer-motion\";\nimport { injectIntl } from \"react-intl\";\nimport { Language } from \"utils/constants\";\n\ninterface MemberCardProps {\n  image: {\n    large: string;\n    small: string;\n  };\n  name: {\n    lastName: string;\n    firstName: string;\n    lastNameEn: string;\n    firstNameEn: string;\n  };\n  highlightBgColor?: string;\n  highlightTextColor?: string;\n  isCenter?: boolean;\n  intl: any;\n}\n\nexport const MemberCard = injectIntl(\n  ({\n    image,\n    name,\n    intl: { locale },\n    highlightBgColor,\n    highlightTextColor,\n    isCenter,\n  }: MemberCardProps) => {\n    const nameText = React.useMemo(\n      () =>\n        locale === Language.En\n          ? name.lastNameEn + \" \" + name.firstNameEn\n          : name.lastName + \" \" + name.firstName,\n      []\n    );\n\n    const containerVariants = React.useMemo(\n      () =>\n        highlightBgColor\n          ? {\n              hover: {\n                scale: 1.08,\n                backgroundColor: highlightBgColor,\n              },\n            }\n          : {\n              hover: {\n                scale: 1.08,\n              },\n            },\n      [highlightBgColor]\n    );\n\n    const textVariants = React.useMemo(\n      () =>\n        highlightTextColor\n          ? {\n              hover: {\n                color: highlightTextColor,\n              },\n            }\n          : undefined,\n      [highlightTextColor]\n    );\n\n    return (\n      <motion.div\n        whileHover=\"hover\"\n        variants={containerVariants}\n        transition={{ duration: 0.3 }}\n        style={isCenter ? { backgroundColor: \"#af7dce\" } : undefined}\n        className={styles.container}\n      >\n        <LazyLoad offset={100}>\n          <img\n            src={image.small}\n            srcSet={image.large + \" 2x\"}\n            alt={nameText}\n            className={styles.image}\n          />\n        </LazyLoad>\n        <motion.div\n          variants={textVariants}\n          transition={{ duration: 0.3 }}\n          style={isCenter ? { color: \"#ffffff\" } : undefined}\n          className={styles.name}\n        >\n          <span>{nameText}</span>\n        </motion.div>\n      </motion.div>\n    );\n  }\n);\n"],"sourceRoot":""}