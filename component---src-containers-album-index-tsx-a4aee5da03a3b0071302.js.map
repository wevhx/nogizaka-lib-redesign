{"version":3,"sources":["webpack:///./src/containers/Album/index.tsx","webpack:///./src/components/atoms/icons/ArrowBackIcon.tsx","webpack:///./src/components/atoms/Track/index.tsx","webpack:///./src/components/atoms/icons/ArrowLeftIcon.tsx","webpack:///./src/components/atoms/icons/ArrowRightIcon.tsx","webpack:///./src/components/molecules/Artworks/index.tsx","webpack:///./src/components/templates/Cd/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","types_responseTypes__WEBPACK_IMPORTED_MODULE_1__","components_templates_Cd__WEBPACK_IMPORTED_MODULE_2__","AlbumContainer","_ref","albumsJson","data","type","CdType","Albums","title","number","artworks","songs","release","ArrowBackIcon","className","width","height","viewBox","fill","containerVariants","hover","backgroundColor","transition","duration","textVariants","color","Track","injectIntl","locale","intl","focusPerformers","songKey","focusPerformersText","React","comma","Language","Zh","Ja","name","length","FocusPerformersType","Center","reduce","acc","curr","react","framer_motion_es","div","whileHover","variants","classNames","styles","container","LocalizedLink","to","span","content","h3","description","lib","id","ArrowLeftIcon","ArrowRightIcon","Artworks","_React$useState","artworkIndex","setArtworkIndex","handleClickNextArtwork","handleClickPreviousArtwork","handleClickImage","artwork","button","scale","x","onClick","aria-label","ArrowLeftIcon_ArrowLeftIcon","arrow","images","map","index","img","key","animate","opacity","src","medium","srcSet","large","alt","image","ArrowRightIcon_ArrowRightIcon","indicator","_","style","dot","visible","when","hidden","headingVariants","contentContainerVariants","y","staggerChildren","contentVariants","Cd","useScrollRestoration","background","Layout","link","Singles","Links","label","back","heading","toCdNumber","slice","flexbox","Artworks_Artworks","section","subheading","tracklist","song","track","value","year","month","day"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,KAKaI,EAAK,aAgEHI,UAbQ,SAAAC,GAAyC,IAA9BC,EAA8BD,EAAtCE,KAAQD,WAChC,OAAOA,EACLL,EAAA,cAACE,EAAA,EAAD,CACEK,KAAMC,IAAOC,OACbC,MAAOL,EAAWK,MAClBC,OAAQN,EAAWM,OACnBC,SAAUP,EAAWO,SACrBC,MAAOR,EAAWQ,MAClBC,QAAST,EAAWS,UAEpB,wCClENnB,EAAAG,EAAAD,EAAA,sBAAAkB,IAAA,IAAAf,EAAAL,EAAA,GAMaoB,EAAgB,SAAAX,GAAA,IAAGY,EAAHZ,EAAGY,UAAH,OAC3BhB,EAAA,qBAAKiB,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYH,UAAWA,GACzDhB,EAAA,sBAAMoB,KAAK,OAAOtB,EAAE,oBACpBE,EAAA,sBAAMF,EAAE,kNCANuB,EAAoB,CACxBC,MAAO,CAAEC,gBAAiB,UAAWC,WAAY,CAAEC,SAAU,MAGzDC,EAAe,CACnBJ,MAAO,CAAEK,MAAO,UAAWH,WAAY,CAAEC,SAAU,MAgBxCG,EAAQC,YACnB,SAAAzB,GAQkB,IAPR0B,EAOQ1B,EAPhB2B,KAAQD,OACRE,EAMgB5B,EANhB4B,gBACAC,EAKgB7B,EALhB6B,QACAtB,EAIgBP,EAJhBO,OACAD,EAGgBN,EAHhBM,MACAH,EAEgBH,EAFhBG,KACAS,EACgBZ,EADhBY,UAEMkB,EAAsBC,UAAc,WACxC,IAAIC,EACJ,OAAQN,GACN,KAAKO,IAASC,GACZF,EAAQ,IACR,MACF,KAAKC,IAASE,GACZH,EAAQ,IACR,MACF,QACEA,EAAQ,KAIZ,OAAIJ,EAAgBQ,KAAKC,OAAS,EAC5BT,EAAgBzB,OAASmC,IAAoBC,OAE7C,MACAX,EAAgBQ,KAAKI,OAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMT,EAAQU,IAGtDd,EAAgBQ,KAAKI,OAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMT,EAAQU,IAE3D,IACN,CAACd,EAAiBF,IAErB,MAAmB,aAAZG,EACLc,EAAA,cAACC,EAAA,EAAOC,IAAR,CACEC,WAAW,QACXC,SAAU9B,EACVL,UAAWoC,YAAWC,IAAOC,UAAWtC,IAExC+B,EAAA,cAACQ,EAAA,EAAD,CAAeC,GAAE,UAAYvB,GAC3Bc,EAAA,cAACC,EAAA,EAAOS,KAAR,CAAaN,SAAUzB,EAAcV,UAAWqC,IAAO1C,QACpDA,EADH,KAGAoC,EAAA,qBAAK/B,UAAWqC,IAAOK,SACrBX,EAAA,cAACC,EAAA,EAAOW,GAAR,CAAWR,SAAUzB,EAAcV,UAAWqC,IAAO3C,OAClDA,GAEHqC,EAAA,cAACC,EAAA,EAAOC,IAAR,CAAYE,SAAUzB,EAAcV,UAAWqC,IAAOO,aACpDb,EAAA,8BACGA,EAAA,cAACc,EAAA,EAAsB,CAAEC,GAAIvD,KAEhCwC,EAAA,0BAAOb,OAMfa,EAAA,qBAAK/B,UAAWoC,YAAWC,IAAOC,UAAWtC,IAC3C+B,EAAA,sBAAM/B,UAAWqC,IAAO1C,QAASA,EAAjC,KACAoC,EAAA,qBAAK/B,UAAWqC,IAAOK,SACrBX,EAAA,oBAAI/B,UAAWqC,IAAO3C,OAAQA,GAC9BqC,EAAA,qBAAK/B,UAAWqC,IAAOO,aACrBb,EAAA,8BACGA,EAAA,cAACc,EAAA,EAAsB,CAAEC,GAAIvD,KAEhCwC,EAAA,0BAAOb,0BC5FN6B,EAAgB,SAAA3D,GAAA,IAAGY,EAAHZ,EAAGY,UAAH,OAC3B+B,EAAA,qBAAK9B,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYH,UAAWA,GACzD+B,EAAA,sBAAM3B,KAAK,OAAOtB,EAAE,oBACpBiD,EAAA,sBAAMjD,EAAE,+DCHCkE,EAAiB,SAAA5D,GAAA,IAAGY,EAAHZ,EAAGY,UAAH,OAC5B+B,EAAA,qBAAK9B,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYH,UAAWA,GACzD+B,EAAA,sBAAM3B,KAAK,OAAOtB,EAAE,oBACpBiD,EAAA,sBAAMjD,EAAE,6DCOCmE,EAAW,SAAA7D,GAAmD,IAAhDQ,EAAgDR,EAAhDQ,SAAUF,EAAsCN,EAAtCM,MAAOM,EAA+BZ,EAA/BY,UAA+BkD,EACjC/B,WAAe,GAAhDgC,EADkED,EAAA,GACpDE,EADoDF,EAAA,GAGnEG,EAAyBlC,cAAkB,WAC3CgC,EAAevD,EAAS6B,OAAS,GACnC2B,EAAgBD,EAAe,IAEhC,CAACvD,EAAUuD,IAERG,EAA6BnC,cAAkB,WAC/CgC,EAAe,GACjBC,EAAgBD,EAAe,IAEhC,CAACvD,EAAUuD,IAERI,EAAmBpC,cAAkB,WACrCgC,EAAevD,EAAS6B,OAAS,EACnC2B,EAAgBD,EAAe,GAE/BC,EAAgB,IAEjB,CAACxD,EAAUuD,IAEd,OACEpB,EAAA,qBAAK/B,UAAWoC,YAAWC,IAAOC,UAAWtC,IAC3C+B,EAAA,qBAAK/B,UAAWqC,IAAOmB,SACrBzB,EAAA,cAACC,EAAA,EAAOyB,OAAR,CACEvB,WAAY,CAAEwB,MAAO,EAAGC,GAAI,GAC5BC,QAASN,EACTO,aAAW,oBAEX9B,EAAA,cAAC+B,EAAD,CAAe9D,UAAWqC,IAAO0B,SAEnChC,EAAA,cAACC,EAAA,EAAOC,IAAR,CAAYC,WAAY,CAAEwB,MAAO,MAAQ1D,UAAWqC,IAAO2B,QACxDpE,EAASqE,IAAI,SAACT,EAASU,GAAV,OACZnC,EAAA,cAACC,EAAA,EAAOmC,IAAR,CACEC,IAAKF,EACLG,QACElB,IAAiBe,EACb,CAAEI,QAAS,EAAGZ,MAAO,GACrB,CAAEY,QAAS,EAAGZ,MAAO,IAE3Ba,IAAKf,EAAQgB,OACbC,OAAWjB,EAAQkB,MAAb,QACNC,IAAKjF,EACLkE,QAASL,EACTvD,UAAWqC,IAAOuC,WAIxB7C,EAAA,cAACC,EAAA,EAAOyB,OAAR,CACEvB,WAAY,CAAEwB,MAAO,EAAGC,EAAG,GAC3BC,QAASP,EACTQ,aAAW,gBAEX9B,EAAA,cAAC8C,EAAD,CAAgB7E,UAAWqC,IAAO0B,UAGtChC,EAAA,qBAAK/B,UAAWqC,IAAOyC,WACpBlF,EAASqE,IAAI,SAACc,EAAGb,GAAJ,OACZnC,EAAA,wBACEqC,IAAKF,EACLN,QAAS,kBAAMR,EAAgBc,IAC/BL,aAAW,gBAEX9B,EAAA,qBACEiD,MAAO,CACLzE,gBAAiB2D,IAAUf,EAAe,UAAY,WAExDnD,UAAWqC,IAAO4C,uECvEhC,IAAM5E,EAAoB,CACxB6E,QAAS,CACPZ,QAAS,EACTX,EAAG,EACHnD,WAAY,CACV2E,KAAM,mBAGVC,OAAQ,CACNd,QAAS,EACTX,GAAI,KAIF0B,EAAkB,CACtBH,QAAS,CACPZ,QAAS,EACTX,EAAG,GAELyB,OAAQ,CACNd,QAAS,EACTX,GAAI,KAIF2B,EAA2B,CAC/BJ,QAAS,CACPZ,QAAS,EACTiB,EAAG,EACH/E,WAAY,CACV2E,KAAM,iBACNK,gBAAiB,KAGrBJ,OAAQ,CACNd,QAAS,EACTiB,EAAG,KAIDE,EAAkB,CACtBP,QAAS,CACPZ,QAAS,EACTiB,EAAG,GAELH,OAAQ,CACNd,QAAS,EACTiB,GAAI,KAwBKG,EAAK,SAAAtG,GAOH,IANbG,EAMaH,EANbG,KACAG,EAKaN,EALbM,MACAC,EAIaP,EAJbO,OACAC,EAGaR,EAHbQ,SACAC,EAEaT,EAFbS,MACAC,EACaV,EADbU,QAIA,OAFA6F,cAGE5D,EAAA,qBAAK/B,UAAWqC,IAAOuD,YACrB7D,EAAA,cAAC8D,EAAA,EAAD,KACE9D,EAAA,cAACC,EAAA,EAAOC,IAAR,CAAYC,WAAY,CAAEyB,GAAI,EAAGD,MAAO,KAAO1D,UAAWqC,IAAOyD,MAC/D/D,EAAA,cAACQ,EAAA,EAAD,CACEC,GAAIjD,IAASC,IAAOuG,QAAUC,IAAMD,QAAUC,IAAMvG,OACpDwG,MAAM,QAENlE,EAAA,cAAChC,EAAA,EAAD,CAAeC,UAAWqC,IAAO6D,SAGrCnE,EAAA,cAACC,EAAA,EAAOC,IAAR,CAAYE,SAAU9B,EAAmBL,UAAWqC,IAAOC,WACzDP,EAAA,cAACC,EAAA,EAAOC,IAAR,CAAYE,SAAUkD,EAAiBrF,UAAWqC,IAAO8D,SACvDpE,EAAA,oBAAI/B,UAAWqC,IAAO1C,QACnByG,YAAWzG,GADd,IACwBJ,EAAK8G,MAAM,GAAI,IAEvCtE,EAAA,oBAAI/B,UAAWqC,IAAO3C,OAAQA,IAEhCqC,EAAA,cAACC,EAAA,EAAOC,IAAR,CACEE,SAAUmD,EACVtF,UAAWqC,IAAOiE,SAElBvE,EAAA,cAACC,EAAA,EAAOC,IAAR,CAAYE,SAAUsD,EAAiBzF,UAAWqC,IAAOzC,UACvDmC,EAAA,cAACwE,EAAD,CAAU3G,SAAUA,EAAUF,MAAOA,KAEvCqC,EAAA,cAACC,EAAA,EAAOC,IAAR,CAAYE,SAAUsD,EAAiBzF,UAAWqC,IAAOK,SACvDX,EAAA,yBAAS/B,UAAWqC,IAAOmE,SACzBzE,EAAA,oBAAI/B,UAAWqC,IAAOoE,YACpB1E,EAAA,cAACc,EAAA,EAAsB,CAAEC,GAAI,WAE/Bf,EAAA,oBAAI/B,UAAWqC,IAAOqE,WACnB7G,EAAMoE,IAAI,SAAC0C,EAAMzC,GAAP,OACTnC,EAAA,oBAAIqC,IAAKuC,EAAKvC,IAAKpE,UAAWqC,IAAOuE,OACnC7E,EAAA,cAACnB,EAAD,CACEK,QAAS0F,EAAKvC,IACdzE,OAAQuE,EAAQ,EAChBxE,MAAOiH,EAAKjH,MACZH,KAAMoH,EAAKpH,KACXyB,gBAAiB2F,EAAK3F,uBAMhCe,EAAA,yBAAS/B,UAAWqC,IAAOmE,SACzBzE,EAAA,oBAAI/B,UAAWqC,IAAOoE,YACpB1E,EAAA,cAACc,EAAA,EAAsB,CAAEC,GAAI,aAE/Bf,EAAA,mBAAG/B,UAAWqC,IAAOvC,SACnBiC,EAAA,cAACc,EAAA,EAAD,CACEgE,MAAO/G,EACPgH,KAAK,UACLC,MAAM,QACNC,IAAI","file":"component---src-containers-album-index-tsx-a4aee5da03a3b0071302.js","sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { SongType, FocusPerformersType, CdType } from \"types/responseTypes\";\nimport { Cd } from \"components/templates/Cd\";\n\nexport const query = graphql`\n  query($number: String!) {\n    albumsJson(number: { eq: $number }) {\n      title\n      number\n      artworks {\n        large\n        medium\n      }\n      songs {\n        key\n        title\n        type\n        focusPerformers {\n          name\n          type\n        }\n      }\n      release\n    }\n  }\n`;\n\ninterface AlbumJson {\n  data: {\n    albumsJson: {\n      title: string;\n      number: string;\n      artworks: {\n        large: string;\n        medium: string;\n      }[];\n      songs: {\n        key: string;\n        title: string;\n        type: SongType;\n        focusPerformers: {\n          name: string[];\n          type: FocusPerformersType;\n        };\n      }[];\n      release: string;\n    };\n  };\n  pageContext: {\n    cdType: CdType;\n    number: string;\n    locale: string;\n  };\n}\n\nconst AlbumContainer = ({ data: { albumsJson } }: AlbumJson) => {\n  return albumsJson ? (\n    <Cd\n      type={CdType.Albums}\n      title={albumsJson.title}\n      number={albumsJson.number}\n      artworks={albumsJson.artworks}\n      songs={albumsJson.songs}\n      release={albumsJson.release}\n    />\n  ) : null;\n};\n\nexport default AlbumContainer;\n","import * as React from \"react\";\n\ninterface ArrowBackIconProps {\n  className?: string;\n}\n\nexport const ArrowBackIcon = ({ className }: ArrowBackIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport styles from \"./track.module.scss\";\nimport { FocusPerformersType, SongType } from \"types/responseTypes\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { Language } from \"utils/constants\";\nimport { motion } from \"framer-motion\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\nimport { classNames } from \"utils/strings\";\n\nconst containerVariants = {\n  hover: { backgroundColor: \"#595959\", transition: { duration: 0.3 } },\n};\n\nconst textVariants = {\n  hover: { color: \"#ffffff\", transition: { duration: 0.2 } },\n};\n\ninterface TrackProps {\n  number: number;\n  songKey: string;\n  title: string;\n  type: SongType;\n  focusPerformers: {\n    name: string[];\n    type: FocusPerformersType;\n  };\n  intl: any;\n  className?: string;\n}\n\nexport const Track = injectIntl(\n  ({\n    intl: { locale },\n    focusPerformers,\n    songKey,\n    number,\n    title,\n    type,\n    className,\n  }: TrackProps) => {\n    const focusPerformersText = React.useMemo(() => {\n      let comma: string;\n      switch (locale) {\n        case Language.Zh:\n          comma = \"、\";\n          break;\n        case Language.Ja:\n          comma = \"・\";\n          break;\n        default:\n          comma = \", \";\n          break;\n      }\n\n      if (focusPerformers.name.length > 0) {\n        if (focusPerformers.type === FocusPerformersType.Center) {\n          return (\n            \"C: \" +\n            focusPerformers.name.reduce((acc, curr) => acc + comma + curr)\n          );\n        }\n        return focusPerformers.name.reduce((acc, curr) => acc + comma + curr);\n      }\n      return \"\";\n    }, [focusPerformers, locale]);\n\n    return songKey !== \"OVERTURE\" ? (\n      <motion.div\n        whileHover=\"hover\"\n        variants={containerVariants}\n        className={classNames(styles.container, className)}\n      >\n        <LocalizedLink to={`/songs/${songKey}`}>\n          <motion.span variants={textVariants} className={styles.number}>\n            {number}.\n          </motion.span>\n          <div className={styles.content}>\n            <motion.h3 variants={textVariants} className={styles.title}>\n              {title}\n            </motion.h3>\n            <motion.div variants={textVariants} className={styles.description}>\n              <span>\n                #<FormattedMessage {...({ id: type } as any)} />\n              </span>\n              <span>{focusPerformersText}</span>\n            </motion.div>\n          </div>\n        </LocalizedLink>\n      </motion.div>\n    ) : (\n      <div className={classNames(styles.container, className)}>\n        <span className={styles.number}>{number}.</span>\n        <div className={styles.content}>\n          <h3 className={styles.title}>{title}</h3>\n          <div className={styles.description}>\n            <span>\n              #<FormattedMessage {...({ id: type } as any)} />\n            </span>\n            <span>{focusPerformersText}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n","import * as React from \"react\";\n\ninterface ArrowLeftIconProps {\n  className?: string;\n}\n\nexport const ArrowLeftIcon = ({ className }: ArrowLeftIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\" />\n  </svg>\n);\n","import * as React from \"react\";\n\ninterface ArrowRightIconProps {\n  className?: string;\n}\n\nexport const ArrowRightIcon = ({ className }: ArrowRightIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport styles from \"./artworks.module.scss\";\nimport { ArrowLeftIcon } from \"components/atoms/icons/ArrowLeftIcon\";\nimport { ArrowRightIcon } from \"components/atoms/icons/ArrowRightIcon\";\nimport { motion } from \"framer-motion\";\nimport { classNames } from \"utils/strings\";\n\ninterface ArtworksProps {\n  artworks: {\n    large: string;\n    medium: string;\n  }[];\n  title: string;\n  className?: string;\n}\n\nexport const Artworks = ({ artworks, title, className }: ArtworksProps) => {\n  const [artworkIndex, setArtworkIndex] = React.useState(0);\n\n  const handleClickNextArtwork = React.useCallback(() => {\n    if (artworkIndex < artworks.length - 1) {\n      setArtworkIndex(artworkIndex + 1);\n    }\n  }, [artworks, artworkIndex]);\n\n  const handleClickPreviousArtwork = React.useCallback(() => {\n    if (artworkIndex > 0) {\n      setArtworkIndex(artworkIndex - 1);\n    }\n  }, [artworks, artworkIndex]);\n\n  const handleClickImage = React.useCallback(() => {\n    if (artworkIndex < artworks.length - 1) {\n      setArtworkIndex(artworkIndex + 1);\n    } else {\n      setArtworkIndex(0);\n    }\n  }, [artworks, artworkIndex]);\n\n  return (\n    <div className={classNames(styles.container, className)}>\n      <div className={styles.artwork}>\n        <motion.button\n          whileHover={{ scale: 2, x: -8 }}\n          onClick={handleClickPreviousArtwork}\n          aria-label=\"Previous Artwork\"\n        >\n          <ArrowLeftIcon className={styles.arrow} />\n        </motion.button>\n        <motion.div whileHover={{ scale: 1.07 }} className={styles.images}>\n          {artworks.map((artwork, index) => (\n            <motion.img\n              key={index}\n              animate={\n                artworkIndex === index\n                  ? { opacity: 1, scale: 1 }\n                  : { opacity: 0, scale: 0.5 }\n              }\n              src={artwork.medium}\n              srcSet={`${artwork.large} 1.5x`}\n              alt={title}\n              onClick={handleClickImage}\n              className={styles.image}\n            />\n          ))}\n        </motion.div>\n        <motion.button\n          whileHover={{ scale: 2, x: 8 }}\n          onClick={handleClickNextArtwork}\n          aria-label=\"Next Artwork\"\n        >\n          <ArrowRightIcon className={styles.arrow} />\n        </motion.button>\n      </div>\n      <div className={styles.indicator}>\n        {artworks.map((_, index) => (\n          <button\n            key={index}\n            onClick={() => setArtworkIndex(index)}\n            aria-label=\"Next Artwork\"\n          >\n            <div\n              style={{\n                backgroundColor: index === artworkIndex ? \"#757575\" : \"#ffffff\",\n              }}\n              className={styles.dot}\n            />\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { toCdNumber } from \"utils/strings\";\nimport styles from \"./cd.module.scss\";\nimport { Track } from \"components/atoms/Track\";\nimport { FocusPerformersType, SongType, CdType } from \"types/responseTypes\";\nimport { Artworks } from \"components/molecules/Artworks\";\nimport { FormattedMessage, FormattedDate } from \"react-intl\";\nimport { motion } from \"framer-motion\";\nimport { Language, Links } from \"utils/constants\";\nimport { useScrollRestoration } from \"utils/hooks\";\nimport { Layout } from \"components/atoms/Layout\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\nimport { ArrowBackIcon } from \"components/atoms/icons/ArrowBackIcon\";\n\nconst containerVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      when: \"beforeChildren\",\n    },\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst headingVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst contentContainerVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      when: \"beforeChildren\",\n      staggerChildren: 0.2,\n    },\n  },\n  hidden: {\n    opacity: 0,\n    y: 20,\n  },\n};\n\nconst contentVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n  },\n  hidden: {\n    opacity: 0,\n    y: -20,\n  },\n};\n\ninterface CdProps {\n  type: CdType;\n  title: string;\n  number: string;\n  artworks: {\n    large: string;\n    medium: string;\n  }[];\n  songs: {\n    key: string;\n    title: string;\n    type: SongType;\n    focusPerformers: {\n      name: string[];\n      type: FocusPerformersType;\n    };\n  }[];\n  release: string;\n}\n\nexport const Cd = ({\n  type,\n  title,\n  number,\n  artworks,\n  songs,\n  release,\n}: CdProps) => {\n  useScrollRestoration();\n\n  return (\n    <div className={styles.background}>\n      <Layout>\n        <motion.div whileHover={{ x: -7, scale: 1.5 }} className={styles.link}>\n          <LocalizedLink\n            to={type === CdType.Singles ? Links.Singles : Links.Albums}\n            label=\"Back\"\n          >\n            <ArrowBackIcon className={styles.back} />\n          </LocalizedLink>\n        </motion.div>\n        <motion.div variants={containerVariants} className={styles.container}>\n          <motion.div variants={headingVariants} className={styles.heading}>\n            <h4 className={styles.number}>\n              {toCdNumber(number)} {type.slice(0, -1)}\n            </h4>\n            <h1 className={styles.title}>{title}</h1>\n          </motion.div>\n          <motion.div\n            variants={contentContainerVariants}\n            className={styles.flexbox}\n          >\n            <motion.div variants={contentVariants} className={styles.artworks}>\n              <Artworks artworks={artworks} title={title} />\n            </motion.div>\n            <motion.div variants={contentVariants} className={styles.content}>\n              <section className={styles.section}>\n                <h2 className={styles.subheading}>\n                  <FormattedMessage {...({ id: \"track\" } as any)} />\n                </h2>\n                <ul className={styles.tracklist}>\n                  {songs.map((song, index) => (\n                    <li key={song.key} className={styles.track}>\n                      <Track\n                        songKey={song.key}\n                        number={index + 1}\n                        title={song.title}\n                        type={song.type}\n                        focusPerformers={song.focusPerformers}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </section>\n              <section className={styles.section}>\n                <h2 className={styles.subheading}>\n                  <FormattedMessage {...({ id: \"release\" } as any)} />\n                </h2>\n                <p className={styles.release}>\n                  <FormattedDate\n                    value={release}\n                    year=\"numeric\"\n                    month=\"short\"\n                    day=\"numeric\"\n                  />\n                </p>\n              </section>\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      </Layout>\n    </div>\n  );\n};\n"],"sourceRoot":""}