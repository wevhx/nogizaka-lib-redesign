{"version":3,"sources":["webpack:///./src/components/atoms/Artwork/index.tsx","webpack:///./src/components/templates/Cds/index.tsx","webpack:///./src/pages/cds.tsx","webpack:///./src/components/atoms/Layout/index.tsx","webpack:///./src/components/molecules/PageTab/index.tsx"],"names":["backgroundFade","isHovered","opacity","isNotHovered","titleFade","Artwork","_ref","images","title","className","_React$useState","React","setHover","react","framer_motion_es","div","onHoverStart","onHoverEnd","whileHover","scale","classNames","styles","container","lib_default","a","offset","src","small","srcSet","medium","large","alt","image","initial","animate","variants","background","pageTabItems","link","page","listVariants","visible","transition","when","staggerChildren","delayChildren","duration","hidden","itemVariants","y","Cds","props","singles","edges","albums","parse","query","pageCds","console","log","PageTab","items","selectedItem","tabs","key","exit","grid","map","node","number","artwork","LocalizedLink","to","Artwork_Artwork","artworks","__webpack_exports__","location","search","data","Cds_Cds","allSinglesJson","allAlbumsJson","__webpack_require__","d","Layout","react__WEBPACK_IMPORTED_MODULE_0__","_layout_module_scss__WEBPACK_IMPORTED_MODULE_1__","_layout_module_scss__WEBPACK_IMPORTED_MODULE_1___default","n","utils_strings__WEBPACK_IMPORTED_MODULE_2__","children","currentItem","setCurrentItem","react__WEBPACK_IMPORTED_MODULE_1__","components_atoms_Layout__WEBPACK_IMPORTED_MODULE_4__","item","active","inactive","components_atoms_locales_LocalizedLink__WEBPACK_IMPORTED_MODULE_2__","handleClick","react_intl__WEBPACK_IMPORTED_MODULE_3__","id"],"mappings":"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","file":"component---src-pages-cds-tsx-21e8e0ad3894269f31ae.js","sourcesContent":["import * as React from \"react\";\nimport LazyLoad from \"react-lazyload\";\nimport styles from \"./artwork.module.scss\";\nimport { motion } from \"framer-motion\";\nimport { classNames } from \"utils/strings\";\n\nconst backgroundFade = {\n  isHovered: {\n    opacity: 0.7,\n  },\n  isNotHovered: {\n    opacity: 0,\n  },\n};\n\nconst titleFade = {\n  isHovered: {\n    opacity: 1,\n  },\n  isNotHovered: {\n    opacity: 0,\n  },\n};\n\ninterface ArtworkProps {\n  images: {\n    large: string;\n    medium: string;\n    small: string;\n  };\n  title: string;\n  className?: string;\n}\n\nexport const Artwork = ({ images, title, className }: ArtworkProps) => {\n  const [isHovered, setHover] = React.useState(false);\n\n  return (\n    <motion.div\n      onHoverStart={() => setHover(true)}\n      onHoverEnd={() => setHover(false)}\n      whileHover={{ scale: 1.1 }}\n      className={classNames(styles.container, className)}\n    >\n      <LazyLoad offset={100}>\n        <img\n          src={images.small}\n          srcSet={`${images.medium} 2x, ${images.large} 3x`}\n          alt={title}\n          className={styles.image}\n        />\n      </LazyLoad>\n      <motion.div\n        initial={false}\n        animate={isHovered ? \"isHovered\" : \"isNotHovered\"}\n        variants={backgroundFade}\n        className={styles.background}\n      />\n      <motion.div\n        initial={false}\n        animate={isHovered ? \"isHovered\" : \"isNotHovered\"}\n        variants={titleFade}\n        className={styles.title}\n      >\n        <h3>{title}</h3>\n      </motion.div>\n    </motion.div>\n  );\n};\n","import * as React from \"react\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\nimport { parse } from \"query-string\";\nimport { Artwork } from \"components/atoms/Artwork\";\nimport { PageTab, TabItem } from \"components/molecules/PageTab\";\nimport styles from \"./cds.module.scss\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\ninterface CdsProps {\n  query: string;\n  singles: {\n    edges: {\n      node: {\n        title: string;\n        number: string;\n        artworks: {\n          large: string;\n          medium: string;\n          small: string;\n        }[];\n      };\n    }[];\n  };\n  albums: {\n    edges: {\n      node: {\n        title: string;\n        number: string;\n        artworks: {\n          large: string;\n          medium: string;\n          small: string;\n        }[];\n      };\n    }[];\n  };\n}\n\nconst pageTabItems: TabItem[] = [\n  {\n    link: \"/cds/?page=singles\",\n    page: \"singles\",\n  },\n  {\n    link: \"/cds/?page=albums\",\n    page: \"albums\",\n  },\n];\n\nconst listVariants = {\n  visible: {\n    opacity: 1,\n    transition: {\n      when: \"beforeChildren\",\n      staggerChildren: 0.02,\n      delayChildren: 0.2,\n      duration: 0.2,\n    },\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n};\n\nconst itemVariants = {\n  visible: { opacity: 1, y: 0 },\n  hidden: { opacity: 0, y: 20 },\n};\n\nexport const Cds = (props: CdsProps) => {\n  const singles = props.singles.edges;\n  const albums = props.albums.edges;\n\n  const { page } = React.useMemo(() => parse(props.query), [props.query]);\n\n  const pageCds = React.useMemo(() => (page === \"albums\" ? albums : singles), [\n    page,\n    albums,\n    singles,\n  ]);\n\n  console.log({ page, query: props.query });\n\n  return (\n    <div>\n      <PageTab\n        items={pageTabItems}\n        selectedItem={page ? (page as string) : \"singles\"}\n        className={styles.tabs}\n      />\n      <AnimatePresence>\n        <motion.div\n          key={page as string}\n          exit=\"hidden\"\n          variants={listVariants}\n          className={styles.grid}\n        >\n          {pageCds.map(({ node }) => (\n            <motion.div\n              variants={itemVariants}\n              key={page + node.number}\n              className={styles.artwork}\n            >\n              <LocalizedLink to={`/${page}/${node.number}`}>\n                <Artwork images={node.artworks[0]} title={node.title} />\n              </LocalizedLink>\n            </motion.div>\n          ))}\n        </motion.div>\n      </AnimatePresence>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { Cds } from \"components/templates/Cds\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport \"styles/app.scss\";\n\nexport const query = graphql`\n  query CdsQuery {\n    allAlbumsJson {\n      edges {\n        node {\n          title\n          number\n          artworks {\n            large\n            medium\n            small\n          }\n        }\n      }\n    }\n    allSinglesJson {\n      edges {\n        node {\n          title\n          number\n          artworks {\n            large\n            medium\n            small\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface CdsData {\n  data: {\n    allSinglesJson: {\n      edges: {\n        node: {\n          title: string;\n          number: string;\n          artworks: {\n            large: string;\n            medium: string;\n            small: string;\n          }[];\n        };\n      }[];\n    };\n    allAlbumsJson: {\n      edges: {\n        node: {\n          title: string;\n          number: string;\n          artworks: {\n            large: string;\n            medium: string;\n            small: string;\n          }[];\n        };\n      }[];\n    };\n  };\n}\n\nexport default (props: RouteComponentProps<CdsData>) => {\n  const query = React.useMemo(() => {\n    if (props.location) {\n      if (props.location.search !== \"\") {\n        return props.location.search;\n      }\n    }\n    return \"?page=singles\";\n  }, [props.location]);\n\n  return props.data ? (\n    <Cds\n      query={query}\n      singles={props.data.allSinglesJson}\n      albums={props.data.allAlbumsJson}\n    />\n  ) : null;\n};\n","import * as React from \"react\";\nimport styles from \"./layout.module.scss\";\nimport { classNames } from \"utils/strings\";\n\ninterface LayoutProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Layout = ({ children, className }: LayoutProps) => (\n  <div className={classNames(styles.container, className)}>{children}</div>\n);\n","import * as React from \"react\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Layout } from \"components/atoms/Layout\";\nimport styles from \"./pagetab.module.scss\";\nimport { classNames } from \"../../../utils/strings\";\n\nexport type TabItem = {\n  link: string;\n  page: string;\n};\n\ninterface PageTabProps {\n  items: TabItem[];\n  selectedItem: string;\n  className?: string;\n}\n\nexport const PageTab = ({ items, selectedItem, className }: PageTabProps) => {\n  const [currentItem, setCurrentItem] = React.useState(selectedItem);\n\n  console.log({ selectedItem, currentItem, items });\n\n  return (\n    <Layout className={className}>\n      <div className={styles.container}>\n        {items.map(item => (\n          <div\n            className={classNames(\n              styles.item,\n              item.page === selectedItem ? styles.active : styles.inactive\n            )}\n            key={item.page}\n          >\n            <LocalizedLink\n              to={item.link}\n              handleClick={() => setCurrentItem(item.page)}\n            >\n              <FormattedMessage {...({ id: item.page } as any)} />\n            </LocalizedLink>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  );\n};\n"],"sourceRoot":""}