{"version":3,"sources":["webpack:///./src/containers/Single/index.tsx","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/components/atoms/Layout/index.tsx","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./src/types/responseTypes.ts","webpack:///./src/components/atoms/icons/ArrowBackIcon.tsx","webpack:///./src/components/atoms/Track/index.tsx","webpack:///./src/components/atoms/icons/ArrowLeftIcon.tsx","webpack:///./src/components/atoms/icons/ArrowRightIcon.tsx","webpack:///./src/components/molecules/Artworks/index.tsx","webpack:///./src/components/templates/Cd/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","types_responseTypes__WEBPACK_IMPORTED_MODULE_1__","components_templates_Cd__WEBPACK_IMPORTED_MODULE_2__","SingleContainer","_ref","singlesJson","data","type","CdType","Singles","title","number","artworks","songs","release","$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","Layout","_layout_module_scss__WEBPACK_IMPORTED_MODULE_1__","_layout_module_scss__WEBPACK_IMPORTED_MODULE_1___default","n","utils_strings__WEBPACK_IMPORTED_MODULE_2__","children","className","classNames","styles","container","url","this","MembersType","FocusPerformersType","SongType","JoinedGenerationType","ArrowBackIcon","width","height","viewBox","fill","containerVariants","hover","backgroundColor","transition","duration","textVariants","color","Track","locale","focusPerformers","songKey","focusPerformersText","React","comma","Language","Zh","Ja","name","Center","reduce","acc","curr","react","framer_motion_es","div","whileHover","variants","LocalizedLink","to","span","content","h3","description","lib","id","ArrowLeftIcon","ArrowRightIcon","Artworks","_React$useState","artworkIndex","setArtworkIndex","handleClickNextArtwork","handleClickPreviousArtwork","handleClickImage","artwork","button","scale","x","onClick","aria-label","ArrowLeftIcon_ArrowLeftIcon","arrow","images","map","index","img","key","animate","opacity","src","medium","srcSet","large","alt","image","ArrowRightIcon_ArrowRightIcon","indicator","_","style","dot","visible","when","hidden","headingVariants","contentContainerVariants","y","staggerChildren","contentVariants","Cd","injectIntl","intl","useScrollRestoration","background","link","Links","Albums","label","back","heading","toCdNumber","slice","flexbox","Artworks_Artworks","section","subheading","tracklist","song","track","Track_Track","body","year","month","day"],"mappings":"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","file":"component---src-containers-single-index-tsx-3a033212a13d651ced29.js","sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { SongType, FocusPerformersType, CdType } from \"types/responseTypes\";\nimport { Cd } from \"components/templates/Cd\";\n\nexport const query = graphql`\n  query($number: String!) {\n    singlesJson(number: { eq: $number }) {\n      title\n      number\n      artworks {\n        large\n        medium\n      }\n      songs {\n        key\n        title\n        type\n        focusPerformers {\n          name\n          type\n        }\n      }\n      release\n    }\n  }\n`;\n\ninterface SingleData {\n  data: {\n    singlesJson: {\n      title: string;\n      number: string;\n      artworks: {\n        large: string;\n        medium: string;\n      }[];\n      songs: {\n        key: string;\n        title: string;\n        type: SongType;\n        focusPerformers: {\n          name: string[];\n          type: FocusPerformersType;\n        };\n      }[];\n      release: string;\n    };\n  };\n  pageContext: {\n    cdType: CdType;\n    number: string;\n    locale: string;\n  };\n}\n\nconst SingleContainer = ({ data: { singlesJson } }: SingleData) => {\n  return singlesJson ? (\n    <Cd\n      type={CdType.Singles}\n      title={singlesJson.title}\n      number={singlesJson.number}\n      artworks={singlesJson.artworks}\n      songs={singlesJson.songs}\n      release={singlesJson.release}\n    />\n  ) : null;\n};\n\nexport default SingleContainer;\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import * as React from \"react\";\nimport styles from \"./layout.module.scss\";\nimport { classNames } from \"utils/strings\";\n\ninterface LayoutProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Layout = ({ children, className }: LayoutProps) => (\n  <div className={classNames(styles.container, className)}>{children}</div>\n);\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","export enum CdType {\n  Singles = \"singles\",\n  Albums = \"albums\",\n}\n\nexport enum MembersType {\n  FirstGeneration = \"first-gen\",\n  SecondGeneration = \"second-gen\",\n  ThirdGeneration = \"third-gen\",\n  FourthGeneration = \"fourth-gen\",\n  Graduated = \"graduated\",\n}\n\nexport enum FocusPerformersType {\n  Center = \"center\",\n  Solo = \"solo\",\n  Unit = \"unit\",\n  None = \"\",\n}\n\nexport enum SongType {\n  None = \"none\",\n  Title = \"title\",\n  Coupling = \"coupling\",\n  Lead = \"lead\",\n  Under = \"under\",\n  Unit = \"unit\",\n  Solo = \"solo\",\n  FirstGeneration = \"first generation\",\n  SecondGeneration = \"second generation\",\n  ThirdGeneration = \"third generation\",\n  FourthGeneration = \"fourth generation\",\n  Special = \"special\",\n}\n\nexport enum JoinedGenerationType {\n  First = \"first\",\n  Second = \"second\",\n  Third = \"third\",\n  Fourth = \"fourth\",\n  Exchange = \"exchange\",\n}\n","import * as React from \"react\";\n\ninterface ArrowBackIconProps {\n  className?: string;\n}\n\nexport const ArrowBackIcon = ({ className }: ArrowBackIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport styles from \"./track.module.scss\";\nimport { FocusPerformersType, SongType } from \"types/responseTypes\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Language } from \"utils/constants\";\nimport { motion } from \"framer-motion\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\nimport { classNames } from \"utils/strings\";\n\nconst containerVariants = {\n  hover: { backgroundColor: \"#595959\", transition: { duration: 0.3 } },\n};\n\nconst textVariants = {\n  hover: { color: \"#ffffff\", transition: { duration: 0.2 } },\n};\n\ninterface TrackProps {\n  number: number;\n  songKey: string;\n  title: string;\n  type: SongType;\n  focusPerformers: {\n    name: string[];\n    type: FocusPerformersType;\n  };\n  locale: Language;\n  className?: string;\n}\n\nexport const Track = ({\n  locale,\n  focusPerformers,\n  songKey,\n  number,\n  title,\n  type,\n  className,\n}: TrackProps) => {\n  const focusPerformersText = React.useMemo(() => {\n    let comma: string;\n    switch (locale) {\n      case Language.Zh:\n        comma = \"、\";\n        break;\n      case Language.Ja:\n        comma = \"・\";\n        break;\n      default:\n        comma = \", \";\n        break;\n    }\n\n    if (focusPerformers.name.length > 0) {\n      if (focusPerformers.type === FocusPerformersType.Center) {\n        return (\n          \"C: \" + focusPerformers.name.reduce((acc, curr) => acc + comma + curr)\n        );\n      }\n      return focusPerformers.name.reduce((acc, curr) => acc + comma + curr);\n    }\n    return \"\";\n  }, [focusPerformers, locale]);\n\n  return songKey !== \"OVERTURE\" ? (\n    <motion.div\n      whileHover=\"hover\"\n      variants={containerVariants}\n      className={classNames(styles.container, className)}\n    >\n      <LocalizedLink to={`/songs/${songKey}`}>\n        <motion.span variants={textVariants} className={styles.number}>\n          {number}.\n        </motion.span>\n        <div className={styles.content}>\n          <motion.h3 variants={textVariants} className={styles.title}>\n            {title}\n          </motion.h3>\n          <motion.div variants={textVariants} className={styles.description}>\n            <span>\n              #<FormattedMessage {...({ id: type } as any)} />\n            </span>\n            <span>{focusPerformersText}</span>\n          </motion.div>\n        </div>\n      </LocalizedLink>\n    </motion.div>\n  ) : (\n    <div className={classNames(styles.container, className)}>\n      <span className={styles.number}>{number}.</span>\n      <div className={styles.content}>\n        <h3 className={styles.title}>{title}</h3>\n        <div className={styles.description}>\n          <span>\n            #<FormattedMessage {...({ id: type } as any)} />\n          </span>\n          <span>{focusPerformersText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\n\ninterface ArrowLeftIconProps {\n  className?: string;\n}\n\nexport const ArrowLeftIcon = ({ className }: ArrowLeftIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\" />\n  </svg>\n);\n","import * as React from \"react\";\n\ninterface ArrowRightIconProps {\n  className?: string;\n}\n\nexport const ArrowRightIcon = ({ className }: ArrowRightIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport styles from \"./artworks.module.scss\";\nimport { ArrowLeftIcon } from \"components/atoms/icons/ArrowLeftIcon\";\nimport { ArrowRightIcon } from \"components/atoms/icons/ArrowRightIcon\";\nimport { motion } from \"framer-motion\";\nimport { classNames } from \"utils/strings\";\n\ninterface ArtworksProps {\n  artworks: {\n    large: string;\n    medium: string;\n  }[];\n  title: string;\n  className?: string;\n}\n\nexport const Artworks = ({ artworks, title, className }: ArtworksProps) => {\n  const [artworkIndex, setArtworkIndex] = React.useState(0);\n\n  const handleClickNextArtwork = React.useCallback(() => {\n    if (artworkIndex < artworks.length - 1) {\n      setArtworkIndex(artworkIndex + 1);\n    }\n  }, [artworks, artworkIndex]);\n\n  const handleClickPreviousArtwork = React.useCallback(() => {\n    if (artworkIndex > 0) {\n      setArtworkIndex(artworkIndex - 1);\n    }\n  }, [artworks, artworkIndex]);\n\n  const handleClickImage = React.useCallback(() => {\n    if (artworkIndex < artworks.length - 1) {\n      setArtworkIndex(artworkIndex + 1);\n    } else {\n      setArtworkIndex(0);\n    }\n  }, [artworks, artworkIndex]);\n\n  return (\n    <div className={classNames(styles.container, className)}>\n      <div className={styles.artwork}>\n        <motion.button\n          whileHover={{ scale: 2, x: -8 }}\n          onClick={handleClickPreviousArtwork}\n          aria-label=\"Previous Artwork\"\n        >\n          <ArrowLeftIcon className={styles.arrow} />\n        </motion.button>\n        <motion.div whileHover={{ scale: 1.07 }} className={styles.images}>\n          {artworks.map((artwork, index) => (\n            <motion.img\n              key={index}\n              animate={\n                artworkIndex === index\n                  ? { opacity: 1, scale: 1 }\n                  : { opacity: 0, scale: 0.5 }\n              }\n              src={artwork.medium}\n              srcSet={`${artwork.large} 1.5x`}\n              alt={title}\n              onClick={handleClickImage}\n              className={styles.image}\n            />\n          ))}\n        </motion.div>\n        <motion.button\n          whileHover={{ scale: 2, x: 8 }}\n          onClick={handleClickNextArtwork}\n          aria-label=\"Next Artwork\"\n        >\n          <ArrowRightIcon className={styles.arrow} />\n        </motion.button>\n      </div>\n      <div className={styles.indicator}>\n        {artworks.map((_, index) => (\n          <button\n            key={index}\n            onClick={() => setArtworkIndex(index)}\n            aria-label=\"Next Artwork\"\n          >\n            <div\n              style={{\n                backgroundColor: index === artworkIndex ? \"#757575\" : \"#ffffff\",\n              }}\n              className={styles.dot}\n            />\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { toCdNumber } from \"utils/strings\";\nimport styles from \"./cd.module.scss\";\nimport { Track } from \"components/atoms/Track\";\nimport { FocusPerformersType, SongType, CdType } from \"types/responseTypes\";\nimport { Artworks } from \"components/molecules/Artworks\";\nimport { FormattedMessage, FormattedDate, injectIntl } from \"react-intl\";\nimport { motion } from \"framer-motion\";\nimport { Language, Links } from \"utils/constants\";\nimport { useScrollRestoration } from \"utils/hooks\";\nimport { Layout } from \"components/atoms/Layout\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\nimport { ArrowBackIcon } from \"components/atoms/icons/ArrowBackIcon\";\n\nconst containerVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      when: \"beforeChildren\",\n    },\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst headingVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst contentContainerVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      when: \"beforeChildren\",\n      staggerChildren: 0.2,\n    },\n  },\n  hidden: {\n    opacity: 0,\n    y: 20,\n  },\n};\n\nconst contentVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n  },\n  hidden: {\n    opacity: 0,\n    y: -20,\n  },\n};\n\ninterface CdProps {\n  type: CdType;\n  title: string;\n  number: string;\n  artworks: {\n    large: string;\n    medium: string;\n  }[];\n  songs: {\n    key: string;\n    title: string;\n    type: SongType;\n    focusPerformers: {\n      name: string[];\n      type: FocusPerformersType;\n    };\n  }[];\n  release: string;\n  intl: any;\n}\n\nexport const Cd = injectIntl(\n  ({ type, title, number, artworks, songs, release, intl }: CdProps) => {\n    useScrollRestoration();\n\n    return (\n      <Layout className={styles.background}>\n        <motion.div whileHover={{ x: -7, scale: 1.5 }} className={styles.link}>\n          <LocalizedLink\n            to={type === CdType.Singles ? Links.Singles : Links.Albums}\n            label=\"Back\"\n          >\n            <ArrowBackIcon className={styles.back} />\n          </LocalizedLink>\n        </motion.div>\n        <motion.div variants={containerVariants} className={styles.container}>\n          <motion.div variants={headingVariants} className={styles.heading}>\n            <h4 className={styles.number}>\n              {toCdNumber(number)} {type.slice(0, -1)}\n            </h4>\n            <h1 className={styles.title}>{title}</h1>\n          </motion.div>\n          <motion.div\n            variants={contentContainerVariants}\n            className={styles.flexbox}\n          >\n            <motion.div variants={contentVariants} className={styles.artworks}>\n              <Artworks artworks={artworks} title={title} />\n            </motion.div>\n            <motion.div variants={contentVariants} className={styles.content}>\n              <section className={styles.section}>\n                <h2 className={styles.subheading}>\n                  <FormattedMessage {...({ id: \"track\" } as any)} />\n                </h2>\n                <ul className={styles.tracklist}>\n                  {songs.map((song, index) => (\n                    <li key={song.key} className={styles.track}>\n                      <Track\n                        songKey={song.key}\n                        number={index + 1}\n                        title={song.title}\n                        type={song.type}\n                        focusPerformers={song.focusPerformers}\n                        locale={intl.locale as Language}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </section>\n              <section className={styles.section}>\n                <h2 className={styles.subheading}>\n                  <FormattedMessage {...({ id: \"release\" } as any)} />\n                </h2>\n                <p className={styles.body}>\n                  <FormattedDate\n                    value={release}\n                    year=\"numeric\"\n                    month=\"short\"\n                    day=\"numeric\"\n                  />\n                </p>\n              </section>\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      </Layout>\n    );\n  }\n);\n"],"sourceRoot":""}