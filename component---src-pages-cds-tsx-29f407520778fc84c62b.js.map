{"version":3,"sources":["webpack:///./src/components/atoms/Artwork/index.tsx","webpack:///./src/components/atoms/PageTab/index.tsx","webpack:///./src/components/templates/Cds/index.tsx","webpack:///./src/pages/cds.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/templates/Layout/index.tsx","webpack:///./src/components/atoms/LocalizedLink/index.tsx","webpack:///./src/i18n/locales.js"],"names":["Artwork","_ref","images","title","className","_React$useState","React","isMouseHovered","setMouseHover","scale","useSpring","transform","backgroundFade","opacity","titleFade","react","web","div","onMouseEnter","onMouseLeave","style","styles","container","lib_default","a","offset","src","small","srcSet","medium","large","alt","image","background","PageTab","items","selectedItem","springs","useSprings","length","map","item","fontSize","page","fontWeight","borderBottomWidth","borderBottomColor","Layout","animation","index","key","name","LocalizedLink","to","link","react_intl_lib","id","pageTabItems","Cds","props","singles","edges","albums","parse","query","pageIndex","transitionItems","cds","cdsTransition","useTransition","from","enter","leave","wrapper","PageTab_PageTab","transition","grid","_ref2","node","number","artwork","Artwork_Artwork","artworks","__webpack_exports__","data","Cds_Cds","location","search","allSinglesJson","allAlbumsJson","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","pageResources","createElement","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","_layout_module_scss__WEBPACK_IMPORTED_MODULE_1__","_layout_module_scss__WEBPACK_IMPORTED_MODULE_1___default","children","i18n_locales__WEBPACK_IMPORTED_MODULE_1__","i18n_locales__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","react_intl__WEBPACK_IMPORTED_MODULE_3__","injectIntl","locale","intl","path","locales","en","local","ja","zh"],"mappings":"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","file":"component---src-pages-cds-tsx-29f407520778fc84c62b.js","sourcesContent":["import * as React from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport LazyLoad from \"react-lazyload\";\nimport styles from \"./artwork.module.scss\";\n\ninterface ArtworkProps {\n  images: {\n    large: string;\n    medium: string;\n    small: string;\n  };\n  title: string;\n  className?: string;\n}\n\nexport const Artwork = ({ images, title, className }: ArtworkProps) => {\n  const [isMouseHovered, setMouseHover] = React.useState(false);\n\n  const scale = useSpring({\n    transform: `scale(${isMouseHovered ? 1.1 : 1})`,\n  });\n\n  const backgroundFade = useSpring({\n    opacity: isMouseHovered ? 0.7 : 0,\n  });\n\n  const titleFade = useSpring({\n    opacity: isMouseHovered ? 1 : 0,\n  });\n\n  return (\n    <animated.div\n      onMouseEnter={() => setMouseHover(true)}\n      onMouseLeave={() => setMouseHover(false)}\n      style={scale}\n      className={styles.container + `${className ? \" \" + className : \"\"}`}\n    >\n      <LazyLoad offset={100}>\n        <img\n          src={images.small}\n          srcSet={`${images.medium} 2x, ${images.large} 3x`}\n          alt={title}\n          className={styles.image}\n        />\n      </LazyLoad>\n      <animated.div style={backgroundFade} className={styles.background} />\n      <animated.div style={titleFade} className={styles.title}>\n        <h3>{title}</h3>\n      </animated.div>\n    </animated.div>\n  );\n};\n","import * as React from \"react\";\nimport { animated, useSprings } from \"react-spring\";\nimport { LocalizedLink } from \"components/atoms/LocalizedLink\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Layout } from \"components/templates/Layout\";\nimport styles from \"./pagetab.module.scss\";\n\nexport type TabItem = {\n  link: string;\n  page: string;\n  name: string;\n};\n\ninterface PageTabProps {\n  items: TabItem[];\n  selectedItem: string;\n}\n\nexport const PageTab = ({ items, selectedItem }: PageTabProps) => {\n  const springs = useSprings(\n    items.length,\n    items.map(item => ({\n      fontSize: item.page === selectedItem ? \"20px\" : \"16px\",\n      fontWeight: item.page === selectedItem ? 700 : 500,\n      borderBottomWidth: item.page === selectedItem ? \"3px\" : \"0px\",\n      borderBottomColor:\n        item.page === selectedItem\n          ? \"rgba(89, 89, 89, 1)\"\n          : \"rgba(89, 89, 89, 0)\",\n    }))\n  );\n\n  return (\n    <Layout>\n      <div className={styles.container}>\n        {springs.map((animation, index) => {\n          const item = items[index];\n\n          return (\n            <animated.div\n              key={item.name}\n              style={animation}\n              className={styles.item}\n            >\n              <LocalizedLink to={item.link}>\n                <FormattedMessage\n                  {...({\n                    id: item.page,\n                  } as any)}\n                />\n              </LocalizedLink>\n            </animated.div>\n          );\n        })}\n      </div>\n    </Layout>\n  );\n};\n","import * as React from \"react\";\nimport { animated, useTransition } from \"react-spring\";\nimport { LocalizedLink } from \"components/atoms/LocalizedLink\";\nimport { parse } from \"query-string\";\nimport { Artwork } from \"components/atoms/Artwork\";\nimport { PageTab, TabItem } from \"components/atoms/PageTab\";\nimport styles from \"./cds.module.scss\";\n\ninterface CdsProps {\n  query: string;\n  singles: {\n    edges: {\n      node: {\n        title: string;\n        number: string;\n        artworks: {\n          large: string;\n          medium: string;\n          small: string;\n        }[];\n      };\n    }[];\n  };\n  albums: {\n    edges: {\n      node: {\n        title: string;\n        number: string;\n        artworks: {\n          large: string;\n          medium: string;\n          small: string;\n        }[];\n      };\n    }[];\n  };\n}\n\nconst pageTabItems: TabItem[] = [\n  {\n    link: \"/cds/?page=singles\",\n    page: \"singles\",\n    name: \"Singles\",\n  },\n  {\n    link: \"/cds/?page=albums\",\n    page: \"albums\",\n    name: \"Albums\",\n  },\n];\n\nexport const Cds = (props: CdsProps) => {\n  const singles = props.singles.edges;\n  const albums = props.albums.edges;\n\n  const { page } = React.useMemo(() => parse(props.query), [props.query]);\n\n  const pageIndex = React.useMemo(() => {\n    switch (page) {\n      case \"albums\":\n        return 1;\n      default:\n        return 0;\n    }\n  }, [page]);\n\n  const transitionItems: {\n    cds: CdsProps[\"singles\"][\"edges\"] | CdsProps[\"albums\"][\"edges\"];\n    key: \"singles\" | \"albums\";\n  }[] = [{ cds: singles, key: \"singles\" }, { cds: albums, key: \"albums\" }];\n\n  const cdsTransition = useTransition(\n    transitionItems[pageIndex],\n    transitionItems => transitionItems.key,\n    {\n      from: { opacity: 0, transform: \"translateY(200px)\" },\n      enter: { opacity: 1, transform: \"translateY(0)\" },\n      leave: { opacity: 0, transform: \"translateY(100px)\" },\n    }\n  );\n\n  return (\n    <div className={styles.wrapper}>\n      <nav>\n        <PageTab items={pageTabItems} selectedItem={page as string} />\n      </nav>\n      <main>\n        {cdsTransition.map(({ item, key, props: transition }) => {\n          return (\n            <animated.div style={transition} key={key} className={styles.grid}>\n              {item.cds.map(({ node }) => (\n                <LocalizedLink\n                  to={`/${item.key}/${node.number}`}\n                  key={node.number}\n                  className={styles.artwork}\n                >\n                  <Artwork images={node.artworks[0]} title={node.title} />\n                </LocalizedLink>\n              ))}\n            </animated.div>\n          );\n        })}\n      </main>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { Cds } from \"components/templates/Cds\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport \"styles/app.scss\";\n\nexport const query = graphql`\n  query CdsQuery {\n    allAlbumsJson {\n      edges {\n        node {\n          title\n          number\n          artworks {\n            large\n            medium\n            small\n          }\n        }\n      }\n    }\n    allSinglesJson {\n      edges {\n        node {\n          title\n          number\n          artworks {\n            large\n            medium\n            small\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface CdsData {\n  data: {\n    allSinglesJson: {\n      edges: {\n        node: {\n          title: string;\n          number: string;\n          artworks: {\n            large: string;\n            medium: string;\n            small: string;\n          }[];\n        };\n      }[];\n    };\n    allAlbumsJson: {\n      edges: {\n        node: {\n          title: string;\n          number: string;\n          artworks: {\n            large: string;\n            medium: string;\n            small: string;\n          }[];\n        };\n      }[];\n    };\n  };\n}\n\nexport default (props: RouteComponentProps<CdsData>) => {\n  return props.data ? (\n    <Cds\n      query={props.location ? props.location.search : \"\"}\n      singles={props.data.allSinglesJson}\n      albums={props.data.allAlbumsJson}\n    />\n  ) : null;\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from \"react\";\nimport styles from \"./layout.module.scss\";\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nexport const Layout = (props: LayoutProps) => (\n  <div className={styles.container}>{props.children}</div>\n);\n","import * as React from \"react\";\nimport locales from \"i18n/locales\";\nimport { Link } from \"gatsby\";\nimport { injectIntl } from \"react-intl\";\nimport { Language } from \"utils/constants\";\n\ninterface LocalizedLinkProps {\n  to: string;\n  intl: any;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport const LocalizedLink = injectIntl(\n  ({ to, children, intl: { locale }, className }: LocalizedLinkProps) => {\n    const path = locales[locale as Language].default ? to : `/${locale}${to}`;\n\n    return (\n      <Link to={path} className={className}>\n        {children}\n      </Link>\n    );\n  }\n);\n","/* eslint-disable */\nmodule.exports = {\n  en: {\n    path: \"en\",\n    local: \"English\",\n  },\n  ja: {\n    path: \"ja\",\n    local: \"日本語\",\n    default: true,\n  },\n  zh: {\n    path: \"zh\",\n    local: \"中文\",\n  },\n};\n"],"sourceRoot":""}