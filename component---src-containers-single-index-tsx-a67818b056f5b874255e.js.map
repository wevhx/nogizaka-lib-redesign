{"version":3,"sources":["webpack:///./node_modules/react-intl/lib/components/createFormattedComponent.js","webpack:///./node_modules/react-intl/lib/index.js","webpack:///./src/containers/Single/index.tsx","webpack:///./src/components/atoms/icons/ArrowBackIcon.tsx","webpack:///./src/components/atoms/Track/index.tsx","webpack:///./src/components/atoms/icons/ArrowLeftIcon.tsx","webpack:///./src/components/atoms/icons/ArrowRightIcon.tsx","webpack:///./src/components/molecules/Artworks/index.tsx","webpack:///./src/components/templates/Cd/index.tsx"],"names":["DisplayName","DisplayNameParts","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","createFormattedDateTimePartsComponent","name","ComponentParts","props","Consumer","intl","value","children","formatProps","date","Date","formatDateToParts","formatTimeToParts","displayName","createFormattedComponent","Component","formattedValue","Text","textComponent","FormattedDate","query","SingleContainer","singlesJson","data","type","CdType","Singles","title","number","artworks","songs","release","ArrowBackIcon","className","width","height","viewBox","fill","d","containerVariants","hover","backgroundColor","transition","duration","textVariants","color","Track","injectIntl","locale","focusPerformers","songKey","focusPerformersText","React","getFocusPerformersText","div","whileHover","variants","classNames","styles","container","LocalizedLink","to","span","content","h3","description","Message","text","ArrowLeftIcon","ArrowRightIcon","Artworks","artworkIndex","setArtworkIndex","handleClickNext","handleClickPrevious","artwork","button","scale","x","onClick","aria-label","arrow","images","map","index","img","key","animate","opacity","src","medium","srcSet","large","alt","image","indicator","_","style","dot","visible","when","hidden","headingVariants","contentContainerVariants","y","staggerChildren","contentVariants","Cd","useScrollRestoration","background","Layout","page","link","Links","Albums","label","back","heading","toCdNumber","slice","flexBox","section","subheading","trackList","song","track","year","month","day"],"mappings":"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","file":"component---src-containers-single-index-tsx-a67818b056f5b874255e.js","sourcesContent":["import \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.array.index-of\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { invariantIntlContext } from '../utils';\nimport { Context } from './injectIntl';\nvar DisplayName;\n\n(function (DisplayName) {\n  DisplayName[\"formatDate\"] = \"FormattedDate\";\n  DisplayName[\"formatTime\"] = \"FormattedTime\";\n  DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n})(DisplayName || (DisplayName = {}));\n\nvar DisplayNameParts;\n\n(function (DisplayNameParts) {\n  DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\n  DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\n  DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\n})(DisplayNameParts || (DisplayNameParts = {}));\n\nexport var FormattedNumberParts = function FormattedNumberParts(props) {\n  return React.createElement(Context.Consumer, null, function (intl) {\n    invariantIntlContext(intl);\n\n    var value = props.value,\n        children = props.children,\n        formatProps = __rest(props, [\"value\", \"children\"]);\n\n    return children(intl.formatNumberToParts(value, formatProps));\n  });\n};\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport function createFormattedDateTimePartsComponent(name) {\n  var ComponentParts = function ComponentParts(props) {\n    return React.createElement(Context.Consumer, null, function (intl) {\n      invariantIntlContext(intl);\n\n      var value = props.value,\n          children = props.children,\n          formatProps = __rest(props, [\"value\", \"children\"]);\n\n      var date = typeof value === 'string' ? new Date(value || 0) : value;\n      var formattedParts = name === 'formatDate' ? intl.formatDateToParts(date, formatProps) : intl.formatTimeToParts(date, formatProps);\n      return children(formattedParts);\n    });\n  };\n\n  ComponentParts.displayName = DisplayNameParts[name];\n  return ComponentParts;\n}\nexport function createFormattedComponent(name) {\n  var Component = function Component(props) {\n    return React.createElement(Context.Consumer, null, function (intl) {\n      invariantIntlContext(intl);\n\n      var value = props.value,\n          children = props.children,\n          formatProps = __rest(props, [\"value\", \"children\"]);\n\n      var formattedValue = intl[name](value, formatProps);\n\n      if (typeof children === 'function') {\n        return children(formattedValue);\n      }\n\n      var Text = intl.textComponent || React.Fragment;\n      return React.createElement(Text, null, formattedValue);\n    });\n  };\n\n  Component.displayName = DisplayName[name];\n  return Component;\n}","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nexport { default as defineMessages } from './define-messages';\nimport { createFormattedComponent, createFormattedDateTimePartsComponent } from './components/createFormattedComponent';\nexport { default as injectIntl, Provider as RawIntlProvider, Context as IntlContext } from './components/injectIntl';\nexport { default as useIntl } from './components/useIntl';\nexport { default as IntlProvider, createIntl } from './components/provider';\nexport var FormattedDate = createFormattedComponent('formatDate');\nexport var FormattedTime = createFormattedComponent('formatTime');\nexport var FormattedNumber = createFormattedComponent('formatNumber');\nexport var FormattedDateParts = createFormattedDateTimePartsComponent('formatDate');\nexport var FormattedTimeParts = createFormattedDateTimePartsComponent('formatTime');\nexport { FormattedNumberParts } from './components/createFormattedComponent';\nexport { default as FormattedRelativeTime } from './components/relative';\nexport { default as FormattedPlural } from './components/plural';\nexport { default as FormattedMessage } from './components/message';\nexport { default as FormattedHTMLMessage } from './components/html-message';\nexport { createIntlCache } from './utils';","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { CdType, FocusPerformersType, SongType } from \"types/responseTypes\";\nimport { Cd } from \"components/templates/Cd\";\n\nexport const query = graphql`\n  query($number: String!) {\n    singlesJson(number: { eq: $number }) {\n      title\n      number\n      artworks {\n        large\n        medium\n      }\n      songs {\n        key\n        title\n        type\n        focusPerformers {\n          name\n          type\n        }\n      }\n      release\n    }\n  }\n`;\n\ninterface SingleData {\n  data: {\n    singlesJson: {\n      title: string;\n      number: string;\n      artworks: {\n        large: string;\n        medium: string;\n      }[];\n      songs: {\n        key: string;\n        title: string;\n        type: SongType;\n        focusPerformers: {\n          name: string[];\n          type: FocusPerformersType;\n        };\n      }[];\n      release: string;\n    };\n  };\n  pageContext: {\n    cdType: CdType;\n    number: string;\n    locale: string;\n  };\n}\n\nconst SingleContainer = ({ data: { singlesJson } }: SingleData) => {\n  return singlesJson ? (\n    <Cd\n      type={CdType.Singles}\n      title={singlesJson.title}\n      number={singlesJson.number}\n      artworks={singlesJson.artworks}\n      songs={singlesJson.songs}\n      release={singlesJson.release}\n    />\n  ) : null;\n};\n\nexport default SingleContainer;\n","import * as React from \"react\";\n\ninterface ArrowBackIconProps {\n  className?: string;\n}\n\nexport const ArrowBackIcon = ({ className }: ArrowBackIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { motion } from \"framer-motion\";\nimport styles from \"./track.module.scss\";\nimport { FocusPerformersType, SongType } from \"types/responseTypes\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\nimport { classNames, getFocusPerformersText } from \"utils/strings\";\nimport { Message } from \"components/atoms/Message\";\n\nconst containerVariants = {\n  hover: { backgroundColor: \"#595959\", transition: { duration: 0.3 } },\n};\n\nconst textVariants = {\n  hover: { color: \"#ffffff\", transition: { duration: 0.2 } },\n};\n\ninterface TrackProps {\n  number: number;\n  songKey: string;\n  title: string;\n  type: SongType;\n  focusPerformers: {\n    name: string[];\n    type: FocusPerformersType;\n  };\n  intl: any;\n  className?: string;\n}\n\nexport const Track = injectIntl(\n  ({\n    intl: { locale },\n    focusPerformers,\n    songKey,\n    number,\n    title,\n    type,\n    className,\n  }: TrackProps) => {\n    const focusPerformersText = React.useMemo(\n      () => getFocusPerformersText(focusPerformers, locale),\n      [focusPerformers, locale]\n    );\n\n    return songKey !== \"OVERTURE\" ? (\n      <motion.div\n        whileHover=\"hover\"\n        variants={containerVariants}\n        className={classNames(styles.container, className)}\n      >\n        <LocalizedLink to={`/songs/${songKey}`}>\n          <motion.span variants={textVariants} className={styles.number}>\n            {number}.\n          </motion.span>\n          <div className={styles.content}>\n            <motion.h3 variants={textVariants} className={styles.title}>\n              {title}\n            </motion.h3>\n            <motion.div variants={textVariants} className={styles.description}>\n              <span>\n                #<Message text={type} />\n              </span>\n              <span>{focusPerformersText}</span>\n            </motion.div>\n          </div>\n        </LocalizedLink>\n      </motion.div>\n    ) : (\n      <div className={classNames(styles.container, className)}>\n        <span className={styles.number}>{number}.</span>\n        <div className={styles.content}>\n          <h3 className={styles.title}>{title}</h3>\n          <div className={styles.description}>\n            <span>\n              #<Message text={type} />\n            </span>\n            <span>{focusPerformersText}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n","import * as React from \"react\";\n\ninterface ArrowLeftIconProps {\n  className?: string;\n}\n\nexport const ArrowLeftIcon = ({ className }: ArrowLeftIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\" />\n  </svg>\n);\n","import * as React from \"react\";\n\ninterface ArrowRightIconProps {\n  className?: string;\n}\n\nexport const ArrowRightIcon = ({ className }: ArrowRightIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport { motion } from \"framer-motion\";\nimport styles from \"./artworks.module.scss\";\nimport { ArrowLeftIcon } from \"components/atoms/icons/ArrowLeftIcon\";\nimport { ArrowRightIcon } from \"components/atoms/icons/ArrowRightIcon\";\nimport { classNames } from \"utils/strings\";\n\ninterface ArtworksProps {\n  artworks: {\n    large: string;\n    medium: string;\n  }[];\n  title: string;\n  className?: string;\n}\n\nexport const Artworks = ({ artworks, title, className }: ArtworksProps) => {\n  const [artworkIndex, setArtworkIndex] = React.useState(0);\n\n  const handleClickNext = React.useCallback(() => {\n    if (artworkIndex < artworks.length - 1) {\n      setArtworkIndex(artworkIndex + 1);\n    } else {\n      setArtworkIndex(0);\n    }\n  }, [artworks, artworkIndex]);\n\n  const handleClickPrevious = React.useCallback(() => {\n    if (artworkIndex > 0) {\n      setArtworkIndex(artworkIndex - 1);\n    } else {\n      setArtworkIndex(artworks.length - 1);\n    }\n  }, [artworks, artworkIndex]);\n\n  return (\n    <div className={classNames(styles.container, className)}>\n      <div className={styles.artwork}>\n        <motion.button\n          whileHover={{ scale: 2, x: -8 }}\n          onClick={handleClickPrevious}\n          aria-label=\"Previous Artwork\"\n        >\n          <ArrowLeftIcon className={styles.arrow} />\n        </motion.button>\n        <motion.div whileHover={{ scale: 1.07 }} className={styles.images}>\n          {artworks.map((artwork, index) => (\n            <motion.img\n              key={index}\n              animate={\n                artworkIndex === index\n                  ? { opacity: 1, scale: 1 }\n                  : { opacity: 0, scale: 0 }\n              }\n              onClick={handleClickNext}\n              src={artwork.medium}\n              srcSet={`${artwork.large} 1.5x`}\n              alt={title}\n              className={styles.image}\n            />\n          ))}\n        </motion.div>\n        <motion.button\n          whileHover={{ scale: 2, x: 8 }}\n          onClick={handleClickNext}\n          aria-label=\"Next Artwork\"\n        >\n          <ArrowRightIcon className={styles.arrow} />\n        </motion.button>\n      </div>\n      <div className={styles.indicator}>\n        {artworks.map((_, index) => (\n          <button\n            key={index}\n            onClick={() => setArtworkIndex(index)}\n            aria-label=\"Next Artwork\"\n          >\n            <div\n              style={{\n                backgroundColor: index === artworkIndex ? \"#757575\" : \"#ffffff\",\n              }}\n              className={styles.dot}\n            />\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { FormattedDate } from \"react-intl\";\nimport { motion } from \"framer-motion\";\nimport styles from \"./cd.module.scss\";\nimport { toCdNumber } from \"utils/strings\";\nimport { Track } from \"components/atoms/Track\";\nimport { CdType, FocusPerformersType, SongType } from \"types/responseTypes\";\nimport { Artworks } from \"components/molecules/Artworks\";\nimport { Links } from \"utils/constants\";\nimport { useScrollRestoration } from \"utils/hooks\";\nimport { Layout } from \"components/atoms/Layout\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\nimport { ArrowBackIcon } from \"components/atoms/icons/ArrowBackIcon\";\nimport { Message } from \"components/atoms/Message\";\n\nconst containerVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      when: \"beforeChildren\",\n    },\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst headingVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst contentContainerVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      when: \"beforeChildren\",\n      staggerChildren: 0.2,\n    },\n  },\n  hidden: {\n    opacity: 0,\n    y: 20,\n  },\n};\n\nconst contentVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n  },\n  hidden: {\n    opacity: 0,\n    y: -20,\n  },\n};\n\ninterface CdProps {\n  type: CdType;\n  title: string;\n  number: string;\n  artworks: {\n    large: string;\n    medium: string;\n  }[];\n  songs: {\n    key: string;\n    title: string;\n    type: SongType;\n    focusPerformers: {\n      name: string[];\n      type: FocusPerformersType;\n    };\n  }[];\n  release: string;\n}\n\nexport const Cd = ({\n  type,\n  title,\n  number,\n  artworks,\n  songs,\n  release,\n}: CdProps) => {\n  useScrollRestoration();\n\n  return (\n    <div className={styles.background}>\n      <Layout className={styles.page}>\n        <motion.div whileHover={{ x: -7, scale: 1.5 }} className={styles.link}>\n          <LocalizedLink\n            to={type === CdType.Singles ? Links.Singles : Links.Albums}\n            label=\"Back\"\n          >\n            <ArrowBackIcon className={styles.back} />\n          </LocalizedLink>\n        </motion.div>\n        <motion.div variants={containerVariants} className={styles.container}>\n          <motion.div variants={headingVariants} className={styles.heading}>\n            <h4 className={styles.number}>\n              {toCdNumber(number)} {type.slice(0, -1)}\n            </h4>\n            <h1 className={styles.title}>{title}</h1>\n          </motion.div>\n          <motion.div\n            variants={contentContainerVariants}\n            className={styles.flexBox}\n          >\n            <motion.div variants={contentVariants} className={styles.artworks}>\n              <Artworks artworks={artworks} title={title} />\n            </motion.div>\n            <motion.div variants={contentVariants} className={styles.content}>\n              <section className={styles.section}>\n                <h2 className={styles.subheading}>\n                  <Message text=\"track\" />\n                </h2>\n                <ul className={styles.trackList}>\n                  {songs.map((song, index) => (\n                    <li key={song.key} className={styles.track}>\n                      <Track\n                        songKey={song.key}\n                        number={index + 1}\n                        title={song.title}\n                        type={song.type}\n                        focusPerformers={song.focusPerformers}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </section>\n              <section className={styles.section}>\n                <h2 className={styles.subheading}>\n                  <Message text=\"release\" />\n                </h2>\n                <p className={styles.release}>\n                  <FormattedDate\n                    value={release}\n                    year=\"numeric\"\n                    month=\"short\"\n                    day=\"numeric\"\n                  />\n                </p>\n              </section>\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      </Layout>\n    </div>\n  );\n};\n"],"sourceRoot":""}