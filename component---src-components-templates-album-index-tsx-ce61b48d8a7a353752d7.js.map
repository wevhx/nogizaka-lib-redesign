{"version":3,"sources":["webpack:///./src/components/templates/Album/index.tsx","webpack:///./src/components/atoms/Layout/index.tsx","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/components/atoms/icons/ArrowBackIcon.tsx","webpack:///./src/utils/strings.ts","webpack:///./src/types/responseTypes.ts","webpack:///./src/components/atoms/Track/index.tsx","webpack:///./src/components/atoms/icons/ArrowLeftIcon.tsx","webpack:///./src/components/atoms/icons/ArrowRightIcon.tsx","webpack:///./src/components/molecules/Artworks/index.tsx","webpack:///./src/components/organisms/Cd/index.tsx"],"names":["query","Album","_ref","data","react__WEBPACK_IMPORTED_MODULE_1__","components_atoms_Layout__WEBPACK_IMPORTED_MODULE_4__","framer_motion__WEBPACK_IMPORTED_MODULE_7__","div","whileHover","x","scale","className","styles","link","components_atoms_locales_LocalizedLink__WEBPACK_IMPORTED_MODULE_2__","to","components_atoms_icons_ArrowBackIcon__WEBPACK_IMPORTED_MODULE_5__","back","components_organisms_Cd__WEBPACK_IMPORTED_MODULE_3__","type","title","albumsJson","number","artworks","songs","release","__webpack_require__","d","__webpack_exports__","Layout","react__WEBPACK_IMPORTED_MODULE_0__","_layout_module_scss__WEBPACK_IMPORTED_MODULE_1__","_layout_module_scss__WEBPACK_IMPORTED_MODULE_1___default","n","children","container","createHTML","url","this","$export","fails","defined","quot","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","ArrowBackIcon","width","height","viewBox","fill","toCdNumber","num","Number","remainderByTen","remainderByHundred","focusPerformersType","SongType","JoinedGenerationType","containerVariants","hover","backgroundColor","transition","duration","textVariants","color","Track","props","focusPerformersText","React","comma","focusPerformers","locale","Language","Zh","Ja","name","Center","reduce","acc","curr","songKey","react","framer_motion_es","variants","LocalizedLink","span","content","h3","description","lib","id","ArrowLeftIcon","ArrowRightIcon","Artworks","_React$useState","artworkIndex","setArtworkIndex","handleClickNextArtwork","handleClickPreviousArtwork","handleClickImage","artwork","button","onClick","ArrowLeftIcon_ArrowLeftIcon","arrow","images","map","index","img","key","animate","opacity","src","medium","srcSet","large","alt","image","ArrowRightIcon_ArrowRightIcon","indicator","_","style","dot","Cd","visible","when","hidden","headingVariants","contentContainerVariants","y","staggerChildren","contentVariants","injectIntl","intl","useScrollRestoration","heading","flexbox","Artworks_Artworks","section","subheading","tracklist","song","Track_Track","track","body","year","month","day"],"mappings":"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","file":"component---src-components-templates-album-index-tsx-ce61b48d8a7a353752d7.js","sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\nimport { Cd } from \"components/organisms/Cd\";\nimport { Layout } from \"components/atoms/Layout\";\nimport { ArrowBackIcon } from \"components/atoms/icons/ArrowBackIcon\";\nimport { focusPerformersType, SongType } from \"types/responseTypes\";\nimport styles from \"./album.module.scss\";\nimport { motion } from \"framer-motion\";\n\nexport const query = graphql`\n  query($number: String!) {\n    albumsJson(number: { eq: $number }) {\n      title\n      number\n      artworks {\n        large\n        medium\n      }\n      songs {\n        key\n        title\n        type\n        focusPerformers {\n          name\n          type\n        }\n      }\n      release\n    }\n  }\n`;\n\ninterface AlbumData {\n  data: {\n    albumsJson: {\n      title: string;\n      number: string;\n      artworks: {\n        large: string;\n        medium: string;\n      }[];\n      songs: {\n        key: string;\n        title: string;\n        type: SongType;\n        focusPerformers: {\n          name: string[];\n          type: focusPerformersType;\n        };\n      }[];\n      release: string;\n    };\n  };\n}\n\nconst navVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      delay: 0.1,\n    },\n  },\n  hidden: {\n    opacity: 0,\n    x: 20,\n  },\n};\n\nconst Album = ({ data }: AlbumData) => (\n  <Layout>\n    <motion.div whileHover={{ x: -7, scale: 1.5 }} className={styles.link}>\n      <LocalizedLink to=\"/cds/?page=albums\">\n        <ArrowBackIcon className={styles.back} />\n      </LocalizedLink>\n    </motion.div>\n    <div>\n      {data ? (\n        <Cd\n          type=\"album\"\n          title={data.albumsJson.title}\n          number={data.albumsJson.number}\n          artworks={data.albumsJson.artworks}\n          songs={data.albumsJson.songs}\n          release={data.albumsJson.release}\n        />\n      ) : (\n        <h1>Album Page</h1>\n      )}\n    </div>\n  </Layout>\n);\n\nexport default Album;\n","import * as React from \"react\";\nimport styles from \"./layout.module.scss\";\n\ninterface LayoutProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Layout = ({ children, className }: LayoutProps) => (\n  <div className={`${className ? className + \" \" : \"\"}${styles.container}`}>\n    {children}\n  </div>\n);\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import * as React from \"react\";\n\ninterface ArrowBackIconProps {\n  className?: string;\n}\n\nexport const ArrowBackIcon = ({ className }: ArrowBackIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n  </svg>\n);\n","import { Language } from \"utils/constants\";\n\nexport const toCdNumber = (num: string | number) => {\n  const number = Number(num);\n\n  if (number) {\n    const remainderByTen = number % 10;\n    const remainderByHundred = number % 100;\n    if (remainderByTen === 1 && remainderByHundred !== 11) {\n      return num + \"st.\";\n    }\n    if (remainderByTen === 2 && remainderByHundred !== 12) {\n      return num + \"nd.\";\n    }\n    if (remainderByTen === 3 && remainderByHundred !== 13) {\n      return num + \"rd.\";\n    } else {\n      return num + \"th.\";\n    }\n  }\n\n  return \"Under\";\n};\n\nexport const toNumberWithLocale = (\n  num: string,\n  language: string,\n  type?: \"cd\" | \"row\"\n) => {\n  let counter = {\n    ja: \"\",\n    zh: \"\",\n  };\n\n  switch (type) {\n    case \"cd\":\n      counter = {\n        ja: \"枚\",\n        zh: \"张\",\n      };\n      break;\n    case \"row\":\n      counter = {\n        ja: \"列\",\n        zh: \"排\",\n      };\n      break;\n    default:\n      counter = {\n        ja: \"枚\",\n        zh: \"张\",\n      };\n      break;\n  }\n\n  if (language === Language.En) {\n    return toCdNumber(num);\n  }\n\n  const number = Number(num);\n\n  if (number) {\n    if (language === Language.Ja) {\n      return num + counter + \"目\";\n    }\n    return \"第\" + num + counter;\n  }\n\n  return \"under\";\n};\n","export enum focusPerformersType {\n  Center = \"center\",\n  Solo = \"solo\",\n  Unit = \"unit\",\n  None = \"\",\n}\n\nexport enum SongType {\n  None = \"none\",\n  Title = \"title\",\n  Coupling = \"coupling\",\n  Lead = \"lead\",\n  Under = \"under\",\n  Unit = \"unit\",\n  Solo = \"solo\",\n  FirstGeneration = \"first generation\",\n  SecondGeneration = \"second generation\",\n  ThirdGeneration = \"third generation\",\n  FourthGeneration = \"fourth generation\",\n  Special = \"special\",\n}\n\nexport enum JoinedGenerationType {\n  First = \"first\",\n  Second = \"second\",\n  Third = \"third\",\n  Fourth = \"fourth\",\n  Exchange = \"exchange\",\n}\n","import * as React from \"react\";\nimport styles from \"./track.module.scss\";\nimport { focusPerformersType, SongType } from \"types/responseTypes\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Language } from \"utils/constants\";\nimport { motion } from \"framer-motion\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\n\nconst containerVariants = {\n  hover: { backgroundColor: \"#595959\", transition: { duration: 0.3 } },\n};\n\nconst textVariants = {\n  hover: { color: \"#ffffff\", transition: { duration: 0.2 } },\n};\n\ninterface TrackProps {\n  number: number;\n  songKey: string;\n  title: string;\n  type: SongType;\n  focusPerformers: {\n    name: string[];\n    type: focusPerformersType;\n  };\n  locale: Language;\n  className?: string;\n}\n\nexport const Track = (props: TrackProps) => {\n  const focusPerformersText = React.useMemo(() => {\n    const { focusPerformers } = props;\n    let comma: string;\n    switch (props.locale) {\n      case Language.Zh:\n        comma = \"、\";\n        break;\n      case Language.Ja:\n        comma = \"・\";\n        break;\n      default:\n        comma = \", \";\n        break;\n    }\n\n    if (focusPerformers.name.length > 0) {\n      if (focusPerformers.type === focusPerformersType.Center) {\n        return (\n          \"C: \" + focusPerformers.name.reduce((acc, curr) => acc + comma + curr)\n        );\n      }\n      return focusPerformers.name.reduce((acc, curr) => acc + comma + curr);\n    }\n    return \"\";\n  }, [props.focusPerformers, props.locale]);\n\n  return props.songKey !== \"OVERTURE\" ? (\n    <motion.div\n      whileHover=\"hover\"\n      variants={containerVariants}\n      className={`${styles.container} + ${\n        props.className ? \" \" + props.className : \"\"\n      }`}\n    >\n      <LocalizedLink to={`/songs/${props.songKey}`}>\n        <motion.span variants={textVariants} className={styles.number}>\n          {props.number}.\n        </motion.span>\n        <div className={styles.content}>\n          <motion.h3 variants={textVariants} className={styles.title}>\n            {props.title}\n          </motion.h3>\n          <motion.div variants={textVariants} className={styles.description}>\n            <span>\n              #<FormattedMessage {...({ id: props.type } as any)} />\n            </span>\n            <span>{focusPerformersText}</span>\n          </motion.div>\n        </div>\n      </LocalizedLink>\n    </motion.div>\n  ) : (\n    <div\n      className={`${styles.container} + ${\n        props.className ? \" \" + props.className : \"\"\n      }`}\n    >\n      <span className={styles.number}>{props.number}.</span>\n      <div className={styles.content}>\n        <h3 className={styles.title}>{props.title}</h3>\n        <div className={styles.description}>\n          <span>\n            #<FormattedMessage {...({ id: props.type } as any)} />\n          </span>\n          <span>{focusPerformersText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\n\ninterface ArrowLeftIconProps {\n  className?: string;\n}\n\nexport const ArrowLeftIcon = ({ className }: ArrowLeftIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\" />\n  </svg>\n);\n","import * as React from \"react\";\n\ninterface ArrowRightIconProps {\n  className?: string;\n}\n\nexport const ArrowRightIcon = ({ className }: ArrowRightIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport styles from \"./artworks.module.scss\";\nimport { ArrowLeftIcon } from \"components/atoms/icons/ArrowLeftIcon\";\nimport { ArrowRightIcon } from \"components/atoms/icons/ArrowRightIcon\";\nimport { motion } from \"framer-motion\";\n\ninterface ArtworksProps {\n  artworks: {\n    large: string;\n    medium: string;\n  }[];\n  title: string;\n  className?: string;\n}\n\nexport const Artworks = ({ artworks, title, className }: ArtworksProps) => {\n  const [artworkIndex, setArtworkIndex] = React.useState(0);\n\n  const handleClickNextArtwork = React.useCallback(() => {\n    if (artworkIndex < artworks.length - 1) {\n      setArtworkIndex(artworkIndex + 1);\n    }\n  }, [artworks, artworkIndex]);\n\n  const handleClickPreviousArtwork = React.useCallback(() => {\n    if (artworkIndex > 0) {\n      setArtworkIndex(artworkIndex - 1);\n    }\n  }, [artworks, artworkIndex]);\n\n  const handleClickImage = React.useCallback(() => {\n    if (artworkIndex < artworks.length - 1) {\n      setArtworkIndex(artworkIndex + 1);\n    } else {\n      setArtworkIndex(0);\n    }\n  }, [artworks, artworkIndex]);\n\n  return (\n    <div className={`${styles.container}${className ? \" \" + className : \"\"}`}>\n      <div className={styles.artwork}>\n        <motion.button\n          whileHover={{ scale: 2, x: -8 }}\n          onClick={handleClickPreviousArtwork}\n        >\n          <ArrowLeftIcon className={styles.arrow} />\n        </motion.button>\n        <motion.div whileHover={{ scale: 1.07 }} className={styles.images}>\n          {artworks.map((artwork, index) => (\n            <motion.img\n              key={index}\n              animate={\n                artworkIndex === index\n                  ? { opacity: 1, scale: 1 }\n                  : { opacity: 0, scale: 0.5 }\n              }\n              src={artwork.medium}\n              srcSet={`${artwork.large} 1.5x`}\n              alt={title}\n              onClick={handleClickImage}\n              className={styles.image}\n            />\n          ))}\n        </motion.div>\n        <motion.button\n          whileHover={{ scale: 2, x: 8 }}\n          onClick={handleClickNextArtwork}\n        >\n          <ArrowRightIcon className={styles.arrow} />\n        </motion.button>\n      </div>\n      <div className={styles.indicator}>\n        {artworks.map((_, index) => (\n          <button key={index} onClick={() => setArtworkIndex(index)}>\n            <div\n              style={{\n                backgroundColor: index === artworkIndex ? \"#757575\" : \"#ffffff\",\n              }}\n              className={styles.dot}\n            />\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { toCdNumber } from \"utils/strings\";\nimport styles from \"./cd.module.scss\";\nimport { Track } from \"components/atoms/Track\";\nimport { focusPerformersType, SongType } from \"types/responseTypes\";\nimport { Artworks } from \"components/molecules/Artworks\";\nimport { FormattedMessage, FormattedDate, injectIntl } from \"react-intl\";\nimport { motion } from \"framer-motion\";\nimport { Language } from \"utils/constants\";\nimport { useScrollRestoration } from \"utils/hooks\";\nimport { string } from \"prop-types\";\n\nconst containerVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      when: \"beforeChildren\",\n    },\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst headingVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst contentContainerVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      when: \"beforeChildren\",\n      staggerChildren: 0.2,\n    },\n  },\n  hidden: {\n    opacity: 0,\n    y: 20,\n  },\n};\n\nconst contentVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n  },\n  hidden: {\n    opacity: 0,\n    y: -20,\n  },\n};\n\ninterface CdProps {\n  type: \"single\" | \"album\";\n  title: string;\n  number: string;\n  artworks: {\n    large: string;\n    medium: string;\n  }[];\n  songs: {\n    key: string;\n    title: string;\n    type: SongType;\n    focusPerformers: {\n      name: string[];\n      type: focusPerformersType;\n    };\n  }[];\n  release: string;\n  intl: any;\n}\n\nexport const Cd = injectIntl(\n  ({ type, title, number, artworks, songs, release, intl }: CdProps) => {\n    useScrollRestoration();\n\n    return (\n      <motion.div variants={containerVariants} className={styles.container}>\n        <motion.div variants={headingVariants} className={styles.heading}>\n          <h4 className={styles.number}>\n            {toCdNumber(number)} {type}\n          </h4>\n          <h1 className={styles.title}>{title}</h1>\n        </motion.div>\n        <motion.div\n          variants={contentContainerVariants}\n          className={styles.flexbox}\n        >\n          <motion.div variants={contentVariants} className={styles.artworks}>\n            <Artworks artworks={artworks} title={title} />\n          </motion.div>\n          <motion.div variants={contentVariants} className={styles.content}>\n            <section className={styles.section}>\n              <h2 className={styles.subheading}>\n                <FormattedMessage {...({ id: \"track\" } as any)} />\n              </h2>\n              <ul className={styles.tracklist}>\n                {songs.map((song, index) => (\n                  <Track\n                    key={song.key}\n                    songKey={song.key}\n                    number={index + 1}\n                    title={song.title}\n                    type={song.type}\n                    focusPerformers={song.focusPerformers}\n                    locale={intl.locale as Language}\n                    className={styles.track}\n                  />\n                ))}\n              </ul>\n            </section>\n            <section className={styles.section}>\n              <h2 className={styles.subheading}>\n                <FormattedMessage {...({ id: \"release\" } as any)} />\n              </h2>\n              <p className={styles.body}>\n                <FormattedDate\n                  value={release}\n                  year=\"numeric\"\n                  month=\"short\"\n                  day=\"numeric\"\n                />\n              </p>\n            </section>\n          </motion.div>\n        </motion.div>\n      </motion.div>\n    );\n  }\n);\n"],"sourceRoot":""}