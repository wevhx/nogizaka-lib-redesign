{"version":3,"sources":["webpack:///./src/containers/Album/index.tsx","webpack:///./src/components/atoms/icons/ArrowBackIcon.tsx","webpack:///./src/components/atoms/Track/index.tsx","webpack:///./src/components/atoms/icons/ArrowLeftIcon.tsx","webpack:///./src/components/atoms/icons/ArrowRightIcon.tsx","webpack:///./src/components/molecules/Artworks/index.tsx","webpack:///./src/components/templates/Cd/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","types_responseTypes__WEBPACK_IMPORTED_MODULE_1__","components_templates_Cd__WEBPACK_IMPORTED_MODULE_2__","AlbumContainer","_ref","albumsJson","data","type","CdType","Albums","title","number","artworks","songs","release","ArrowBackIcon","className","width","height","viewBox","fill","containerVariants","hover","backgroundColor","transition","duration","textVariants","color","Track","locale","focusPerformers","songKey","focusPerformersText","React","comma","Language","Zh","Ja","name","length","FocusPerformersType","Center","reduce","acc","curr","react","framer_motion_es","div","whileHover","variants","classNames","styles","container","LocalizedLink","to","span","content","h3","description","lib","id","ArrowLeftIcon","ArrowRightIcon","Artworks","_React$useState","artworkIndex","setArtworkIndex","handleClickNextArtwork","handleClickPreviousArtwork","handleClickImage","artwork","button","scale","x","onClick","aria-label","ArrowLeftIcon_ArrowLeftIcon","arrow","images","map","index","img","key","animate","opacity","src","medium","srcSet","large","alt","image","ArrowRightIcon_ArrowRightIcon","indicator","_","style","dot","visible","when","hidden","headingVariants","contentContainerVariants","y","staggerChildren","contentVariants","Cd","injectIntl","intl","useScrollRestoration","Layout","background","link","Singles","Links","label","back","heading","toCdNumber","slice","flexbox","Artworks_Artworks","section","subheading","tracklist","song","track","Track_Track","body","value","year","month","day"],"mappings":"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","file":"component---src-containers-album-index-tsx-012db466c6f41c16924c.js","sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { SongType, FocusPerformersType, CdType } from \"types/responseTypes\";\nimport { Cd } from \"components/templates/Cd\";\n\nexport const query = graphql`\n  query($number: String!) {\n    albumsJson(number: { eq: $number }) {\n      title\n      number\n      artworks {\n        large\n        medium\n      }\n      songs {\n        key\n        title\n        type\n        focusPerformers {\n          name\n          type\n        }\n      }\n      release\n    }\n  }\n`;\n\ninterface AlbumJson {\n  data: {\n    albumsJson: {\n      title: string;\n      number: string;\n      artworks: {\n        large: string;\n        medium: string;\n      }[];\n      songs: {\n        key: string;\n        title: string;\n        type: SongType;\n        focusPerformers: {\n          name: string[];\n          type: FocusPerformersType;\n        };\n      }[];\n      release: string;\n    };\n  };\n  pageContext: {\n    cdType: CdType;\n    number: string;\n    locale: string;\n  };\n}\n\nconst AlbumContainer = ({ data: { albumsJson } }: AlbumJson) => {\n  return albumsJson ? (\n    <Cd\n      type={CdType.Albums}\n      title={albumsJson.title}\n      number={albumsJson.number}\n      artworks={albumsJson.artworks}\n      songs={albumsJson.songs}\n      release={albumsJson.release}\n    />\n  ) : null;\n};\n\nexport default AlbumContainer;\n","import * as React from \"react\";\n\ninterface ArrowBackIconProps {\n  className?: string;\n}\n\nexport const ArrowBackIcon = ({ className }: ArrowBackIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport styles from \"./track.module.scss\";\nimport { FocusPerformersType, SongType } from \"types/responseTypes\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Language } from \"utils/constants\";\nimport { motion } from \"framer-motion\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\nimport { classNames } from \"utils/strings\";\n\nconst containerVariants = {\n  hover: { backgroundColor: \"#595959\", transition: { duration: 0.3 } },\n};\n\nconst textVariants = {\n  hover: { color: \"#ffffff\", transition: { duration: 0.2 } },\n};\n\ninterface TrackProps {\n  number: number;\n  songKey: string;\n  title: string;\n  type: SongType;\n  focusPerformers: {\n    name: string[];\n    type: FocusPerformersType;\n  };\n  locale: Language;\n  className?: string;\n}\n\nexport const Track = ({\n  locale,\n  focusPerformers,\n  songKey,\n  number,\n  title,\n  type,\n  className,\n}: TrackProps) => {\n  const focusPerformersText = React.useMemo(() => {\n    let comma: string;\n    switch (locale) {\n      case Language.Zh:\n        comma = \"、\";\n        break;\n      case Language.Ja:\n        comma = \"・\";\n        break;\n      default:\n        comma = \", \";\n        break;\n    }\n\n    if (focusPerformers.name.length > 0) {\n      if (focusPerformers.type === FocusPerformersType.Center) {\n        return (\n          \"C: \" + focusPerformers.name.reduce((acc, curr) => acc + comma + curr)\n        );\n      }\n      return focusPerformers.name.reduce((acc, curr) => acc + comma + curr);\n    }\n    return \"\";\n  }, [focusPerformers, locale]);\n\n  return songKey !== \"OVERTURE\" ? (\n    <motion.div\n      whileHover=\"hover\"\n      variants={containerVariants}\n      className={classNames(styles.container, className)}\n    >\n      <LocalizedLink to={`/songs/${songKey}`}>\n        <motion.span variants={textVariants} className={styles.number}>\n          {number}.\n        </motion.span>\n        <div className={styles.content}>\n          <motion.h3 variants={textVariants} className={styles.title}>\n            {title}\n          </motion.h3>\n          <motion.div variants={textVariants} className={styles.description}>\n            <span>\n              #<FormattedMessage {...({ id: type } as any)} />\n            </span>\n            <span>{focusPerformersText}</span>\n          </motion.div>\n        </div>\n      </LocalizedLink>\n    </motion.div>\n  ) : (\n    <div className={classNames(styles.container, className)}>\n      <span className={styles.number}>{number}.</span>\n      <div className={styles.content}>\n        <h3 className={styles.title}>{title}</h3>\n        <div className={styles.description}>\n          <span>\n            #<FormattedMessage {...({ id: type } as any)} />\n          </span>\n          <span>{focusPerformersText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\n\ninterface ArrowLeftIconProps {\n  className?: string;\n}\n\nexport const ArrowLeftIcon = ({ className }: ArrowLeftIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\" />\n  </svg>\n);\n","import * as React from \"react\";\n\ninterface ArrowRightIconProps {\n  className?: string;\n}\n\nexport const ArrowRightIcon = ({ className }: ArrowRightIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport styles from \"./artworks.module.scss\";\nimport { ArrowLeftIcon } from \"components/atoms/icons/ArrowLeftIcon\";\nimport { ArrowRightIcon } from \"components/atoms/icons/ArrowRightIcon\";\nimport { motion } from \"framer-motion\";\nimport { classNames } from \"utils/strings\";\n\ninterface ArtworksProps {\n  artworks: {\n    large: string;\n    medium: string;\n  }[];\n  title: string;\n  className?: string;\n}\n\nexport const Artworks = ({ artworks, title, className }: ArtworksProps) => {\n  const [artworkIndex, setArtworkIndex] = React.useState(0);\n\n  const handleClickNextArtwork = React.useCallback(() => {\n    if (artworkIndex < artworks.length - 1) {\n      setArtworkIndex(artworkIndex + 1);\n    }\n  }, [artworks, artworkIndex]);\n\n  const handleClickPreviousArtwork = React.useCallback(() => {\n    if (artworkIndex > 0) {\n      setArtworkIndex(artworkIndex - 1);\n    }\n  }, [artworks, artworkIndex]);\n\n  const handleClickImage = React.useCallback(() => {\n    if (artworkIndex < artworks.length - 1) {\n      setArtworkIndex(artworkIndex + 1);\n    } else {\n      setArtworkIndex(0);\n    }\n  }, [artworks, artworkIndex]);\n\n  return (\n    <div className={classNames(styles.container, className)}>\n      <div className={styles.artwork}>\n        <motion.button\n          whileHover={{ scale: 2, x: -8 }}\n          onClick={handleClickPreviousArtwork}\n          aria-label=\"Previous Artwork\"\n        >\n          <ArrowLeftIcon className={styles.arrow} />\n        </motion.button>\n        <motion.div whileHover={{ scale: 1.07 }} className={styles.images}>\n          {artworks.map((artwork, index) => (\n            <motion.img\n              key={index}\n              animate={\n                artworkIndex === index\n                  ? { opacity: 1, scale: 1 }\n                  : { opacity: 0, scale: 0.5 }\n              }\n              src={artwork.medium}\n              srcSet={`${artwork.large} 1.5x`}\n              alt={title}\n              onClick={handleClickImage}\n              className={styles.image}\n            />\n          ))}\n        </motion.div>\n        <motion.button\n          whileHover={{ scale: 2, x: 8 }}\n          onClick={handleClickNextArtwork}\n          aria-label=\"Next Artwork\"\n        >\n          <ArrowRightIcon className={styles.arrow} />\n        </motion.button>\n      </div>\n      <div className={styles.indicator}>\n        {artworks.map((_, index) => (\n          <button\n            key={index}\n            onClick={() => setArtworkIndex(index)}\n            aria-label=\"Next Artwork\"\n          >\n            <div\n              style={{\n                backgroundColor: index === artworkIndex ? \"#757575\" : \"#ffffff\",\n              }}\n              className={styles.dot}\n            />\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { toCdNumber } from \"utils/strings\";\nimport styles from \"./cd.module.scss\";\nimport { Track } from \"components/atoms/Track\";\nimport { FocusPerformersType, SongType, CdType } from \"types/responseTypes\";\nimport { Artworks } from \"components/molecules/Artworks\";\nimport { FormattedMessage, FormattedDate, injectIntl } from \"react-intl\";\nimport { motion } from \"framer-motion\";\nimport { Language, Links } from \"utils/constants\";\nimport { useScrollRestoration } from \"utils/hooks\";\nimport { Layout } from \"components/atoms/Layout\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\nimport { ArrowBackIcon } from \"components/atoms/icons/ArrowBackIcon\";\n\nconst containerVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      when: \"beforeChildren\",\n    },\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst headingVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst contentContainerVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      when: \"beforeChildren\",\n      staggerChildren: 0.2,\n    },\n  },\n  hidden: {\n    opacity: 0,\n    y: 20,\n  },\n};\n\nconst contentVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n  },\n  hidden: {\n    opacity: 0,\n    y: -20,\n  },\n};\n\ninterface CdProps {\n  type: CdType;\n  title: string;\n  number: string;\n  artworks: {\n    large: string;\n    medium: string;\n  }[];\n  songs: {\n    key: string;\n    title: string;\n    type: SongType;\n    focusPerformers: {\n      name: string[];\n      type: FocusPerformersType;\n    };\n  }[];\n  release: string;\n  intl: any;\n}\n\nexport const Cd = injectIntl(\n  ({ type, title, number, artworks, songs, release, intl }: CdProps) => {\n    useScrollRestoration();\n\n    return (\n      <Layout className={styles.background}>\n        <motion.div whileHover={{ x: -7, scale: 1.5 }} className={styles.link}>\n          <LocalizedLink\n            to={type === CdType.Singles ? Links.Singles : Links.Albums}\n            label=\"Back\"\n          >\n            <ArrowBackIcon className={styles.back} />\n          </LocalizedLink>\n        </motion.div>\n        <motion.div variants={containerVariants} className={styles.container}>\n          <motion.div variants={headingVariants} className={styles.heading}>\n            <h4 className={styles.number}>\n              {toCdNumber(number)} {type.slice(0, -1)}\n            </h4>\n            <h1 className={styles.title}>{title}</h1>\n          </motion.div>\n          <motion.div\n            variants={contentContainerVariants}\n            className={styles.flexbox}\n          >\n            <motion.div variants={contentVariants} className={styles.artworks}>\n              <Artworks artworks={artworks} title={title} />\n            </motion.div>\n            <motion.div variants={contentVariants} className={styles.content}>\n              <section className={styles.section}>\n                <h2 className={styles.subheading}>\n                  <FormattedMessage {...({ id: \"track\" } as any)} />\n                </h2>\n                <ul className={styles.tracklist}>\n                  {songs.map((song, index) => (\n                    <li key={song.key} className={styles.track}>\n                      <Track\n                        songKey={song.key}\n                        number={index + 1}\n                        title={song.title}\n                        type={song.type}\n                        focusPerformers={song.focusPerformers}\n                        locale={intl.locale as Language}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </section>\n              <section className={styles.section}>\n                <h2 className={styles.subheading}>\n                  <FormattedMessage {...({ id: \"release\" } as any)} />\n                </h2>\n                <p className={styles.body}>\n                  <FormattedDate\n                    value={release}\n                    year=\"numeric\"\n                    month=\"short\"\n                    day=\"numeric\"\n                  />\n                </p>\n              </section>\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      </Layout>\n    );\n  }\n);\n"],"sourceRoot":""}