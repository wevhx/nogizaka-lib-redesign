{"version":3,"sources":["webpack:///./src/components/templates/Members/index.tsx","webpack:///./src/containers/Members/index.tsx","webpack:///./src/components/atoms/MemberCard/index.tsx"],"names":["listVariants","visible","opacity","transition","when","staggerChildren","duration","hidden","itemVariants","y","Members","page","members","div","key","exit","variants","className","styles","grid","map","name","profileImage","nameNotations","card","MemberCard","image","nameKey","highlightBgColor","highlightTextColor","query","MembersContainer","allMembersJson","data","currentTab","pageContext","allMembers","React","membersData","first","second","third","fourth","graduated","nodes","filter","member","join","JoinedGenerationType","First","graduation","isGraduated","Second","Third","Fourth","sort","memberA","memberB","Date","graduatedDate","getTime","MembersType","FirstGeneration","SecondGeneration","ThirdGeneration","FourthGeneration","Graduated","injectIntl","locale","intl","isCenter","nameText","Language","En","lastNameEn","firstNameEn","lastName","firstName","containerVariants","hover","scale","backgroundColor","textVariants","color","undefined","KOJIHARU","to","link","whileHover","style","container","imageContainer","wrapper","src","small","srcSet","large","alt"],"mappings":"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","file":"component---src-containers-members-index-tsx-147d2cbd75f5279954b3.js","sourcesContent":["import * as React from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport styles from \"./members.module.scss\";\nimport { JoinedGenerationType, MembersType } from \"types/responseTypes\";\nimport { MemberCard } from \"components/atoms/MemberCard\";\n\nconst listVariants = {\n  visible: {\n    opacity: 1,\n    transition: {\n      when: \"beforeChildren\",\n      staggerChildren: 0.04,\n      duration: 0.1,\n    },\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      duration: 0.1,\n    },\n  },\n};\n\nconst itemVariants = {\n  visible: { opacity: 1, y: 0 },\n  hidden: { opacity: 0, y: 20 },\n};\n\nexport type MemberType = {\n  name: string;\n  nameNotations: {\n    lastName: string;\n    firstName: string;\n    lastNameEn: string;\n    firstNameEn: string;\n  };\n  join: JoinedGenerationType;\n  graduation: {\n    isGraduated: boolean;\n  };\n  profileImage: {\n    large: string;\n    small: string;\n  };\n};\n\ninterface MembersProps {\n  page: MembersType;\n  members: MemberType[];\n}\n\nexport const Members = ({ page, members }: MembersProps) => {\n  return (\n    <AnimatePresence>\n      <motion.div\n        key={page}\n        exit=\"hidden\"\n        variants={listVariants}\n        className={styles.grid}\n      >\n        {members.map(({ name, profileImage, nameNotations }) => (\n          <motion.div\n            key={name}\n            variants={itemVariants}\n            className={styles.card}\n          >\n            <MemberCard\n              image={profileImage}\n              nameKey={name}\n              name={nameNotations}\n              highlightBgColor=\"#e887a3\"\n              highlightTextColor=\"#ffffff\"\n            />\n          </motion.div>\n        ))}\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { MemberType, Members } from \"components/templates/Members\";\nimport { JoinedGenerationType, MembersType } from \"types/responseTypes\";\n\nexport const query = graphql`\n  query MembersQuery {\n    allMembersJson {\n      nodes {\n        name\n        nameNotations {\n          lastName\n          firstName\n          lastNameEn\n          firstNameEn\n        }\n        join\n        graduation {\n          isGraduated\n          graduatedDate\n        }\n        profileImage {\n          large\n          small\n        }\n      }\n    }\n  }\n`;\n\ninterface MembersData {\n  data: {\n    allMembersJson: {\n      nodes: {\n        name: string;\n        nameNotations: {\n          lastName: string;\n          firstName: string;\n          lastNameEn: string;\n          firstNameEn: string;\n        };\n        join: JoinedGenerationType;\n        graduation: {\n          isGraduated: boolean;\n          graduatedDate: string;\n        };\n        profileImage: {\n          large: string;\n          small: string;\n        };\n      }[];\n    };\n  };\n  pageContext: {\n    currentTab: MembersType;\n    locale: string;\n  };\n}\n\nconst MembersContainer = ({\n  data: { allMembersJson },\n  pageContext: { currentTab },\n}: MembersData) => {\n  const allMembers = React.useMemo(() => {\n    let membersData: {\n      first: MemberType[];\n      second: MemberType[];\n      third: MemberType[];\n      fourth: MemberType[];\n      graduated: MemberType[];\n    } = {\n      first: [],\n      second: [],\n      third: [],\n      fourth: [],\n      graduated: [],\n    };\n\n    if (allMembersJson) {\n      const { nodes } = allMembersJson;\n\n      membersData = {\n        first: nodes.filter(\n          member =>\n            member.join === JoinedGenerationType.First &&\n            !member.graduation.isGraduated\n        ),\n        second: nodes.filter(\n          member =>\n            member.join === JoinedGenerationType.Second &&\n            !member.graduation.isGraduated\n        ),\n        third: nodes.filter(\n          member =>\n            member.join === JoinedGenerationType.Third &&\n            !member.graduation.isGraduated\n        ),\n        fourth: nodes.filter(\n          member =>\n            member.join === JoinedGenerationType.Fourth &&\n            !member.graduation.isGraduated\n        ),\n        graduated: nodes\n          .filter(member => member.graduation.isGraduated)\n          .sort(\n            (memberA, memberB) =>\n              new Date(memberB.graduation.graduatedDate).getTime() -\n              new Date(memberA.graduation.graduatedDate).getTime()\n          ),\n      };\n    }\n\n    return membersData;\n  }, [allMembersJson]);\n\n  const members = React.useMemo(() => {\n    switch (currentTab) {\n      case MembersType.FirstGeneration:\n        return allMembers.first;\n      case MembersType.SecondGeneration:\n        return allMembers.second;\n      case MembersType.ThirdGeneration:\n        return allMembers.third;\n      case MembersType.FourthGeneration:\n        return allMembers.fourth;\n      case MembersType.Graduated:\n        return allMembers.graduated;\n      default:\n        return allMembers.first;\n    }\n  }, [currentTab, allMembers]);\n\n  return allMembersJson ? (\n    <Members page={currentTab} members={members} />\n  ) : null;\n};\n\nexport default MembersContainer;\n","import * as React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { injectIntl } from \"react-intl\";\nimport styles from \"./membercard.module.scss\";\nimport { KOJIHARU, Language } from \"utils/constants\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\nimport { LazyImage } from \"components/atoms/LazyImage\";\n\ninterface MemberCardProps {\n  image: {\n    large: string;\n    small: string;\n  };\n  nameKey: string;\n  name: {\n    lastName: string;\n    firstName: string;\n    lastNameEn: string;\n    firstNameEn: string;\n  };\n  highlightBgColor?: string;\n  highlightTextColor?: string;\n  isCenter?: boolean;\n  intl: any;\n}\n\nexport const MemberCard = injectIntl(\n  ({\n    image,\n    nameKey,\n    name,\n    intl: { locale },\n    highlightBgColor,\n    highlightTextColor,\n    isCenter,\n  }: MemberCardProps) => {\n    const nameText = React.useMemo(\n      () =>\n        locale === Language.En\n          ? name.lastNameEn + \" \" + name.firstNameEn\n          : name.lastName + \" \" + name.firstName,\n      [locale, name]\n    );\n\n    const containerVariants = React.useMemo(\n      () =>\n        highlightBgColor\n          ? {\n              hover: {\n                scale: 1.08,\n                backgroundColor: highlightBgColor,\n              },\n            }\n          : {\n              hover: {\n                scale: 1.08,\n              },\n            },\n      [highlightBgColor]\n    );\n\n    const textVariants = React.useMemo(\n      () =>\n        highlightTextColor\n          ? {\n              hover: {\n                color: highlightTextColor,\n              },\n            }\n          : undefined,\n      [highlightTextColor]\n    );\n\n    if (nameKey !== KOJIHARU) {\n      return (\n        <LocalizedLink to={`/members/${nameKey}`} className={styles.link}>\n          <motion.div\n            whileHover=\"hover\"\n            variants={containerVariants}\n            transition={{ duration: 0.3 }}\n            style={isCenter ? { backgroundColor: \"#e887a3\" } : undefined}\n            className={styles.container}\n          >\n            <div className={styles.imageContainer}>\n              <div className={styles.wrapper}>\n                <LazyImage\n                  src={image.small}\n                  srcSet={image.large + \" 2x\"}\n                  alt={nameText}\n                  className={styles.image}\n                />\n              </div>\n            </div>\n            <motion.div\n              variants={textVariants}\n              transition={{ duration: 0.3 }}\n              style={isCenter ? { color: \"#ffffff\" } : undefined}\n              className={styles.name}\n            >\n              <span>{nameText}</span>\n            </motion.div>\n          </motion.div>\n        </LocalizedLink>\n      );\n    } else {\n      return (\n        <div\n          style={isCenter ? { backgroundColor: \"#e887a3\" } : undefined}\n          className={styles.container}\n        >\n          <div className={styles.imageContainer}>\n            <div className={styles.wrapper}>\n              <LazyImage\n                src={image.small}\n                srcSet={image.large + \" 2x\"}\n                alt={nameText}\n                className={styles.image}\n              />\n            </div>\n          </div>\n          <div\n            style={isCenter ? { color: \"#ffffff\" } : undefined}\n            className={styles.name}\n          >\n            <span>{nameText}</span>\n          </div>\n        </div>\n      );\n    }\n  }\n);\n"],"sourceRoot":""}