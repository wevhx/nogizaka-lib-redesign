{"version":3,"sources":["webpack:///./src/components/templates/Album/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/templates/Layout/index.tsx","webpack:///./src/components/atoms/LocalizedLink/index.tsx","webpack:///./src/i18n/locales.js","webpack:///./src/components/organisms/Cd/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","components_atoms_LocalizedLink__WEBPACK_IMPORTED_MODULE_1__","components_organisms_Cd__WEBPACK_IMPORTED_MODULE_2__","components_templates_Layout__WEBPACK_IMPORTED_MODULE_3__","Album","props","to","data","albumsJson","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","createElement","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","Layout","_layout_module_scss__WEBPACK_IMPORTED_MODULE_1__","_layout_module_scss__WEBPACK_IMPORTED_MODULE_1___default","className","styles","container","children","LocalizedLink","i18n_locales__WEBPACK_IMPORTED_MODULE_1__","i18n_locales__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","react_intl__WEBPACK_IMPORTED_MODULE_3__","injectIntl","locale","intl","path","locales","en","local","ja","zh","Cd","title","src","artworks","medium","width","alt"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAMaI,EAAK,aAqCHK,UAbD,SAACC,GAAD,OACZL,EAAA,cAACG,EAAA,EAAD,KACEH,EAAA,yBACEA,EAAA,cAACC,EAAA,EAAD,CAAeK,GAAG,qBAChBN,EAAA,sCAGJA,EAAA,0BACGK,EAAME,KAAOP,EAAA,cAACE,EAAA,EAAD,CAAIK,KAAMF,EAAME,KAAKC,aAAiBR,EAAA,8DCtC1D,IAAsBS,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAT,EAAAL,EAAA,GAAAmB,EAAAnB,EAAAoB,EAAAf,GAAAgB,EAAArB,EAAA,IAAAsB,EAAAtB,EAAAoB,EAAAC,GAAAE,EAAAvB,EAAA,IAAAwB,EAAAxB,EAAAoB,EAAAG,GAAAvB,EAAAG,EAAAD,EAAA,sBAAAsB,EAAAC,IAAAzB,EAAA,KAa2B0B,IAAMC,cAAc,IAuDvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,gGClEhBC,EAAmB,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGEV,IAAMW,cAAcC,IAApBC,OAAAC,OAAA,CACLL,WACAC,iBACGA,EAAcK,OALV,MASXR,EAAiBS,UAAY,CAC3BP,SAAUP,IAAUe,MAAM,CACxBC,SAAUhB,IAAUE,OAAOC,aAC1BA,YAGUE,8CCtBfjC,EAAAG,EAAAD,EAAA,sBAAA2C,IAAA,IAAAxC,EAAAL,EAAA,GAAA8C,EAAA9C,EAAA,KAAA+C,EAAA/C,EAAAoB,EAAA0B,GAOaD,EAAS,SAACnC,GAAD,OACpBL,EAAA,qBAAK2C,UAAWC,IAAOC,WAAYxC,EAAMyC,6CCR3CnD,EAAAG,EAAAD,EAAA,sBAAAkD,IAAA,IAAA/C,EAAAL,EAAA,GAAAqD,EAAArD,EAAA,KAAAsD,EAAAtD,EAAAoB,EAAAiC,GAAAE,EAAAvD,EAAA,KAAAwD,EAAAxD,EAAA,IAaaoD,EAAgBK,YAC3B,SAAAvB,GAAuE,IAApEvB,EAAoEuB,EAApEvB,GAAIwC,EAAgEjB,EAAhEiB,SAAkBO,EAA8CxB,EAAtDyB,KAAQD,OAAUV,EAAoCd,EAApCc,UAC3BY,EAAOC,IAAQH,GAAoBxC,QAAUP,EAAtC,IAA+C+C,EAAS/C,EAErE,OACEN,EAAA,cAACkD,EAAA,EAAD,CAAM5C,GAAIiD,EAAMZ,UAAWA,GACxBG,wBClBTpC,EAAOC,QAAU,CACf8C,GAAI,CACFF,KAAM,KACNG,MAAO,WAETC,GAAI,CACFJ,KAAM,KACNG,MAAO,MACP7C,SAAS,GAEX+C,GAAI,CACFL,KAAM,KACNG,MAAO,yCCbX/D,EAAAG,EAAAD,EAAA,sBAAAgE,IAAA,IAAA7D,EAAAL,EAAA,GAYakE,EAAK,SAAAhC,GAAA,IAAGtB,EAAHsB,EAAGtB,KAAH,OAChBP,EAAA,yBACEA,EAAA,wBAAKO,EAAKuD,OACV9D,EAAA,qBAAK+D,IAAKxD,EAAKyD,SAAS,GAAGC,OAAQC,MAAM,QAAQC,IAAK5D,EAAKuD","file":"component---src-components-templates-album-index-tsx-05615f947a2f26ddc8a2.js","sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { LocalizedLink } from \"components/atoms/LocalizedLink\";\nimport { Cd } from \"components/organisms/Cd\";\nimport { Layout } from \"components/templates/Layout\";\n\nexport const query = graphql`\n  query($number: String!) {\n    albumsJson(number: { eq: $number }) {\n      title\n      number\n      artworks {\n        medium\n      }\n    }\n  }\n`;\n\ninterface AlbumData {\n  data: {\n    albumsJson: {\n      title: string;\n      number: string;\n      artworks: {\n        medium: string;\n      }[];\n    };\n  };\n}\n\nconst Album = (props: AlbumData) => (\n  <Layout>\n    <nav>\n      <LocalizedLink to=\"/cds/?page=albums\">\n        <button>Back</button>\n      </LocalizedLink>\n    </nav>\n    <main>\n      {props.data ? <Cd data={props.data.albumsJson} /> : <h1>Album Page</h1>}\n    </main>\n  </Layout>\n);\n\nexport default Album;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from \"react\";\nimport styles from \"./layout.module.scss\";\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nexport const Layout = (props: LayoutProps) => (\n  <div className={styles.container}>{props.children}</div>\n);\n","import * as React from \"react\";\nimport locales from \"i18n/locales\";\nimport { Link } from \"gatsby\";\nimport { injectIntl } from \"react-intl\";\nimport { Language } from \"utils/constants\";\n\ninterface LocalizedLinkProps {\n  to: string;\n  intl: any;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport const LocalizedLink = injectIntl(\n  ({ to, children, intl: { locale }, className }: LocalizedLinkProps) => {\n    const path = locales[locale as Language].default ? to : `/${locale}${to}`;\n\n    return (\n      <Link to={path} className={className}>\n        {children}\n      </Link>\n    );\n  }\n);\n","/* eslint-disable */\nmodule.exports = {\n  en: {\n    path: \"en\",\n    local: \"English\",\n  },\n  ja: {\n    path: \"ja\",\n    local: \"日本語\",\n    default: true,\n  },\n  zh: {\n    path: \"zh\",\n    local: \"中文\",\n  },\n};\n","import * as React from \"react\";\n\ninterface CdProps {\n  data: {\n    title: string;\n    number: string;\n    artworks: {\n      medium: string;\n    }[];\n  };\n}\n\nexport const Cd = ({ data }: CdProps) => (\n  <div>\n    <h2>{data.title}</h2>\n    <img src={data.artworks[0].medium} width=\"300px\" alt={data.title} />\n  </div>\n);\n"],"sourceRoot":""}