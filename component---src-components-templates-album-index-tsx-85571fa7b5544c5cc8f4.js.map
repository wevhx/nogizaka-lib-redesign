{"version":3,"sources":["webpack:///./src/components/templates/Album/index.tsx","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/components/atoms/Layout/index.tsx","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./src/types/responseTypes.ts","webpack:///./src/components/atoms/icons/ArrowBackIcon.tsx","webpack:///./src/components/atoms/Track/index.tsx","webpack:///./src/components/atoms/icons/ArrowLeftIcon.tsx","webpack:///./src/components/atoms/icons/ArrowRightIcon.tsx","webpack:///./src/components/molecules/Artworks/index.tsx","webpack:///./src/components/organisms/Cd/index.tsx"],"names":["query","Album","_ref","data","react__WEBPACK_IMPORTED_MODULE_1__","components_atoms_Layout__WEBPACK_IMPORTED_MODULE_4__","className","styles","background","framer_motion__WEBPACK_IMPORTED_MODULE_7__","div","whileHover","x","scale","link","components_atoms_locales_LocalizedLink__WEBPACK_IMPORTED_MODULE_2__","to","Links","Albums","label","components_atoms_icons_ArrowBackIcon__WEBPACK_IMPORTED_MODULE_5__","back","components_organisms_Cd__WEBPACK_IMPORTED_MODULE_3__","type","title","albumsJson","number","artworks","songs","release","$export","__webpack_require__","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","d","__webpack_exports__","Layout","react__WEBPACK_IMPORTED_MODULE_0__","_layout_module_scss__WEBPACK_IMPORTED_MODULE_1__","_layout_module_scss__WEBPACK_IMPORTED_MODULE_1___default","n","utils_strings__WEBPACK_IMPORTED_MODULE_2__","children","classNames","container","url","this","CdType","MembersType","FocusPerformersType","SongType","JoinedGenerationType","ArrowBackIcon","width","height","viewBox","fill","containerVariants","hover","backgroundColor","transition","duration","textVariants","color","Track","locale","focusPerformers","songKey","focusPerformersText","React","comma","Language","Zh","Ja","name","Center","reduce","acc","curr","react","framer_motion_es","variants","LocalizedLink","span","content","h3","description","lib","id","ArrowLeftIcon","ArrowRightIcon","Artworks","_React$useState","artworkIndex","setArtworkIndex","handleClickNextArtwork","handleClickPreviousArtwork","handleClickImage","artwork","button","onClick","aria-label","ArrowLeftIcon_ArrowLeftIcon","arrow","images","map","index","img","key","animate","opacity","src","medium","srcSet","large","alt","image","ArrowRightIcon_ArrowRightIcon","indicator","_","style","dot","Cd","visible","when","hidden","headingVariants","contentContainerVariants","y","staggerChildren","contentVariants","injectIntl","intl","useScrollRestoration","heading","toCdNumber","flexbox","Artworks_Artworks","section","subheading","tracklist","song","track","Track_Track","body","year","month","day"],"mappings":"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","file":"component---src-components-templates-album-index-tsx-85571fa7b5544c5cc8f4.js","sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\nimport { Cd } from \"components/organisms/Cd\";\nimport { Layout } from \"components/atoms/Layout\";\nimport { ArrowBackIcon } from \"components/atoms/icons/ArrowBackIcon\";\nimport { FocusPerformersType, SongType } from \"types/responseTypes\";\nimport styles from \"./album.module.scss\";\nimport { motion } from \"framer-motion\";\nimport { Links } from \"utils/constants\";\n\nexport const query = graphql`\n  query($number: String!) {\n    albumsJson(number: { eq: $number }) {\n      title\n      number\n      artworks {\n        large\n        medium\n      }\n      songs {\n        key\n        title\n        type\n        focusPerformers {\n          name\n          type\n        }\n      }\n      release\n    }\n  }\n`;\n\ninterface AlbumData {\n  data: {\n    albumsJson: {\n      title: string;\n      number: string;\n      artworks: {\n        large: string;\n        medium: string;\n      }[];\n      songs: {\n        key: string;\n        title: string;\n        type: SongType;\n        focusPerformers: {\n          name: string[];\n          type: FocusPerformersType;\n        };\n      }[];\n      release: string;\n    };\n  };\n}\n\nconst Album = ({ data }: AlbumData) => (\n  <Layout className={styles.background}>\n    <motion.div whileHover={{ x: -7, scale: 1.5 }} className={styles.link}>\n      <LocalizedLink to={Links.Albums} label=\"Back\">\n        <ArrowBackIcon className={styles.back} />\n      </LocalizedLink>\n    </motion.div>\n    <div>\n      {data ? (\n        <Cd\n          type=\"album\"\n          title={data.albumsJson.title}\n          number={data.albumsJson.number}\n          artworks={data.albumsJson.artworks}\n          songs={data.albumsJson.songs}\n          release={data.albumsJson.release}\n        />\n      ) : (\n        <h1>Album Page</h1>\n      )}\n    </div>\n  </Layout>\n);\n\nexport default Album;\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import * as React from \"react\";\nimport styles from \"./layout.module.scss\";\nimport { classNames } from \"utils/strings\";\n\ninterface LayoutProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Layout = ({ children, className }: LayoutProps) => (\n  <div className={classNames(styles.container, className)}>{children}</div>\n);\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","export enum CdType {\n  Singles = \"singles\",\n  Albums = \"albums\",\n}\n\nexport enum MembersType {\n  FirstGeneration = \"first-gen\",\n  SecondGeneration = \"second-gen\",\n  ThirdGeneration = \"third-gen\",\n  FourthGeneration = \"fourth-gen\",\n  Graduated = \"graduated\",\n}\n\nexport enum FocusPerformersType {\n  Center = \"center\",\n  Solo = \"solo\",\n  Unit = \"unit\",\n  None = \"\",\n}\n\nexport enum SongType {\n  None = \"none\",\n  Title = \"title\",\n  Coupling = \"coupling\",\n  Lead = \"lead\",\n  Under = \"under\",\n  Unit = \"unit\",\n  Solo = \"solo\",\n  FirstGeneration = \"first generation\",\n  SecondGeneration = \"second generation\",\n  ThirdGeneration = \"third generation\",\n  FourthGeneration = \"fourth generation\",\n  Special = \"special\",\n}\n\nexport enum JoinedGenerationType {\n  First = \"first\",\n  Second = \"second\",\n  Third = \"third\",\n  Fourth = \"fourth\",\n  Exchange = \"exchange\",\n}\n","import * as React from \"react\";\n\ninterface ArrowBackIconProps {\n  className?: string;\n}\n\nexport const ArrowBackIcon = ({ className }: ArrowBackIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport styles from \"./track.module.scss\";\nimport { FocusPerformersType, SongType } from \"types/responseTypes\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Language } from \"utils/constants\";\nimport { motion } from \"framer-motion\";\nimport { LocalizedLink } from \"components/atoms/locales/LocalizedLink\";\nimport { classNames } from \"utils/strings\";\n\nconst containerVariants = {\n  hover: { backgroundColor: \"#595959\", transition: { duration: 0.3 } },\n};\n\nconst textVariants = {\n  hover: { color: \"#ffffff\", transition: { duration: 0.2 } },\n};\n\ninterface TrackProps {\n  number: number;\n  songKey: string;\n  title: string;\n  type: SongType;\n  focusPerformers: {\n    name: string[];\n    type: FocusPerformersType;\n  };\n  locale: Language;\n  className?: string;\n}\n\nexport const Track = ({\n  locale,\n  focusPerformers,\n  songKey,\n  number,\n  title,\n  type,\n  className,\n}: TrackProps) => {\n  const focusPerformersText = React.useMemo(() => {\n    let comma: string;\n    switch (locale) {\n      case Language.Zh:\n        comma = \"、\";\n        break;\n      case Language.Ja:\n        comma = \"・\";\n        break;\n      default:\n        comma = \", \";\n        break;\n    }\n\n    if (focusPerformers.name.length > 0) {\n      if (focusPerformers.type === FocusPerformersType.Center) {\n        return (\n          \"C: \" + focusPerformers.name.reduce((acc, curr) => acc + comma + curr)\n        );\n      }\n      return focusPerformers.name.reduce((acc, curr) => acc + comma + curr);\n    }\n    return \"\";\n  }, [focusPerformers, locale]);\n\n  return songKey !== \"OVERTURE\" ? (\n    <motion.div\n      whileHover=\"hover\"\n      variants={containerVariants}\n      className={classNames(styles.container, className)}\n    >\n      <LocalizedLink to={`/songs/${songKey}`}>\n        <motion.span variants={textVariants} className={styles.number}>\n          {number}.\n        </motion.span>\n        <div className={styles.content}>\n          <motion.h3 variants={textVariants} className={styles.title}>\n            {title}\n          </motion.h3>\n          <motion.div variants={textVariants} className={styles.description}>\n            <span>\n              #<FormattedMessage {...({ id: type } as any)} />\n            </span>\n            <span>{focusPerformersText}</span>\n          </motion.div>\n        </div>\n      </LocalizedLink>\n    </motion.div>\n  ) : (\n    <div className={classNames(styles.container, className)}>\n      <span className={styles.number}>{number}.</span>\n      <div className={styles.content}>\n        <h3 className={styles.title}>{title}</h3>\n        <div className={styles.description}>\n          <span>\n            #<FormattedMessage {...({ id: type } as any)} />\n          </span>\n          <span>{focusPerformersText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\n\ninterface ArrowLeftIconProps {\n  className?: string;\n}\n\nexport const ArrowLeftIcon = ({ className }: ArrowLeftIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\" />\n  </svg>\n);\n","import * as React from \"react\";\n\ninterface ArrowRightIconProps {\n  className?: string;\n}\n\nexport const ArrowRightIcon = ({ className }: ArrowRightIconProps) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={className}>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport styles from \"./artworks.module.scss\";\nimport { ArrowLeftIcon } from \"components/atoms/icons/ArrowLeftIcon\";\nimport { ArrowRightIcon } from \"components/atoms/icons/ArrowRightIcon\";\nimport { motion } from \"framer-motion\";\nimport { classNames } from \"utils/strings\";\n\ninterface ArtworksProps {\n  artworks: {\n    large: string;\n    medium: string;\n  }[];\n  title: string;\n  className?: string;\n}\n\nexport const Artworks = ({ artworks, title, className }: ArtworksProps) => {\n  const [artworkIndex, setArtworkIndex] = React.useState(0);\n\n  const handleClickNextArtwork = React.useCallback(() => {\n    if (artworkIndex < artworks.length - 1) {\n      setArtworkIndex(artworkIndex + 1);\n    }\n  }, [artworks, artworkIndex]);\n\n  const handleClickPreviousArtwork = React.useCallback(() => {\n    if (artworkIndex > 0) {\n      setArtworkIndex(artworkIndex - 1);\n    }\n  }, [artworks, artworkIndex]);\n\n  const handleClickImage = React.useCallback(() => {\n    if (artworkIndex < artworks.length - 1) {\n      setArtworkIndex(artworkIndex + 1);\n    } else {\n      setArtworkIndex(0);\n    }\n  }, [artworks, artworkIndex]);\n\n  return (\n    <div className={classNames(styles.container, className)}>\n      <div className={styles.artwork}>\n        <motion.button\n          whileHover={{ scale: 2, x: -8 }}\n          onClick={handleClickPreviousArtwork}\n          aria-label=\"Previous Artwork\"\n        >\n          <ArrowLeftIcon className={styles.arrow} />\n        </motion.button>\n        <motion.div whileHover={{ scale: 1.07 }} className={styles.images}>\n          {artworks.map((artwork, index) => (\n            <motion.img\n              key={index}\n              animate={\n                artworkIndex === index\n                  ? { opacity: 1, scale: 1 }\n                  : { opacity: 0, scale: 0.5 }\n              }\n              src={artwork.medium}\n              srcSet={`${artwork.large} 1.5x`}\n              alt={title}\n              onClick={handleClickImage}\n              className={styles.image}\n            />\n          ))}\n        </motion.div>\n        <motion.button\n          whileHover={{ scale: 2, x: 8 }}\n          onClick={handleClickNextArtwork}\n          aria-label=\"Next Artwork\"\n        >\n          <ArrowRightIcon className={styles.arrow} />\n        </motion.button>\n      </div>\n      <div className={styles.indicator}>\n        {artworks.map((_, index) => (\n          <button\n            key={index}\n            onClick={() => setArtworkIndex(index)}\n            aria-label=\"Next Artwork\"\n          >\n            <div\n              style={{\n                backgroundColor: index === artworkIndex ? \"#757575\" : \"#ffffff\",\n              }}\n              className={styles.dot}\n            />\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { toCdNumber } from \"utils/strings\";\nimport styles from \"./cd.module.scss\";\nimport { Track } from \"components/atoms/Track\";\nimport { FocusPerformersType, SongType } from \"types/responseTypes\";\nimport { Artworks } from \"components/molecules/Artworks\";\nimport { FormattedMessage, FormattedDate, injectIntl } from \"react-intl\";\nimport { motion } from \"framer-motion\";\nimport { Language } from \"utils/constants\";\nimport { useScrollRestoration } from \"utils/hooks\";\n\nconst containerVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      when: \"beforeChildren\",\n    },\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst headingVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n  },\n  hidden: {\n    opacity: 0,\n    x: -20,\n  },\n};\n\nconst contentContainerVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      when: \"beforeChildren\",\n      staggerChildren: 0.2,\n    },\n  },\n  hidden: {\n    opacity: 0,\n    y: 20,\n  },\n};\n\nconst contentVariants = {\n  visible: {\n    opacity: 1,\n    y: 0,\n  },\n  hidden: {\n    opacity: 0,\n    y: -20,\n  },\n};\n\ninterface CdProps {\n  type: \"single\" | \"album\";\n  title: string;\n  number: string;\n  artworks: {\n    large: string;\n    medium: string;\n  }[];\n  songs: {\n    key: string;\n    title: string;\n    type: SongType;\n    focusPerformers: {\n      name: string[];\n      type: FocusPerformersType;\n    };\n  }[];\n  release: string;\n  intl: any;\n}\n\nexport const Cd = injectIntl(\n  ({ type, title, number, artworks, songs, release, intl }: CdProps) => {\n    useScrollRestoration();\n\n    return (\n      <motion.div variants={containerVariants} className={styles.container}>\n        <motion.div variants={headingVariants} className={styles.heading}>\n          <h4 className={styles.number}>\n            {toCdNumber(number)} {type}\n          </h4>\n          <h1 className={styles.title}>{title}</h1>\n        </motion.div>\n        <motion.div\n          variants={contentContainerVariants}\n          className={styles.flexbox}\n        >\n          <motion.div variants={contentVariants} className={styles.artworks}>\n            <Artworks artworks={artworks} title={title} />\n          </motion.div>\n          <motion.div variants={contentVariants} className={styles.content}>\n            <section className={styles.section}>\n              <h2 className={styles.subheading}>\n                <FormattedMessage {...({ id: \"track\" } as any)} />\n              </h2>\n              <ul className={styles.tracklist}>\n                {songs.map((song, index) => (\n                  <li key={song.key} className={styles.track}>\n                    <Track\n                      songKey={song.key}\n                      number={index + 1}\n                      title={song.title}\n                      type={song.type}\n                      focusPerformers={song.focusPerformers}\n                      locale={intl.locale as Language}\n                    />\n                  </li>\n                ))}\n              </ul>\n            </section>\n            <section className={styles.section}>\n              <h2 className={styles.subheading}>\n                <FormattedMessage {...({ id: \"release\" } as any)} />\n              </h2>\n              <p className={styles.body}>\n                <FormattedDate\n                  value={release}\n                  year=\"numeric\"\n                  month=\"short\"\n                  day=\"numeric\"\n                />\n              </p>\n            </section>\n          </motion.div>\n        </motion.div>\n      </motion.div>\n    );\n  }\n);\n"],"sourceRoot":""}